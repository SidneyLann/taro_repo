{"version":3,"file":"pkglogistics/sub-vendors.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AACA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAAA;AAGA","sources":["webpack://i_bizz_client/._src_component_MyMap.tsx"],"sourcesContent":["import React from 'react';\r\nimport Taro,{ Current } from '@tarojs/taro'\r\nimport { Map } from \"@tarojs/components\"\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\nimport callImage from 'img/p/loc-green.png';\r\n\r\nclass MyMap extends React.Component {\r\n\r\n  componentDidMount() {\r\n\t  this.getCurrLocation();\r\n  }\r\n  \r\n  getCurrLocation = () => {\r\n    Taro.getLocation({type: 'wgs84', altitude: true, isHighAccuracy: true, highAccuracyExpireTime: 10000, success: (res) => {this.props.onRegionchange(res.longitude, res.latitude)}})\r\n  }\r\n  \r\n  onRegionchange = (e) => {\r\n\t    if (e.type == 'end') {\r\n\t      const mapCtx = Taro.createMapContext('mapId', this)\r\n\t      mapCtx.getCenterLocation({type: 'wgs84', success: (res) => {this.props.onRegionchange(res.longitude, res.latitude)}})\r\n\t    }\r\n  }\r\n\r\n\r\n    render() {    \r\n      const setting = {\r\n        subkey: JsUtil.TENCENT_MAP_KEY,\r\n        skew: 0,\r\n        rotate: 0,\r\n        showLocation: false,\r\n        showScale: false,\r\n        layerStyle: 1,\r\n        enableZoom: true,\r\n        enableScroll: true,\r\n        enableRotate: false,\r\n        showCompass: false,\r\n        enable3D: false,\r\n        enableOverlooking: false,\r\n        enableSatellite: false,\r\n        enableTraffic: false\r\n      }\r\n    \r\n        return  (\r\n            <Map\r\n\t          id=\"mapId\"\r\n\t          longitude={this.props.longitude}\r\n\t          latitude={this.props.latitude}\r\n\t          markers={this.props.markers}\r\n\t          setting={setting}\r\n\t          showLocation={true}\r\n\t          onRegionchange={this.onRegionchange}\r\n              onCalloutTap={this.props.onCalloutTap}\r\n              style=\"width: 100%; height: 100vh;\"\r\n\t        >\r\n\t        </Map>\r\n           )\r\n    }\r\n}\r\n\r\nexport default MyMap\r\n"],"names":[],"sourceRoot":""}