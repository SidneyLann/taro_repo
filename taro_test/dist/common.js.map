{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;ACjtuzpCA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAgCA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAMA;AASA;AAGA;AAAA;AAAA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AA7CA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AAAA;AAIA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpIA;AACA;AACA;AACA;AAAA;AAKA;AAMA;AASA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AAAA;AAGA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAIA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAKA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAKA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AAAA;AAEA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AAEA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AAAA;AAEA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAGA","sources":["webpack://i_bizz_client/._src_common_Constant.tsx","webpack://i_bizz_client/._src_common_JsUtil.tsx","webpack://i_bizz_client/._src_common_Permissions.tsx","webpack://i_bizz_client/._src_common_URI.tsx","webpack://i_bizz_client/._src_component_BottomOpBar.tsx","webpack://i_bizz_client/._src_component_TaroModal.tsx","webpack://i_bizz_client/._src_component_TopNavBar.tsx","webpack://i_bizz_client/._src_form_CascadeBox.tsx","webpack://i_bizz_client/._src_form_CheckBoxes.tsx","webpack://i_bizz_client/._src_form_GeneralButton.tsx","webpack://i_bizz_client/._src_form_ImagePicker.tsx","webpack://i_bizz_client/._src_form_IntegerInput.tsx","webpack://i_bizz_client/._src_form_SelectInput.tsx","webpack://i_bizz_client/._src_layout_CardLayout.tsx","webpack://i_bizz_client/._src_layout_CarouselLayout.tsx","webpack://i_bizz_client/._src_layout_CategoryLayout.tsx","webpack://i_bizz_client/._src_layout_CharacteristicLayout.tsx","webpack://i_bizz_client/._src_layout_ColumnLayout.tsx","webpack://i_bizz_client/._src_layout_CommodityLayout.tsx","webpack://i_bizz_client/._src_layout_FloorLayout.tsx","webpack://i_bizz_client/._src_layout_FootLayout.tsx","webpack://i_bizz_client/._src_layout_GridLayout.tsx","webpack://i_bizz_client/._src_layout_HeadLayout.tsx","webpack://i_bizz_client/._src_layout_RowLayout.tsx","webpack://i_bizz_client/._src_view_BaseView.tsx","webpack://i_bizz_client/._src_view_BrView.tsx","webpack://i_bizz_client/._src_view_CellView.tsx","webpack://i_bizz_client/._src_view_DivView.tsx","webpack://i_bizz_client/._src_view_LegenImage.tsx","webpack://i_bizz_client/._src_view_Level1View.tsx","webpack://i_bizz_client/._src_view_Level2View.tsx","webpack://i_bizz_client/._src_view_LinkTag.tsx","webpack://i_bizz_client/._src_view_ListItem.tsx","webpack://i_bizz_client/._src_view_ListView.tsx","webpack://i_bizz_client/._src_view_ScrollableView.tsx","webpack://i_bizz_client/._src_view_SimpleIcon.tsx","webpack://i_bizz_client/._src_view_TabPane.tsx","webpack://i_bizz_client/._src_view_TextLabel.tsx"],"sourcesContent":["const cnst = {}\r\n\r\nconst APP_ID = \"wx6d5349c493a7baa2\";\r\ncnst.APP_ID = APP_ID;\r\n\r\nconst BIZZ_CAT_COMMON = 131;\r\ncnst.BIZZ_CAT_COMMON = BIZZ_CAT_COMMON;\r\n\r\nconst BIZZ_CAT_SUBJECT = 171;\r\ncnst.BIZZ_CAT_SUBJECT = BIZZ_CAT_SUBJECT;\r\n\r\nconst BIZZ_CAT_COMMODITY = 331;\r\ncnst.BIZZ_CAT_COMMODITY = BIZZ_CAT_COMMODITY;\r\n\r\nconst BIZZ_CAT_ORDER = 531;\r\ncnst.BIZZ_CAT_ORDER = BIZZ_CAT_ORDER;\r\n\r\nconst BIZZ_CAT_NOAUTH = 731;\r\ncnst.BIZZ_CAT_NOAUTH = BIZZ_CAT_NOAUTH;\r\n\r\nconst BIZZ_CAT_DRAW = 931;\r\ncnst.BIZZ_CAT_DRAW = BIZZ_CAT_DRAW;\r\n\r\nconst BIZZ_CAT_PINAO = 961;\r\ncnst.BIZZ_CAT_PINAO = BIZZ_CAT_PINAO;\r\n\r\nconst CODE_COMM_0_SUCCESS = 0;\r\ncnst.CODE_COMM_0_SUCCESS = CODE_COMM_0_SUCCESS;\r\n\r\nconst CODE_COMM_GRANT_EXPIRED = 21;\r\ncnst.CODE_COMM_GRANT_EXPIRED = CODE_COMM_GRANT_EXPIRED;\r\n\r\nconst CODE_COMM_INPUT_ERROR = 70;\r\ncnst.CODE_COMM_INPUT_ERROR = CODE_COMM_INPUT_ERROR;\r\n\r\nconst COUNT_FLOOR_COMMODITY = 8;\r\ncnst.COUNT_FLOOR_COMMODITY = COUNT_FLOOR_COMMODITY;\r\n\r\nconst COLOR_BACKGROUND_DEEP_BLUE = '#3F51B5';\r\ncnst.COLOR_BACKGROUND_DEEP_BLUE = COLOR_BACKGROUND_DEEP_BLUE;\r\n\r\n//const COLOR_BACKGROUND_NEAR_WHITE = [255, 255, 0, 1];\r\nconst COLOR_BACKGROUND_NEAR_WHITE = [250, 250, 250, 1];\r\ncnst.COLOR_BACKGROUND_NEAR_WHITE = COLOR_BACKGROUND_NEAR_WHITE;\r\n\r\n//const COLOR_BACKGROUND_WHITE = [255, 0, 255, 1];\r\nconst COLOR_BACKGROUND_WHITE = [255, 255, 255, 1];\r\ncnst.COLOR_BACKGROUND_WHITE = COLOR_BACKGROUND_WHITE;\r\n\r\nconst COLOR_BACKGROUND_TRANS_WHITE = [255, 255, 255, 0];\r\ncnst.COLOR_BACKGROUND_TRANS_WHITE = COLOR_BACKGROUND_TRANS_WHITE;\r\n\r\nconst DELIVERY_TYPE_EXPRESS = 1;\r\ncnst.DELIVERY_TYPE_EXPRESS = DELIVERY_TYPE_EXPRESS;\r\n\r\nconst DELIVERY_TYPE_EXPRESS_CHANGE = 3;\r\ncnst.DELIVERY_TYPE_EXPRESS_CHANGE = DELIVERY_TYPE_EXPRESS_CHANGE;\r\n\r\nconst DELIVERY_TYPE_IMMEDIATELY = 5;\r\ncnst.DELIVERY_TYPE_IMMEDIATELY = DELIVERY_TYPE_IMMEDIATELY;\r\n\r\nconst DELIVERY_TYPE_SELF_PICKUP = 7;\r\ncnst.DELIVERY_TYPE_SELF_PICKUP = DELIVERY_TYPE_SELF_PICKUP;\r\n\r\nconst DELIVERY_TYPE_ONLINE = 9;\r\ncnst.DELIVERY_TYPE_ONLINE = DELIVERY_TYPE_ONLINE;\r\n\r\nconst EXPRESS_FIRM_ID_PCG = 168168;\r\ncnst.EXPRESS_FIRM_ID_PCG = EXPRESS_FIRM_ID_PCG;\r\n\r\nconst EXPRESS_FIRM_ID_SELF_DELIVERY = 10135;\r\ncnst.EXPRESS_FIRM_ID_SELF_DELIVERY = EXPRESS_FIRM_ID_SELF_DELIVERY;\r\n\r\nconst EXPRESS_FIRM_ID_SELF_PICKUP = 30;\r\ncnst.EXPRESS_FIRM_ID_SELF_PICKUP = EXPRESS_FIRM_ID_SELF_PICKUP;\r\n\r\nconst EXPRESS_FIRM_ID_ONLINE = 20;\r\ncnst.EXPRESS_FIRM_ID_ONLINE = EXPRESS_FIRM_ID_ONLINE;\r\n\r\nconst FLEX_DEFAULT_FLEX_START = 'flex-start';\r\ncnst.FLEX_DEFAULT_FLEX_START = FLEX_DEFAULT_FLEX_START;\r\n\r\nconst FLEX_DEFAULT_ALIGN_ITEMS = 'stretch';\r\ncnst.FLEX_DEFAULT_ALIGN_ITEMS = FLEX_DEFAULT_ALIGN_ITEMS;\r\n\r\nconst FLOAT_EXTREMELY_SMALL = 0.001;\r\ncnst.FLOAT_EXTREMELY_SMALL = FLOAT_EXTREMELY_SMALL;\r\n\r\nconst ID_BRAND_DEFAULT = '8';\r\ncnst.ID_BRAND_DEFAULT = ID_BRAND_DEFAULT;\r\n\r\nconst ID_FREIGHT_TEMPLATE_DEFAULT = '8';\r\ncnst.ID_FREIGHT_TEMPLATE_DEFAULT = ID_FREIGHT_TEMPLATE_DEFAULT;\r\n\r\nconst ID_HQ = '8';\r\ncnst.ID_HQ = ID_HQ;\r\n\r\nconst ID_NO = '-1';\r\ncnst.ID_NO = ID_NO;\r\n\r\nconst ID_STRING_NULL = '0';\r\ncnst.ID_STRING_NULL = ID_STRING_NULL;\r\n\r\nconst ID_TOP_REGION = '8';\r\ncnst.ID_TOP_REGION = ID_TOP_REGION;\r\n\r\nconst ID_TOP_CATEGORY = '8';\r\ncnst.ID_TOP_CATEGORY = ID_TOP_CATEGORY;\r\n\r\nconst MALL_TYPE_G_B2B = 1;\r\ncnst.MALL_TYPE_G_B2B = MALL_TYPE_G_B2B;\r\n\r\nconst MALL_TYPE_G_B2C = 3;\r\ncnst.MALL_TYPE_G_B2C = MALL_TYPE_G_B2C;\r\n\r\nconst MALL_TYPE_R_B2B = 5;\r\ncnst.MALL_TYPE_R_B2B = MALL_TYPE_R_B2B;\r\n\r\nconst MALL_TYPE_R_B2C = 7;\r\ncnst.MALL_TYPE_R_B2C = MALL_TYPE_R_B2C;\r\n\r\nconst MAX_STEP_NUM = 6;\r\ncnst.MAX_STEP_NUM = MAX_STEP_NUM;\r\n\r\nconst MENU_MENU_SP_B2B_G = 1;\r\ncnst.MENU_SP_G_B2B = MENU_MENU_SP_B2B_G;\r\n\r\nconst MENU_MENU_SP_B2B_R = 3;\r\ncnst.MENU_SP_R_B2B = MENU_MENU_SP_B2B_R;\r\n\r\nconst MENU_MENU_SP_B2C_G = 5;\r\ncnst.MENU_SP_G_B2C = MENU_MENU_SP_B2C_G;\r\n\r\nconst MENU_MENU_SP_B2C_R = 7;\r\ncnst.MENU_SP_R_B2C = MENU_MENU_SP_B2C_R;\r\n\r\nconst MENU_HQ_B2B_G = 9;\r\ncnst.MENU_HQ_G_B2B = MENU_HQ_B2B_G;\r\n\r\nconst MENU_HQ_B2B_R = 11;\r\ncnst.MENU_HQ_R_B2B = MENU_HQ_B2B_R;\r\n\r\nconst MENU_HQ_B2C_G = 13;\r\ncnst.MENU_HQ_G_B2C = MENU_HQ_B2C_G;\r\n\r\nconst MENU_HQ_B2C_R = 15;\r\ncnst.MENU_HQ_R_B2C = MENU_HQ_B2C_R;\r\n\r\nconst MENU_OP_B2B_G = 17;\r\ncnst.MENU_OP_G_B2B = MENU_OP_B2B_G;\r\n\r\nconst MENU_OP_B2B_R = 19;\r\ncnst.MENU_OP_R_B2B = MENU_OP_B2B_R;\r\n\r\nconst MENU_OP_B2C_G = 21;\r\ncnst.MENU_OP_G_B2C = MENU_OP_B2C_G;\r\n\r\nconst MENU_OP_B2C_R = 23;\r\ncnst.MENU_OP_R_B2C = MENU_OP_B2C_R;\r\n\r\nconst MENU_SS_B2B_G = 25;\r\ncnst.MENU_SS_G_B2B = MENU_SS_B2B_G;\r\n\r\nconst MENU_SS_B2B_R = 27;\r\ncnst.MENU_SS_R_B2B = MENU_SS_B2B_R;\r\n\r\nconst MENU_SS_B2C_G = 29;\r\ncnst.MENU_SS_G_B2C = MENU_SS_B2C_G;\r\n\r\nconst MENU_SS_B2C_R = 31;\r\ncnst.MENU_SS_R_B2C = MENU_SS_B2C_R;\r\n\r\nconst MENU_MB_B2B_G = 33;\r\ncnst.MENU_MB_G_B2B = MENU_MB_B2B_G;\r\n\r\nconst MENU_MB_B2B_R = 35;\r\ncnst.MENU_MB_R_B2B = MENU_MB_B2B_R;\r\n\r\nconst MENU_MB_B2C_G = 37;\r\ncnst.MENU_MB_G_B2C = MENU_MB_B2C_G;\r\n\r\nconst MENU_MB_B2C_R = 39;\r\ncnst.MENU_MB_R_B2C = MENU_MB_B2C_R;\r\n\r\nconst MENU_SHOW_ALL_OP = 41;\r\ncnst.MENU_SHOW_ALL_OP = MENU_SHOW_ALL_OP;\r\n\r\nconst NAME_HQ = '柏君商城全国总部';\r\ncnst.NAME_HQ = NAME_HQ;\r\n\r\nconst NUM_FLOAT_TINY = 0.00001;\r\ncnst.NUM_FLOAT_TINY = NUM_FLOAT_TINY;\r\n\r\nconst NUM_FLOAT_0_01 = 0.01;\r\ncnst.NUM_FLOAT_0_01 = NUM_FLOAT_0_01;\r\n\r\nconst NUM_WIDTH_LABEL = -24;\r\ncnst.NUM_WIDTH_LABEL = NUM_WIDTH_LABEL;\r\n\r\nconst NUM_WIDTH_VALUE = -72;\r\ncnst.NUM_WIDTH_VALUE = NUM_WIDTH_VALUE;\r\n\r\nconst NUM_WIDTH_MAIN = -96;\r\ncnst.NUM_WIDTH_MAIN = NUM_WIDTH_MAIN;\r\n\r\nconst NUM_HEIGHT_MAIN = -100;\r\ncnst.NUM_HEIGHT_MAIN = NUM_HEIGHT_MAIN;\r\n\r\nconst NUM_HEIGHT_LINE = 16;\r\ncnst.NUM_HEIGHT_LINE = NUM_HEIGHT_LINE;\r\n\r\nconst OP_OPTION_TYPE_ALL = 1;\r\ncnst.OP_OPTION_TYPE_ALL = OP_OPTION_TYPE_ALL;\r\n\r\nconst OP_OPTION_TYPE_SUPPLIER = 3;\r\ncnst.OP_OPTION_TYPE_SUPPLIER = OP_OPTION_TYPE_SUPPLIER;\r\n\r\nconst OP_OPTION_TYPE_SELF = 5;\r\ncnst.OP_OPTION_TYPE_SELF = OP_OPTION_TYPE_SELF;\r\n\r\nconst OP_OPTION_TYPE_SERVICE_STATION = 7;\r\ncnst.OP_OPTION_TYPE_SERVICE_STATION = OP_OPTION_TYPE_SERVICE_STATION;\r\n\r\nconst OP_OPTION_TYPE_HQ = 9;\r\ncnst.OP_OPTION_TYPE_HQ = OP_OPTION_TYPE_HQ;\r\n\r\nconst ORG_TYPE_SP_G = 1;\r\ncnst.ORG_TYPE_SP_G = ORG_TYPE_SP_G;\r\n\r\nconst ORG_TYPE_SP_R = 3;\r\ncnst.ORG_TYPE_SP_R = ORG_TYPE_SP_R;\r\n\r\nconst ORG_TYPE_SP_B = 5;\r\ncnst.ORG_TYPE_SP_B = ORG_TYPE_SP_B;\r\n\r\nconst ORG_TYPE_HQ = 7;\r\ncnst.ORG_TYPE_HQ = ORG_TYPE_HQ;\r\n\r\nconst ORG_TYPE_OP = 9;\r\ncnst.ORG_TYPE_OP = ORG_TYPE_OP;\r\n\r\nconst ORG_TYPE_SS = 11;\r\ncnst.ORG_TYPE_SS = ORG_TYPE_SS;\r\n\r\nconst ORG_TYPE_MB = 13;\r\ncnst.ORG_TYPE_MB = ORG_TYPE_MB;\r\n\r\nconst PAGE_SIZE = 30;\r\ncnst.PAGE_SIZE = PAGE_SIZE;\r\n\r\nconst PAY_TYPE_WX = 11;\r\ncnst.PAY_TYPE_WX = PAY_TYPE_WX;\r\n\r\nconst PRICING_METHOD_PRICE = 1;\r\ncnst.PRICING_METHOD_PRICE = PRICING_METHOD_PRICE;\r\n\r\nconst PRICING_METHOD_WEIGHT = 3;\r\ncnst.PRICING_METHOD_WEIGHT = PRICING_METHOD_WEIGHT;\r\n\r\nconst PRICING_METHOD_MONEY_AMOUNT = 5;\r\ncnst.PRICING_METHOD_MONEY_AMOUNT = PRICING_METHOD_MONEY_AMOUNT;\r\n\r\nconst REQUEST_TYPE_WWW = 'application/x-www-form-urlencoded';\r\ncnst.REQUEST_TYPE_WWW = REQUEST_TYPE_WWW;\r\n\r\nconst REQURIED_LOGIN_URI = '/mb/pub/create';\r\ncnst.REQURIED_LOGIN_URI = REQURIED_LOGIN_URI;\r\n\r\nconst SHIP_TYPE_SELLER = 1;\r\ncnst.SHIP_TYPE_SELLER = SHIP_TYPE_SELLER;\r\n\r\nconst SHIP_TYPE_BUYER = 3;\r\ncnst.SHIP_TYPE_BUYER = SHIP_TYPE_BUYER;\r\n\r\nconst SHOW_MODE_NEW = 1;\r\ncnst.SHOW_MODE_NEW = SHOW_MODE_NEW;\r\n\r\nconst SHOW_MODE_EDIT = 3;\r\ncnst.SHOW_MODE_EDIT = SHOW_MODE_EDIT;\r\n\r\nconst SHOW_MODE_VIEW = 5;\r\ncnst.SHOW_MODE_VIEW = SHOW_MODE_VIEW;\r\n\r\nconst SHOW_MODE_LIST = 7;\r\ncnst.SHOW_MODE_LIST = SHOW_MODE_LIST;\r\n\r\nconst SHOW_MODE_LIST2 = 9;\r\ncnst.SHOW_MODE_LIST2 = SHOW_MODE_LIST2;\r\n\r\nconst SHOW_TYPE_FLOOR = 1;\r\ncnst.SHOW_TYPE_FLOOR = SHOW_TYPE_FLOOR;\r\n\r\nconst SHOW_TYPE_CAROUSEL = 3;\r\ncnst.SHOW_TYPE_CAROUSEL = SHOW_TYPE_CAROUSEL;\r\n\r\nconst SHOW_TYPE_FEATURE = 5;\r\ncnst.SHOW_TYPE_FEATURE = SHOW_TYPE_FEATURE;\r\n\r\nconst STATUS_NEW = 1;\r\ncnst.STATUS_NEW = STATUS_NEW;\r\n\r\nconst STATUS_PROCESS3 = 3;\r\ncnst.STATUS_PROCESS3 = STATUS_PROCESS3;\r\n\r\nconst STATUS_PROCESS5 = 5;\r\ncnst.STATUS_PROCESS5 = STATUS_PROCESS5;\r\n\r\nconst STATUS_ACTIVE = 7;\r\ncnst.STATUS_ACTIVE = STATUS_ACTIVE;\r\n\r\nconst STATUS_PROCESS9 = 9;\r\ncnst.STATUS_PROCESS9 = STATUS_PROCESS9;\r\n\r\nconst STATUS_FINISHED = 10;\r\ncnst.STATUS_FINISHED = STATUS_FINISHED;\r\n\r\nconst TRADE_TYPE_GROUPON = 5;\r\ncnst.TRADE_TYPE_GROUPON = TRADE_TYPE_GROUPON;\r\n\r\nconst TARO_ENV_WEAPP = 'weapp';\r\ncnst.TARO_ENV_WEAPP = TARO_ENV_WEAPP;\r\n\r\nconst TARO_ENV_H5 = 'h5';\r\ncnst.TARO_ENV_H5 = TARO_ENV_H5;\r\n\r\nconst getDeliveryName = (deliveryType) =>{\r\n    let deliveryTypeStr = '';\r\n    \r\n     switch (deliveryType) {\r\n      case cnst.DELIVERY_TYPE_EXPRESS:\r\n        deliveryTypeStr = '快递';\r\n        break;\r\n      case cnst.DELIVERY_TYPE_EXPRESS_CHANGE:\r\n        deliveryTypeStr = '转运';\r\n        break;\r\n      case cnst.DELIVERY_TYPE_IMMEDIATELY:\r\n        deliveryTypeStr = '即时送';\r\n        break;\r\n      case cnst.DELIVERY_TYPE_SELF_PICKUP:\r\n        deliveryTypeStr = '自提';\r\n        break;\r\n      case cnst.DELIVERY_TYPE_ONLINE:\r\n        deliveryTypeStr = '在线运输';\r\n        break;\r\n\t  default:\r\n\t\tdeliveryTypeStr = ''\r\n\t\tbreak\r\n\t}\r\n\t\r\n\treturn deliveryTypeStr;\r\n}\r\ncnst.getDeliveryName = getDeliveryName;\r\n\r\nexport default cnst;\r\n","import Taro from '@tarojs/taro';\r\nimport { Current } from '@tarojs/taro';\r\nimport cnst from 'tsx/common/Constant';\r\nimport URI from 'tsx/common/URI';\r\nimport { Dimensions, MMKV } from 'tsx/common/RnLib';\r\n\r\nconst JsUtil = {}\r\n\r\nconst prod_mode = 1;\r\nJsUtil.prod_mode = prod_mode;\r\n\r\nconst devEnv = () => {\r\n\tWEBSITE_SCHEM = 'https://';\r\n\tWEBSITE_HOST = 'd18.pc8g.com';\r\n\tAPI_SCHEM = 'https://';\r\n\tBE_PORT = '';\r\n\tAPI_HOST = 'd18.pc8g.com' + BE_PORT;\r\n\tOFFLINE_PORT = '';\r\n}\r\n\r\nlet WEBSITE_SCHEM = 'https://';\r\nlet WEBSITE_HOST = 'www.pc8g.com';\r\nlet API_SCHEM = 'https://';\r\nlet API_HOST = 'www.pc8g.com';\r\nlet OFFLINE_PORT = ':8968';\r\nlet BE_PORT = '';\r\nlet IMAGE_PREFIX = '/rs/pub/media/image/src/search?path=';\r\nprod_mode != 1 ? devEnv() : '';\r\n\r\nJsUtil.WEBSITE_SCHEM = WEBSITE_SCHEM;\r\nJsUtil.WEBSITE_HOST = WEBSITE_HOST;\r\nJsUtil.API_SCHEM = API_SCHEM;\r\nJsUtil.API_HOST = API_HOST;\r\nJsUtil.OFFLINE_PORT = OFFLINE_PORT;\r\nJsUtil.BE_PORT = BE_PORT;\r\nIMAGE_PREFIX = JsUtil.API_SCHEM + JsUtil.API_HOST + OFFLINE_PORT + IMAGE_PREFIX;\r\nJsUtil.IMAGE_PREFIX = IMAGE_PREFIX;\r\n\r\nconst TENCENT_MAP_KEY = 'IVSBZ-3ZCWO-BMUWA-SVJJJ-CXIEV-RABWR';\r\nJsUtil.TENCENT_MAP_KEY = TENCENT_MAP_KEY;\r\n\r\nlet storage;\r\nif (process.env.TARO_ENV === 'rn') {\r\n\tstorage = new MMKV()\r\n}\r\n\r\nconst info = Taro.getSystemInfoSync()\r\nconst deviceWidth = info.windowWidth;\r\nconst deviceHeight = info.windowHeight;\r\n\r\nconst getUri = uri => {\r\n\tconst websit = JsUtil.API_SCHEM + JsUtil.API_HOST;\r\n\r\n\tif (uri.startsWith(\"/rs/\") || uri.startsWith(\"/id/\")) return JsUtil.API_SCHEM + JsUtil.API_HOST + OFFLINE_PORT + uri;\r\n\r\n\treturn websit + uri;\r\n}\r\nJsUtil.getUri = getUri;\r\n\r\nconst go2Page = path => {\r\n\tTaro.navigateTo({ url: path })\r\n\t//Taro.redirectTo({ url: uri})\r\n}\r\nJsUtil.go2Page = go2Page\r\n\r\nconst redirectTo = path => {\r\n\t//Taro.navigateTo({ url: path })\r\n\tTaro.redirectTo({ url: uri })\r\n}\r\nJsUtil.redirectTo = redirectTo\r\n\r\nconst go2Tab = path => {\r\n\tTaro.switchTab({\r\n\t\t//Taro.redirectTo({\r\n\t\turl: path,\r\n\t})\r\n}\r\nJsUtil.go2Tab = go2Tab\r\n\r\nconst goHome = () => {\r\n\tTaro.switchTab({\r\n\t\t//Taro.redirectTo({\r\n\t\turl: URI.MALL_HOME,\r\n\t})\r\n}\r\nJsUtil.goHome = goHome\r\n\r\nconst goBack = () => {\r\n\tTaro.navigateBack({\r\n\t\tdelta: 1\r\n\t});\r\n}\r\nJsUtil.goBack = goBack\r\n\r\nconst checkLogin = (that, uri) => {\r\n\tconsole.log('checkLogin uri=' + uri)\r\n\tconst memberId = JsUtil.getAppItem('currUserId');\r\n\tif (uri.indexOf('/sec/login') != -1 || uri.indexOf('/2/') != -1 || uri.indexOf('/floor/search') != -1 || uri.indexOf('/commodity/show/search') != -1 || uri.indexOf('/commodity/load/search') != -1) return true;\r\n\telse if (!memberId) {\r\n\t\tJsUtil.go2Login(that, '请先登录', that.props.tid);\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n}\r\nJsUtil.checkLogin = checkLogin;\r\n\r\nconst countSubmit = (that) => {\r\n\tthat.setState({ submitCount: that.state.submitCount + 1 });\r\n}\r\nJsUtil.countSubmit = countSubmit;\r\n\r\nconst discountSubmit = (that) => {\r\n\tthat.setState({ submitCount: that.state.submitCount - 1 });\r\n}\r\nJsUtil.discountSubmit = discountSubmit;\r\n\r\nconst duplicatedSubmit = (that) => {\r\n\tif (that.state.submitCount > 0) {\r\n\t\tJsUtil.showMsgBox(that, '请勿重复提交');\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\nJsUtil.duplicatedSubmit = duplicatedSubmit;\r\n\r\nconst go2Login = (that, message, path) => {\r\n\tif (!message) message = '请先登录';\r\n\tJsUtil.showMsgBox(that, message);\r\n\tJsUtil.sleep(3000).then(() => {\r\n\t\tJsUtil.closeMsgBox(that);\r\n\t\tJsUtil.go2Page(path ? URI.MEMBER_LOGIN + '?path=' + path : URI.MEMBER_LOGIN);\r\n\t})\r\n}\r\nJsUtil.go2Login = go2Login;\r\n\r\nconst decode = (encodeStr) => {\r\n\treturn decodeURIComponent(encodeStr);\r\n}\r\nJsUtil.decode = decode;\r\n\r\nconst asyncHttpPost = (that, uri, param, succ, err, contentType = 'application/json') => {\r\n\tif (!JsUtil.checkLogin(that, uri)) return;\r\n\r\n\tconst headers = {}\r\n\theaders['Authorization'] = 'Bearer ' + JsUtil.getAppItem(\"token\");\r\n\theaders['weToken'] = JsUtil.getAppItem('weToken');\r\n\theaders['mi'] = JsUtil.getAppItem('currUserId');\r\n\theaders['oi'] = JsUtil.getAppItem('currOrgId');\r\n\theaders['ot'] = JsUtil.getAppItem('currOrgType');\r\n\r\n\tif ('multipart/form-data' != contentType)\r\n\t\theaders['content-type'] = contentType;\r\n\turi = JsUtil.getUri(uri);\r\n\r\n\tconst params = {\r\n\t\turl: uri,\r\n\t\tmethod: 'post',\r\n\t\theader: headers,\r\n\t\tdata: param\r\n\t}\r\n\r\n\tTaro.request(params).then((response) => {\r\n\t\tconsole.log(uri + ' asyncHttpPost response: ', response);\r\n\t\tlet result = response.data;\r\n\t\tif (response.statusCode < 200 || response.statusCode > 300) {\r\n\t\t\tif (response.data) result = response.data.error;\r\n\t\t\telse result = response.statusCode;\r\n\r\n\t\t\tthrow Error(result);\r\n\t\t}\r\n\r\n\t\treturn result\r\n\t}).then(succ).catch(err)\r\n}\r\nJsUtil.asyncHttpPost = asyncHttpPost\r\n\r\nconst asyncHttpGet = (that, uri, succ, err, contentType = cnst.REQUEST_TYPE_WWW) => {\r\n\tif (!JsUtil.checkLogin(that, uri)) return;\r\n\r\n\tconst headers = {}\r\n\theaders['content-type'] = contentType;\r\n\theaders['Authorization'] = 'Bearer ' + JsUtil.getAppItem(\"token\");\r\n\theaders['weToken'] = JsUtil.getAppItem('weToken');\r\n\theaders['mi'] = JsUtil.getAppItem('currUserId');\r\n\theaders['oi'] = JsUtil.getAppItem('currOrgId');\r\n\theaders['ot'] = JsUtil.getAppItem('currOrgType');\r\n\turi = JsUtil.getUri(uri);\r\n\r\n\tconst params = {\r\n\t\turl: uri,\r\n\t\tmethod: 'post',\r\n\t\theader: headers,\r\n\t\tdata: {}\r\n\t}\r\n\r\n\tTaro.request(params).then((response) => {\r\n\t\tconsole.log(uri + ' asyncHttpGet response: ', response);\r\n\t\tlet result = response.data;\r\n\t\tif (response.statusCode < 200 || response.statusCode > 300) {\r\n\t\t\tif (response.data) result = response.data.error;\r\n\t\t\telse result = response.statusCode;\r\n\r\n\t\t\tthrow Error(result);\r\n\t\t}\r\n\r\n\t\treturn result\r\n\t}).then(succ).catch(err)\r\n}\r\nJsUtil.asyncHttpGet = asyncHttpGet\r\n\r\nconst getUrlParams = (that) => {\r\n\treturn Current.router.params;\r\n}\r\nJsUtil.getUrlParams = getUrlParams\r\n\r\nconst uploadSingleFile = (that, file, succ, err) => {\r\n\tif (file.duration && file.size > 512 * 1024 * 1024) {\r\n\t\tJsUtil.showMsgBox(that, '上传文件不能大于500M');\r\n\t\treturn;\r\n\t} else if (!file.duration && file.size > 1024 * 1024) {\r\n\t\tJsUtil.showMsgBox(that, '上传文件不能大于1M');\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst headers = {}\r\n\t//headers['content-type'] = 'multipart/form-data'\r\n\theaders['Authorization'] = 'Bearer ' + JsUtil.getAppItem(\"token\");\r\n\t//headers['fileCategory'] = file.fileCategory || cnst.BIZZ_CAT_COMMON;\r\n    const  fileCategory = file.fileCategory || cnst.BIZZ_CAT_COMMON;\r\n\tconst filePath = file.path || file.tempFilePath;\r\n\tconst targetUri = file.targetUri || '/rs/pub/file/upload/create';\r\n\tconsole.log('uploadSingleFile targetUri: ', targetUri);\r\n\tconst params = {\r\n\t\turl: JsUtil.getUri(targetUri)+'?fileCategory='+fileCategory,\r\n\t\tname: 'uploadFile',\r\n\t\theader: headers,\r\n\t\tfilePath: filePath,\r\n\t\tsuccess: succ,\r\n\t\tfail: err\r\n\t}\r\n\r\n\tconsole.log('uploadSingleFile params: ', params);\r\n\tconst uploadTask = Taro.uploadFile(params);\r\n\r\n\tuploadTask.onProgressUpdate((res) => {\r\n\t\tconsole.log('上传进度', res.progress)\r\n\t\tconsole.log('已经上传的数据长度', res.totalBytesSent)\r\n\t\tconsole.log('预期需要上传的数据总长度', res.totalBytesExpectedToSend)\r\n\t});\r\n\r\n\treturn uploadTask;\r\n}\r\nJsUtil.uploadSingleFile = uploadSingleFile;\r\n\r\nconst onFileUpload = (that, args, onUploadSucc, onUploadFail, onOpenProgress) => {\r\n\tconst count = args.count || 1;\r\n\tconst fileType = args.fileType || 'i';\r\n\tconst category = args.category;\r\n\tconst taskCallback = args.taskCallback;\r\n\r\n\tconst onSucc = result => {\r\n\t\tif (onOpenProgress) onOpenProgress()\r\n\t\tconst tempFiles = result.tempFiles || [result];\r\n\t\tconst msg = '网络错误或文件大于100M';\r\n\r\n\t\ttempFiles.forEach((item, idx) => {\r\n\t\t\tconst succ = (result) => {\r\n\t\t\t\tif (result.statusCode == 200) {\r\n\t\t\t\t\tresult = JSON.parse(result.data);\r\n\t\t\t\t\tif (JsUtil.handleMessage(that, result)) {\r\n\t\t\t\t\t\tonUploadSucc(result, idx);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('onUploadSucc fail 0: ', result);\r\n\t\t\t\t\t\tif (onUploadFail) onUploadFail(msg);\r\n\t\t\t\t\t\telse JsUtil.showMsgBox(that, msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('onUploadSucc fail 2: ', result);\r\n\t\t\t\t\tif (onUploadFail) onUploadFail(msg);\r\n\t\t\t\t\telse JsUtil.showMsgBox(that, msg);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst err = (result) => {\r\n\t\t\t\tconsole.log('onUploadFail err: ', result);\r\n\t\t\t\tif (onUploadFail) onUploadFail();\r\n\r\n\t\t\t\tif (result.statusCode)\r\n\t\t\t\t\tresult = JSON.parse(result.data);\r\n\r\n\t\t\t\tJsUtil.handleMessage(that, result, null, false);\r\n\t\t\t}\r\n\r\n\t\t\titem.fileCategory = category;\r\n\t\t\tconst uploadTask = JsUtil.uploadSingleFile(that, item, succ, err);\r\n\t\t\tif (taskCallback) {\r\n\t\t\t\ttaskCallback(uploadTask);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tif (fileType == 'v') {\r\n\t\tTaro.chooseVideo({\r\n\t\t\tcount: count,\r\n\t\t\tsuccess: (result) => onSucc(result),\r\n\t\t\tfail: (result) => {\n\t\t\t\tconsole.log('onUploadFail fail on chooseVideo');\r\n\t\t\t},\r\n\t\t});\r\n\t} else {\r\n\t\tTaro.chooseImage({\r\n\t\t\tcount: count,\r\n\t\t\tsuccess: (result) => onSucc(result),\r\n\t\t\tfail: (result) => {\n\t\t\t\tconsole.log('onUploadFail fail on chooseImage');\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\nJsUtil.onFileUpload = onFileUpload;\r\n\r\nconst handleMessage = (that, result, isPopUponSucc, isNotPopUponFail) => {\r\n\tlet isContinue = false;\r\n\tlet message = '';\r\n\r\n\tif (result.code == cnst.CODE_COMM_0_SUCCESS) {\r\n\t\tisContinue = true;\r\n\t\tmessage = result.message;\r\n\t} else if (result.code == cnst.CODE_COMM_GRANT_EXPIRED || result == 401) {\r\n\t\tmessage = result.message || '请先登录';\r\n\t\tJsUtil.go2Login(that, result.message);\r\n\t} else if (result.code == cnst.CODE_COMM_INPUT_ERROR) {\r\n\t\tif (result.body) {\r\n\t\t\tif (Array.isArray(result.body)) {\r\n\t\t\t\tmessage = result.message + ':\\n' + JsUtil.collectMessage(result.body, that.labels0);\r\n\t\t\t} else {\r\n\t\t\t\tmessage = result.message + ':\\n' + result.body;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tmessage = result.message;\r\n\t\t}\r\n\t} else if (result.code) {\r\n\t\tmessage = result.message;\r\n\t} else if (result.status) {\r\n\t\tmessage = '网络异常:\\n' + result.status;\r\n\t} else if (result.errMsg) {\r\n\t\tmessage = '服务超时:\\n' + result.errMsg;\r\n\t} else {\r\n\t\tconsole.log('result: ', result);\r\n\t\tmessage = '操作失败:\\n' + result;\r\n\t}\r\n\r\n\tif ((isContinue && isPopUponSucc) || (!isContinue && !isNotPopUponFail)) {\r\n\t\tshowMsgBox(that, message)\r\n\t} else {\r\n\t\tconsole.log('Util handleMessage: ' + message);\r\n\t}\r\n\r\n\treturn isContinue;\r\n}\r\nJsUtil.handleMessage = handleMessage\r\n\r\nconst showMsgBox = (that, message) => {\r\n\tif (that)\r\n\t\tthat.setState({ messages: { isOpened: true, content: message, confirmText: '确定', onConfirm: that.onConfirm } })\r\n}\r\nJsUtil.showMsgBox = showMsgBox\r\n\r\nconst closeMsgBox = (that) => {\r\n\tthat.setState({ messages: { isOpened: false, content: '', confirmText: '确定', onConfirm: that.onConfirm } })\r\n}\r\nJsUtil.closeMsgBox = closeMsgBox\r\n\r\nconst collectMessage = (msgArr, labels) => {\r\n\tlet msg = ''\r\n\tfor (let i = 0; i < msgArr.length; i++) {\r\n\t\tmsg = `${msg}${labels[msgArr[i]] || msgArr[i]}:${msgArr[++i]}\\n`\r\n\t}\r\n\r\n\treturn msg\r\n}\r\nJsUtil.collectMessage = collectMessage\r\n\r\nconst validateFields = name => {\r\n\tlet validJs = JsUtil.getAppItem('fields_' + name);\r\n\t//console.table('fields_' + name + ' validJs: ' + validJs)\r\n\tif (!validJs) return null;\r\n\r\n\treturn function(that, validator, fieldName, fieldValue) {\r\n\t\tconst validField = validJs[fieldName];\r\n\t\tif (!validField) return;\r\n\r\n\t\tlet validMsg = validField['NotEmpty'];\r\n\t\tif (validMsg) {\r\n\t\t\tif (validator.isEmpty(fieldValue)) {\r\n\t\t\t\tthat.labels[fieldName] = validMsg;\r\n\t\t\t\tthat.state.errors[fieldName] = true;\r\n\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tthat.labels[fieldName] = that.labels0[fieldName];\r\n\t\t\t\tthat.state.errors[fieldName] = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvalidMsg = validField['NotBlank'];\r\n\t\tif (validMsg) {\r\n\t\t\tif (validator.isEmpty(fieldValue)) {\r\n\t\t\t\tthat.labels[fieldName] = validMsg;\r\n\t\t\t\tthat.state.errors[fieldName] = true;\r\n\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tthat.labels[fieldName] = that.labels0[fieldName];\r\n\t\t\t\tthat.state.errors[fieldName] = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvalidMsg = validField['NotNull'];\r\n\t\tif (validMsg) {\r\n\t\t\tif (validator.isEmpty(fieldValue)) {\r\n\t\t\t\tthat.labels[fieldName] = validMsg;\r\n\t\t\t\tthat.state.errors[fieldName] = true;\r\n\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tthat.labels[fieldName] = that.labels0[fieldName];\r\n\t\t\t\tthat.state.errors[fieldName] = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvalidMsg = validField['Min'];\r\n\t\tif (validMsg) {\r\n\t\t\tif (validator.isFloat(fieldValue, { min: parseInt(validField['Min1']) })) {\r\n\t\t\t\tthat.labels[fieldName] = that.labels0[fieldName];\r\n\t\t\t\tthat.state.errors[fieldName] = false;\r\n\t\t\t} else {\r\n\t\t\t\tthat.labels[fieldName] = validMsg;\r\n\t\t\t\tthat.state.errors[fieldName] = true;\r\n\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvalidMsg = validField['Max'];\r\n\t\tif (validMsg) {\r\n\t\t\tif (validator.isFloat(fieldValue, { max: parseInt(validField['Max1']) })) {\r\n\t\t\t\tthat.labels[fieldName] = that.labels0[fieldName];\r\n\t\t\t\tthat.state.errors[fieldName] = false;\r\n\t\t\t} else {\r\n\t\t\t\tthat.labels[fieldName] = validMsg;\r\n\t\t\t\tthat.state.errors[fieldName] = true;\r\n\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvalidMsg = validField['Digits'];\r\n\t\tif (validMsg) {\r\n\t\t\tif (fieldValue.lastIndexOf('.') > 0 && fieldValue.substring(fieldValue.lastIndexOf('.') + 1).length > parseInt(validField['Digits2'])) {\r\n\t\t\t\tthat.labels[fieldName] = that.labels0[fieldName];\r\n\t\t\t\tthat.state.errors[fieldName] = false;\r\n\t\t\t} else {\r\n\t\t\t\tthat.labels[fieldName] = validMsg;\r\n\t\t\t\tthat.state.errors[fieldName] = true;\r\n\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvalidMsg = validField['Size'];\r\n\t\tif (validMsg) {\r\n\t\t\tif (validator.isLength(fieldValue, { min: parseInt(validField['Size1']), max: parseInt(validField['Size2']) })) {\r\n\t\t\t\tthat.labels[fieldName] = that.labels0[fieldName];\r\n\t\t\t\tthat.state.errors[fieldName] = false;\r\n\t\t\t} else {\r\n\t\t\t\tthat.labels[fieldName] = validMsg;\r\n\t\t\t\tthat.state.errors[fieldName] = true;\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvalidMsg = validField['Rang'];\r\n\t\tif (validMsg) {\r\n\t\t\tif (validator.isRange(fieldValue, { min: parseInt(validField['Rang1']), max: parseInt(validField['Rang2']) })) {\r\n\t\t\t\tthat.labels[fieldName] = that.labels0[fieldName];\r\n\t\t\t\tthat.state.errors[fieldName] = false;\r\n\t\t\t} else {\r\n\t\t\t\tthat.labels[fieldName] = validMsg;\r\n\t\t\t\tthat.state.errors[fieldName] = true;\r\n\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvalidMsg = validField['Email'];\r\n\t\tif (validMsg) {\r\n\t\t\tif (validator.isEmail(fieldValue)) {\r\n\t\t\t\tthat.labels[fieldName] = that.labels0[fieldName];\r\n\t\t\t\tthat.state.errors[fieldName] = false;\r\n\t\t\t} else {\r\n\t\t\t\tthat.labels[fieldName] = validMsg;\r\n\t\t\t\tthat.state.errors[fieldName] = true;\r\n\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvalidMsg = validField['URL'];\r\n\t\tif (validMsg) {\r\n\t\t\tif (validator.isURL(fieldValue)) {\r\n\t\t\t\tthat.labels[fieldName] = that.labels0[fieldName];\r\n\t\t\t\tthat.state.errors[fieldName] = false;\r\n\t\t\t} else {\r\n\t\t\t\tthat.labels[fieldName] = validMsg;\r\n\t\t\t\tthat.state.errors[fieldName] = true;\r\n\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nJsUtil.validateFields = validateFields;\r\n\r\nconst validateForm = name => {\r\n\tlet validJs = JsUtil.getAppItem('fields_' + name);\r\n\t// console.log(validJs)\r\n\tif (!validJs) return null;\r\n\r\n\treturn function(validator, labels, params) {\r\n\t\tlet result = '';\r\n\t\tlet validMsg = '';\r\n\t\tlet validField;\r\n\t\tlet fieldLabel;\r\n\t\tlet fieldValue;\r\n\t\tObject.keys(validJs).map(fieldName => {\r\n\t\t\tif (fieldName == 'memberId' || fieldName == 'orgId') return true;\r\n\t\t\tvalidField = validJs[fieldName];\r\n\t\t\tfieldLabel = labels[fieldName]\r\n\t\t\tif (!fieldLabel) return true;\r\n\t\t\tfieldValue = params[fieldName] + '';\r\n\t\t\tvalidMsg = validField['NotEmpty'] || validField['NotBlank'] || validField['NotNull'];\r\n\t\t\tif (validMsg) {\r\n\t\t\t\tif ('undefined' == fieldValue || validator.isEmpty(fieldValue)) {\r\n\t\t\t\t\tresult = `${result}${fieldLabel}: ${validMsg}\\n`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvalidMsg = validField['Min'];\r\n\t\t\tif (validMsg) {\r\n\t\t\t\tif (!validator.isFloat(fieldValue, { min: validField['Min1'] })) {\r\n\t\t\t\t\tresult = `${result}${fieldLabel}: ${validMsg}\\n`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvalidMsg = validField['Max'];\r\n\t\t\tif (validMsg) {\r\n\t\t\t\tif (!validator.isFloat(fieldValue, { max: validField['Max1'] })) {\r\n\t\t\t\t\tresult = `${result}${fieldLabel}: ${validMsg}\\n`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvalidMsg = validField['Digits'];\r\n\t\t\tif (validMsg) {\r\n\t\t\t\tif (fieldValue.lastIndexOf('.') > 0 && fieldValue.substring(fieldValue.lastIndexOf('.') + 1).length > validField['Digits2']) {\r\n\t\t\t\t\tresult = `${result}${fieldLabel}: ${validMsg}\\n`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvalidMsg = validField['Size'];\r\n\t\t\tif (validMsg) {\r\n\t\t\t\tif (!validator.isLength(fieldValue, { min: validField['Size1'], max: validField['Size2'] })) {\r\n\t\t\t\t\tresult = `${result}${fieldLabel}: ${validMsg}\\n`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvalidMsg = validField['Range'];\r\n\t\t\tif (validMsg) {\r\n\t\t\t\tif (!validator.isLength(fieldValue, { min: validField['Range1'], max: validField['Range2'] })) {\r\n\t\t\t\t\tresult = `${result}${fieldLabel}: ${validMsg}\\n`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvalidMsg = validField['Email'];\r\n\t\t\tif (validMsg) {\r\n\t\t\t\tif (!validator.isEmpty(fieldValue)) {\r\n\t\t\t\t\tresult = `${result}${fieldLabel}: ${validMsg}\\n`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvalidMsg = validField['URL'];\r\n\t\t\tif (validMsg) {\r\n\t\t\t\tif (!validator.isUrl(fieldValue)) {\r\n\t\t\t\t\tresult = `${result}${fieldLabel}: ${validMsg}\\n`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\nJsUtil.validateForm = validateForm;\r\n\r\nconst init = (that, uri, name) => {\r\n\tconst getValidateFunctions = () => ({\r\n\t\tvalidateFields: validateFields(name),\r\n\t\tvalidateForm: validateForm(name)\r\n\t});\r\n\r\n\tconst initPromise = new Promise(resolve => {\r\n\t\tJsUtil.asyncHttpGet(that,\r\n\t\t\turi + '?apiType=3',\r\n\t\t\tresult => {\r\n\t\t\t\tif (JsUtil.handleMessage(that, result)) {\r\n\t\t\t\t\tlet validJs = result.body.fieldJs;\r\n\t\t\t\t\tJsUtil.setAppItem('fields_' + name, validJs);\r\n\t\t\t\t\tvalidJs = result.body.formJs;\r\n\t\t\t\t\tJsUtil.setAppItem('form_' + name, validJs);\r\n\t\t\t\t\tresolve(getValidateFunctions());\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => JsUtil.handleMessage(that, error)\r\n\t\t);\r\n\t});\r\n\r\n\tinitPromise.catch(() => {\r\n\t\tconsole.log(\"initPromise Rejected\");\r\n\t});\r\n\r\n\treturn initPromise;\r\n}\r\nJsUtil.init = init;\r\n\r\nconst getPaymentStatusFromCode = code => {\r\n\tswitch (code) {\r\n\t\tcase 1:\r\n\t\t\treturn '待付款'\r\n\t\t\tbreak\r\n\t\tcase 5:\r\n\t\t\treturn '已付款'\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\treturn '全部'\r\n\t\t\tbreak\r\n\t}\r\n}\r\nJsUtil.getPaymentStatusFromCode = getPaymentStatusFromCode\r\n\r\nconst getWithdrawTypeFromCode = code => {\r\n\tswitch (code) {\r\n\t\tcase 1:\r\n\t\t\treturn '货款结算'\r\n\t\t\tbreak\r\n\t\tcase 3:\r\n\t\t\treturn '提现'\r\n\t\t\tbreak\r\n\t\tcase 5:\r\n\t\t\treturn '奖励'\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\treturn '全部'\r\n\t\t\tbreak\r\n\t}\r\n}\r\nJsUtil.getWithdrawTypeFromCode = getWithdrawTypeFromCode\r\n\r\nconst clientVersion = '1.0.0'\r\nJsUtil.clientVersion = clientVersion\r\n\r\nconst setAppItem = (key, value) => {\r\n\tlet val, storedVal\r\n\tswitch (typeof value) {\r\n\t\tcase 'number':\r\n\t\t\tval = JSON.stringify(value)\r\n\t\t\tstoredVal = JSON.stringify({\r\n\t\t\t\ttype: 'number',\r\n\t\t\t\tpayload: val\r\n\t\t\t})\r\n\t\t\tbreak\r\n\t\tcase 'object':\r\n\t\t\tval = JSON.stringify(value)\r\n\t\t\tstoredVal = JSON.stringify({\r\n\t\t\t\ttype: 'object',\r\n\t\t\t\tpayload: val\r\n\t\t\t})\r\n\t\t\tbreak\r\n\t\tcase 'string':\r\n\t\t\tstoredVal = JSON.stringify({\r\n\t\t\t\ttype: 'string',\r\n\t\t\t\tpayload: value\r\n\t\t\t})\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\tstoredVal = JSON.stringify({\r\n\t\t\t\ttype: 'unknown',\r\n\t\t\t\tpayload: value\r\n\t\t\t})\r\n\t}\r\n\r\n\tif (process.env.TARO_ENV === 'rn') {\r\n\t\tif (!storedVal) return;\r\n\t\tstorage.set(key, storedVal);\r\n\t} else {\r\n\t\tTaro.setStorageSync(key, storedVal)\r\n\t}\r\n}\r\nJsUtil.setAppItem = setAppItem\r\n\r\nconst getAppItem = key => {\r\n\tlet returnVal\r\n\ttry {\r\n\t\tlet value = undefined;\r\n\t\tif (process.env.TARO_ENV === 'rn') {\r\n\t\t\tvalue = storage.getString(key);\r\n\t\t} else {\r\n\t\t\tvalue = Taro.getStorageSync(key)\r\n\t\t}\r\n\r\n\t\tif (!value) {\r\n\t\t\treturn value\r\n\t\t}\r\n\t\tconst valObj = JSON.parse(value)\r\n\t\tswitch (valObj.type) {\r\n\t\t\tcase 'number':\r\n\t\t\t\treturnVal = Number(valObj.payload)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'string':\r\n\t\t\t\treturnVal = valObj.payload\r\n\t\t\t\tbreak\r\n\t\t\tcase 'object':\r\n\t\t\t\treturnVal = JSON.parse(valObj.payload)\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\treturnVal = valObj.payload\r\n\t\t}\r\n\t\treturn returnVal\r\n\t} catch (error) {\r\n\t\treturn null\r\n\t}\r\n}\r\nJsUtil.getAppItem = getAppItem\r\n\r\nconst clearStorage = () => { Taro.clearStorage() }\r\nJsUtil.clearStorage = clearStorage\r\n\r\nconst add100 = (arr) => {\r\n\tlet sum = 0;\r\n\tarr.forEach((item) => {\r\n\t\tsum = sum + item;\r\n\t})\r\n\r\n\treturn sum;\r\n}\r\nJsUtil.add100 = add100;\r\n\r\nconst currFormat = (price) => {\r\n\tprice = parseFloat(price);\r\n\treturn '¥' + price.toFixed(2);\r\n}\r\nJsUtil.currFormat = currFormat\r\n\r\nconst truncateContent = (content, length) => {\r\n\tif (content.length < length) return content\r\n\r\n\treturn content.substring(0, length) + '...'\r\n}\r\nJsUtil.truncateContent = truncateContent\r\n\r\nconst formatDate = (dateStr) => {\r\n\treturn dateStr.substring(0, 10).replace('-', '.')\r\n}\r\nJsUtil.formatDate = formatDate\r\n\r\nconst isNull = (value) => {\r\n\tif (value == undefined || value == null) return true\r\n\telse if (typeof value == 'number' && isNaN(value)) {\r\n\t\treturn true\r\n\t}\r\n\r\n\treturn false\r\n}\r\nJsUtil.isNull = isNull\r\n\r\nconst getCssSizeValue = (deviceSize, value, defaultValue) => {\r\n\tif (JsUtil.isNull(value)) value = defaultValue\r\n\tif (JsUtil.isNull(value)) value = 0;\r\n\r\n\tif (typeof value == 'number') {\r\n\t\tif (value >= 0) {\r\n\t\t\tif (process.env.TARO_ENV === 'rn') {\r\n\r\n\t\t\t} else {\r\n\t\t\t\tvalue = value + 'px'\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (process.env.TARO_ENV === 'rn') {\r\n\t\t\t\tvalue = 0 - value\r\n\t\t\t\tvalue = value / 100 * deviceSize\r\n\t\t\t} else {\r\n\t\t\t\tvalue = 0 - value\r\n\t\t\t\tvalue = value / 100 * deviceSize\r\n\t\t\t\t//value = parseInt(value)\r\n\t\t\t\tvalue = value + 'px'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn value\r\n}\r\n\r\nconst getCssWidthValue = (value, defaultValue) => {\r\n\treturn getCssSizeValue(deviceWidth, value, defaultValue);\r\n}\r\nJsUtil.getCssWidthValue = getCssWidthValue\r\n\r\nconst getCssHeightValue = (value, defaultValue) => {\r\n\treturn getCssSizeValue(deviceHeight, value, defaultValue);\r\n}\r\nJsUtil.getCssHeightValue = getCssHeightValue\r\n\r\nconst getCssNumValue = (value, defaultValue) => {\r\n\tif (JsUtil.isNull(value)) value = defaultValue\r\n\tif (JsUtil.isNull(value)) value = 0;\r\n\r\n\tif (typeof value == 'number') {\r\n\t\tif (value >= 0) {\r\n\t\t\tif (process.env.TARO_ENV === 'rn') {\r\n\t\t\t} else {\r\n\t\t\t\tvalue = value + 0\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (process.env.TARO_ENV === 'rn') {\r\n\t\t\t\tvalue = 0 - value + 0\r\n\t\t\t} else {\r\n\t\t\t\tvalue = 0 + value + 0\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn value\r\n}\r\nJsUtil.getCssNumValue = getCssNumValue\r\n\r\nconst getCssStrValue = (value, defaultValue) => {\r\n\tif (JsUtil.isNull(value)) value = defaultValue\r\n\tif (JsUtil.isNull(value)) value = '';\r\n\r\n\treturn value\r\n}\r\nJsUtil.getCssStrValue = getCssStrValue\r\n\r\nconst getColorValue = (colorArr, defaultValue) => {\r\n\tif (!colorArr) colorArr = defaultValue;\r\n\tif (!colorArr) colorArr = cnst.COLOR_BACKGROUND_TRANS_WHITE;\r\n\r\n\tif (Array.isArray(colorArr)) {\r\n\t\treturn 'rgba(' + colorArr[0] + ',' + colorArr[1] + ',' + colorArr[2] + ',' + colorArr[3] + ')'\r\n\t}\r\n\r\n\treturn colorArr;\r\n}\r\nJsUtil.getColorValue = getColorValue\r\n\r\nconst getColor2Value = (color2Arr) => {\r\n\tconst color2Arr2 = [];\r\n\tif (color2Arr) {\r\n\t\tcolor2Arr2.push('rgba(' + color2Arr[0][0] + ',' + color2Arr[0][1] + ',' + color2Arr[0][2] + ',' + color2Arr[0][3] + ')');\r\n\t\tcolor2Arr2.push('rgba(' + color2Arr[1][0] + ',' + color2Arr[1][1] + ',' + color2Arr[1][2] + ',' + color2Arr[1][3] + ')');\r\n\t\tcolor2Arr2.push('rgba(' + color2Arr[2][0] + ',' + color2Arr[2][1] + ',' + color2Arr[2][2] + ',' + color2Arr[2][3] + ')');\r\n\t\tcolor2Arr2.push('rgba(' + color2Arr[3][0] + ',' + color2Arr[3][1] + ',' + color2Arr[3][2] + ',' + color2Arr[3][3] + ')');\r\n\t} else {\r\n\t\tcolor2Arr2.push('rgba(255, 255, 255, 0.01)');\r\n\t\tcolor2Arr2.push('rgba(255, 255, 255, 0.01)');\r\n\t\tcolor2Arr2.push('rgba(255, 255, 255, 0.01)');\r\n\t\tcolor2Arr2.push('rgba(255, 255, 255, 0.01)');\r\n\t}\r\n\r\n\treturn color2Arr2;\r\n}\r\nJsUtil.getColor2Value = getColor2Value\r\n\r\nconst getInnerElement = (arr, srcField, srcValue) => {\r\n\tconst obj = arr.find(item => item[srcField] == srcValue);\r\n\tif (!obj) return {};\r\n\r\n\treturn obj;\r\n}\r\nJsUtil.getInnerElement = getInnerElement\r\n\r\nconst getInnerValue = (arr, srcField, srcValue, targetField) => {\r\n\tconst obj = arr.find(item => item[srcField] == srcValue);\r\n\tif (!obj) return undefined;\r\n\r\n\treturn obj[targetField];\r\n}\r\nJsUtil.getInnerValue = getInnerValue\r\n\r\nconst mobileFormat = (that, phoneNo) => {\r\n\tif (!phoneNo) {\r\n\t\tJsUtil.showMsgBox(that, '请输入手机号')\r\n\t\treturn false;\r\n\t} else if (!/^1[3|4|5|6|7|8|9][0-9]\\d{8}$/.test(phoneNo)) {\r\n\t\tJsUtil.showMsgBox(that, '手机号码不规范，请重新输入');\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n}\r\nJsUtil.mobileFormat = mobileFormat;\r\n\r\nconst setProperties = (obj, value) => {\r\n\treturn Object.assign({}, ...Object.keys(obj).map(key => ({ [key]: value })));\r\n}\r\nJsUtil.setProperties = setProperties;\r\n\r\nconst appendTime = (dateStr) => {\r\n\tif (dateStr == ' ') return '';\r\n\r\n\tif (dateStr)\r\n\t\treturn dateStr + ' 00:00:00';\r\n\r\n\treturn dateStr;\r\n}\r\nJsUtil.appendTime = appendTime;\r\n\r\nconst setOperatorOptions = (that, opOptionType, checkedId) => {\r\n\tif (!opOptionType) return;\r\n\r\n\tif (opOptionType == cnst.OP_OPTION_TYPE_ALL) {\r\n\t\tconst succ = (result) => {\r\n\t\t\tif (JsUtil.handleMessage(that, result)) {\r\n\t\t\t\tconst operatorOptions = [{ first: cnst.ID_HQ, second: cnst.NAME_HQ, third: '愉快花园3栋608' }, ...result.body];\r\n\t\t\t\tlet operatorId = undefined;\r\n\t\t\t\tlet operatorName = '';\r\n\t\t\t\tif (operatorOptions.length > 0) {\r\n\t\t\t\t\tif (checkedId === '') {\r\n\t\t\t\t\t\toperatorId = operatorOptions[0].first;\r\n\t\t\t\t\t\toperatorName = operatorOptions[0].second;\r\n\t\t\t\t\t\tthat.setState({ operatorId: operatorId, operatorName });\r\n\t\t\t\t\t} else if (checkedId) {\r\n\t\t\t\t\t\toperatorId = checkedId;\r\n\t\t\t\t\t\toperatorName = operatorOptions.find(item => item.first == checkedId).second;\r\n\t\t\t\t\t\tthat.setState({ operatorId: operatorId, operatorName });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthat.setState({ operatorOptions: operatorOptions });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst err = (result) => {\r\n\t\t\tJsUtil.handleMessage(that, result)\r\n\t\t}\r\n\r\n\t\tJsUtil.asyncHttpPost(that, '/op/pub/name/search', JSON.stringify({}), succ, err);\r\n\t} else if (opOptionType == cnst.OP_OPTION_TYPE_SUPPLIER) {\r\n\t\tconst succ = (result) => {\r\n\t\t\tif (JsUtil.handleMessage(that, result)) {\r\n\t\t\t\tconst operatorOptions = result.body;\r\n\t\t\t\tlet operatorId = undefined;\r\n\t\t\t\tlet operatorName = '';\r\n\t\t\t\tif (operatorOptions.length > 0) {\r\n\t\t\t\t\tif (checkedId === '') {\r\n\t\t\t\t\t\toperatorId = operatorOptions[0].first;\r\n\t\t\t\t\t\toperatorName = operatorOptions[0].second;\r\n\t\t\t\t\t\tthat.setState({ operatorId: operatorId, operatorName });\r\n\t\t\t\t\t} else if (checkedId) {\r\n\t\t\t\t\t\toperatorId = checkedId;\r\n\t\t\t\t\t\toperatorName = operatorOptions.find(item => item.first == checkedId).second;\r\n\t\t\t\t\t\tthat.setState({ operatorId: operatorId, operatorName });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthat.setState({ operatorOptions: operatorOptions });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst err = (result) => {\r\n\t\t\tJsUtil.handleMessage(that, result)\r\n\t\t}\r\n\r\n\t\tconst supplierId = JsUtil.getAppItem('currOrgId');\r\n\t\tJsUtil.asyncHttpPost(that, '/sp/pub/op/name/search', \"supplierId=\" + supplierId, succ, err, \"application/x-www-form-urlencoded\");\r\n\t} else if (opOptionType == cnst.OP_OPTION_TYPE_SERVICE_STATION) {\r\n\t\tconst succ = (result) => {\r\n\t\t\tif (JsUtil.handleMessage(that, result)) {\r\n\t\t\t\tconst operatorOptions = result.body;\r\n\t\t\t\tlet operatorId = undefined;\r\n\t\t\t\tlet operatorName = '';\r\n\t\t\t\tif (operatorOptions.length > 0) {\r\n\t\t\t\t\tif (checkedId === '') {\r\n\t\t\t\t\t\toperatorId = operatorOptions[0].first;\r\n\t\t\t\t\t\toperatorName = operatorOptions[0].second;\r\n\t\t\t\t\t\tthat.setState({ operatorId: operatorId, operatorName });\r\n\t\t\t\t\t} else if (checkedId) {\r\n\t\t\t\t\t\toperatorId = checkedId;\r\n\t\t\t\t\t\toperatorName = operatorOptions.find(item => item.first == checkedId).second;\r\n\t\t\t\t\t\tthat.setState({ operatorId: operatorId, operatorName });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthat.setState({ operatorOptions: operatorOptions });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst err = (result) => {\r\n\t\t\tJsUtil.handleMessage(that, result)\r\n\t\t}\r\n\r\n\t\tconst serviceStationId = JsUtil.getAppItem('currOrgId');\r\n\t\tJsUtil.asyncHttpPost(that, '/ss/pub/op/name/search', \"serviceStationId=\" + serviceStationId, succ, err, \"application/x-www-form-urlencoded\");\r\n\t} else if (opOptionType == cnst.OP_OPTION_TYPE_SELF) {\r\n\t\tconst operatorId = JsUtil.getAppItem('currOrgId');\r\n\t\tconst currOrgName = JsUtil.getAppItem('currOrgName');\r\n\t\tconst operatorOptions = [{ first: operatorId, second: currOrgName, third: '' }];\r\n\r\n\t\tthat.setState({ operatorOptions: operatorOptions, operatorId: operatorId, operatorName: currOrgName });\r\n\t} else {\r\n\t\tconst operatorId = cnst.ID_HQ;\r\n\t\tconst currOrgName = cnst.NAME_HQ;\r\n\t\tconst operatorOptions = [{ first: operatorId, second: currOrgName, third: '' }];\r\n\r\n\t\tthat.setState({ operatorOptions: operatorOptions, operatorId: operatorId, operatorName: currOrgName });\r\n\t}\r\n}\r\nJsUtil.setOperatorOptions = setOperatorOptions;\r\n\r\nconst uploadFileChanged = (that, fieldName) => (value, opType, idx) => {\r\n\tconst fileName = fieldName + 'File';\r\n\tif ('add' == opType) {\r\n\t\tconst succ = (result) => {\r\n\t\t\tif (result.statusCode) result = JSON.parse(result.data);\r\n\t\t\tif (JsUtil.handleMessage(that, result)) {\r\n\t\t\t\tthat.setState({ [fieldName]: result.body });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst err = (result) => {\r\n\t\t\tif (result.statusCode) result = JSON.parse(result.data);\r\n\t\t\tJsUtil.handleMessage(that, result)\r\n\t\t}\r\n\r\n\t\tJsUtil.uploadSingleFile(that, value[0].file, succ, err);\r\n\t\tconst newValue = [];\r\n\t\tvalue[1] ? newValue.push(value[1]) : newValue.push(value[0]);\r\n\t\tthat.setState({ [fileName]: newValue });\r\n\t} else if ('remove' == opType) {\r\n\t\tthat.setState({ [fileName]: [] });\r\n\t}\r\n}\r\nJsUtil.uploadFileChanged = uploadFileChanged;\r\n\r\nconst onValueChange = (that, name) => (item) => {\r\n\tlet value = item.value;\r\n\tif (!value) value = item.id;\r\n\r\n\tthat.setState({ [name]: value })\r\n}\r\nJsUtil.onValueChange = onValueChange;\r\n\r\nconst onIdChange = (that, name) => (item) => {\r\n\tconst value = item.id;\r\n\r\n\tthat.setState({ [name]: value })\r\n}\r\nJsUtil.onIdChange = onIdChange;\r\n\r\nconst delEleByIdx = (arr, idx) => {\r\n\tif (arr.length == 1) return [];\r\n\tarr.splice(idx, 1);\r\n\treturn arr;\r\n}\r\nJsUtil.delEleByIdx = delEleByIdx;\r\n\r\nconst delEleByValue = (arr, val) => {\r\n\tconst set = new Set(arr);\r\n\tset.delete(val);\r\n\treturn Array.from(set);\r\n}\r\nJsUtil.delEleByValue = delEleByValue;\r\n\r\nconst containEleValue = (arr2, val) => {\r\n\tfor (let i = 0; i < arr2.length; i++) {\r\n\t\tconst ele = arr2[i]\r\n\t\tif (Array.isArray(ele)) {\r\n\t\t\tconst result = ele.find(e => e == val);\r\n\t\t\tif (result) return true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n}\r\nJsUtil.containEleValue = containEleValue;\r\n\r\nconst getCurrPosition = (that) => {\r\n\tif (process.env.TARO_ENV != 'h5') return;\r\n\r\n\tconst geolocation = new qq.maps.Geolocation(\"HT7BZ-XLQ3I-QOOGP-UEPJU-5M2BE-55FZU\", \"pcgmall\");\r\n\tgeolocation.watchPosition(position => {\r\n\t\tconst longitude = position.lng;\r\n\t\tconst latitude = position.lat;\r\n\r\n\t\tJsUtil.setAppItem('longitude', longitude);\r\n\t\tJsUtil.setAppItem('latitude', latitude);\r\n\r\n\t\tif (that)\r\n\t\t\tthat.props.onRegionchange(longitude, latitude);\r\n\t});\r\n}\r\nJsUtil.getCurrPosition = getCurrPosition;\r\n\r\nconst getStoreName = (operatorId) => {\r\n\tlet storeName = '';\r\n\tconst storeNames = JsUtil.getAppItem(\"storeNames\");\r\n\tif (storeNames) {\r\n\t\tstoreName = storeNames[operatorId];\r\n\t}\r\n\r\n\treturn storeName;\r\n}\r\nJsUtil.getStoreName = getStoreName;\r\n\r\nconst getDateTime = (date) => {\r\n\tif (date == undefined || date == '') return date;\r\n\r\n\treturn date + ' 00:00:00';\r\n}\r\nJsUtil.getDateTime = getDateTime;\r\n\r\nconst sleep = (delay) => {\r\n\tconst sleepPromise = new Promise((resolve) => setTimeout(resolve, delay));\r\n\tsleepPromise.catch(() => {\r\n\t\tconsole.log(\"sleepPromise Rejected\");\r\n\t});\r\n\treturn sleepPromise;\r\n}\r\nJsUtil.sleep = sleep;\r\n\r\nconst createWechat = (that) => {\r\n\twx.login({\r\n\t\tsuccess(res) {\r\n\t\t\tif (res.code) {\r\n\t\t\t\tconst weId = JsUtil.getAppItem('weId');\r\n\t\t\t\tif (weId) {\r\n\t\t\t\t\t//return;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst succ = (result) => {\r\n\t\t\t\t\tif (JsUtil.handleMessage(that, result)) {\r\n\t\t\t\t\t\tconst item = result.body;\r\n\t\t\t\t\t\tconsole.log('wx.login succ weId=' + item.weId);\r\n\t\t\t\t\t\tJsUtil.setAppItem('weId', item.weId);\r\n\t\t\t\t\t\tJsUtil.setAppItem('weToken', item.weToken);\r\n\r\n\t\t\t\t\t\tconst recommend = JsUtil.getAppItem('recommend');\r\n\t\t\t\t\t\tif (recommend) {\r\n\t\t\t\t\t\t\tJsUtil.setAppItem('recommend', null);\r\n\t\t\t\t\t\t\tJsUtil.createRecommend(that, recommend);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst err = (result) => {\r\n\t\t\t\t\tJsUtil.handleMessage(that, result)\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log('wx.login weId=' + weId);\r\n\t\t\t\tconsole.log('wx.login res.code=' + res.code);\r\n\r\n\t\t\t\tJsUtil.asyncHttpPost(that, '/mb/pub/wechat/2/create', 'wxCode=' + res.code, succ, err, cnst.REQUEST_TYPE_WWW);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\nJsUtil.createWechat = createWechat;\r\n\r\nconst createRecommend = (that, recommend) => {\r\n\tlet mallType = recommend.mallType;\r\n\tif (!mallType)\r\n\t\tmallType = JsUtil.getAppItem('currMallType');\r\n\tconst commodityId = recommend.commodityId;\r\n\tconst wePid = recommend.wePid;\r\n\tconst weId = JsUtil.getAppItem('weId')\r\n\tconst memberPid = recommend.memberPid;\r\n\tconst memberId = that.currUserId;\r\n\tconst lastProvinceId = recommend.lastProvinceId;\r\n\tconst operatorId = recommend.operatorId;\r\n\r\n\tif ((wePid && weId && wePid != weId) || memberPid && memberId) {\r\n\t\tconsole.log('wePid is not null')\r\n\t\tconst param = {\r\n\t\t\tmemberPid: memberPid,\r\n\t\t\tmemberId: memberId,\r\n\t\t\tcommodityId: commodityId,\r\n\t\t\twePid: wePid,\r\n\t\t\tweId: weId,\r\n\t\t}\r\n\r\n\t\tconst succ = (result) => {\r\n\t\t\tif (JsUtil.handleMessage(that, result)) {\r\n\t\t\t\tconsole.log('recommend created, result is ', result)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst err = (result) => {\r\n\t\t\tif (JsUtil.handleMessage(that, result)) {\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tJsUtil.asyncHttpPost(that, '/mb/pub/recommend/2/create', JSON.stringify(param), succ, err);\r\n\t}\r\n\r\n\tif (operatorId) {\r\n\t\tconsole.log('operatorId is not null')\r\n\t\tJsUtil.setAppItem('lastProvinceId', lastProvinceId)\r\n\t\tJsUtil.setAppItem('currOperatorId', operatorId)\r\n\t\tJsUtil.setAppItem('lastOperatorId', operatorId)\r\n\t\tJsUtil.setAppItem('currMallType', mallType)\r\n\t}\r\n}\r\nJsUtil.createRecommend = createRecommend;\r\n\r\nconst getFromAddrIds = (deliveryType, fromAddrIds0) => {\r\n\t//fromAddrIds0为deliveryType分隔的地址ids\r\n\tconst fromAddrIds = [];\r\n\tlet id = null;\r\n\tlet isCurrType = false;\r\n\tfor (let i = 0; i < fromAddrIds0.length; i++) {\r\n\t\tid = fromAddrIds0[i];\r\n\t\tif (isCurrType) {\r\n\t\t\tif (id < 20)\r\n\t\t\t\treturn fromAddrIds;\r\n\r\n\t\t\tif (i == fromAddrIds0.length - 1) {\r\n\t\t\t\tfromAddrIds.push(id);\r\n\r\n\t\t\t\treturn fromAddrIds;\r\n\t\t\t}\r\n\r\n\t\t\tfromAddrIds.push(id);\r\n\t\t}\r\n\r\n\t\tif (deliveryType == id) {\r\n\t\t\tisCurrType = true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn fromAddrIds;\r\n}\r\nJsUtil.getFromAddrIds = getFromAddrIds;\r\n\r\n\r\nexport default JsUtil\r\n","import JsUtil from 'tsx/common/JsUtil'\r\n\r\nlet per = {}\r\n\r\nconst ORG_TYPE_SP_G = 1;\r\nper.ORG_TYPE_SP_G = ORG_TYPE_SP_G;\r\n\r\nconst ORG_TYPE_SP_R = 3;\r\nper.ORG_TYPE_SP_R = ORG_TYPE_SP_R;\r\n\r\nconst ORG_TYPE_SP_B = 5;\r\nper.ORG_TYPE_SP_B = ORG_TYPE_SP_B;\r\n\r\nconst ORG_TYPE_HQ = 7;\r\nper.ORG_TYPE_HQ = ORG_TYPE_HQ;\r\n\r\nconst ORG_TYPE_OP = 9;\r\nper.ORG_TYPE_OP = ORG_TYPE_OP;\r\n\r\nconst ORG_TYPE_SS = 11;\r\nper.ORG_TYPE_SS = ORG_TYPE_SS;\r\n\r\nconst ORG_TYPE_MB = 13;\r\nper.ORG_TYPE_MB = ORG_TYPE_MB;\r\n\r\nconst ORG_NAME_SUPPLIER = 'supplier';\r\nper.ORG_NAME_SUPPLIER = ORG_NAME_SUPPLIER;\r\n\r\nconst ORG_NAME_OPERATOR = 'operator';\r\nper.ORG_NAME_OPERATOR = ORG_NAME_OPERATOR;\r\n\r\nconst ORG_NAME_HEADQUARTER = 'headquarter';\r\nper.ORG_NAME_HEADQUARTER = ORG_NAME_HEADQUARTER;\r\n\r\nconst ORG_NAME_STORE = 'store';\r\nper.ORG_NAME_STORE = ORG_NAME_STORE;\r\n\r\nconst ORG_NAME_MEMBER = 'member';\r\nper.ORG_NAME_MEMBER = ORG_NAME_MEMBER;\r\n\r\nconst getCurrOrgType = () => {\r\n  let currentOrgType = JsUtil.getAppItem('currOrgType');\r\n  return currentOrgType;\r\n}\r\nper.getCurrOrgType = getCurrOrgType;\r\n\r\nconst hasRole = authCode => {\r\n  const authorities = JsUtil.getAppItem('authorities');\r\n  if(!authorities) return false;\r\n  \r\n  let i = authorities.length;\r\n  while (i--) {\r\n    if (authorities[i] == authCode) {\r\n      //console.log(authorities[i].authority);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\nper.hasRole = hasRole;\r\n\r\nconst getRoleByFlag = flag => {\r\n  switch (flag) {\r\n    case per.ORG_TYPE_SP_B:\r\n    case per.ORG_TYPE_SP_G:\r\n    case per.ORG_TYPE_SP_R:\r\n      return 'supplier';\r\n    case per.ORG_TYPE_MB:\r\n      return 'member';\r\n    case per.ORG_TYPE_OP:\r\n      return 'operator';\r\n    case per.ORG_TYPE_SS:\r\n      return 'store';\r\n    case per.ORG_TYPE_HQ:\r\n      return 'headquarter';\r\n    default:\r\n      return 'member';\r\n  }\r\n}\r\nper.getRoleByFlag = getRoleByFlag;\r\n\r\nconst judgeSellerByFlag = flag => {\r\n  const role = getRoleByFlag(flag);\r\n  return role == 'supplier';\r\n}\r\nper.judgeSellerByFlag = judgeSellerByFlag;\r\n\r\nconst judgeBuyerByFlag = flag => {\r\n  const role = getRoleByFlag(flag);\r\n  return role != 'supplier' && role != 'headquarter';\r\n}\r\nper.judgeBuyerByFlag = judgeBuyerByFlag;\r\n\r\nconst authorities = {\r\n  SP_BASIC_G: '100004', // 全国商城基本权限\r\n  SP_BASIC_R: '200004', // 地方商城基本权限\r\n  SP_COMMODITY_B2B_G1: '113011', // B2B全国商城发布商品权限\r\n  SP_COMMODITY_B2B_R1: '213031', // B2B地方商城发布商品权限\r\n  SP_COMMODITY_B2C_G1: '113051', // B2C全国商城发布商品权限\r\n  SP_COMMODITY_B2C_R1: '213071', // B2C地方商城发布商品权限\r\n  SP_FINANCE_WITHDRAW_G4: '121111', // 全国商城提现权限\r\n  SP_FINANCE_WITHDRAW_R4: '221111', // 地方商城提现权限\r\n  SP_FINANCE_REPORT_G4: '121814', // 全国商城明细财务报表权限\r\n  SP_FINANCE_REPORT_R4: '221814', // 地方商城明细财务报表权限\r\n  SP_ORDER_REPORT_G4: '119814', // 全国商城明细销售报表权限\r\n  SP_ORDER_REPORT_R4: '219814', // 地方商城明细销售报表权限\r\n\r\n  HQ_BASIC: '300004', // 基本权限\r\n  HQ_COMMODITY_APPROVAL: '313217', // 审批商品发布\r\n  HQ_SUPPLIER_APPROVAL: '325217', // 审批供应商加盟权限\r\n  HQ_OPERATOR_APPROVAL: '329217', // 审批运营中心加盟权限\r\n  HQ_STORE_APPROVAL: '331217', // 审批服务站加盟权限\r\n  HQ_FINANCE_WITHDRAW_APPROVAL: '321217', // 审批提现\r\n  HQ_FINANCE_REPORT: '321814', // 明细财务报表权限\r\n  HQ_ORDER_REPORT: '319814', // 明细销售报表权限\r\n\r\n  OP_BASIC: '500004', // 基本权限\r\n  OP_ROOT: '500008', // 超级权限\r\n  OP_COMMODITY_B2B_G4: '513014', // B2B全国商城明细价格权限\r\n  OP_ORDER_B2B_G1: '519011', // B2B全国商城下单权限\r\n  OP_FINANCE_REPORT: '521814', // 明细财务报表权限\r\n  OP_ORDER_REPORT: '519814', // 明细销售报表权限\r\n  OP_SALEMAN: '531001', // 业务员权限\r\n\r\n  SS_BASIC: '700004', //基本权限\r\n  SS_ROOT: '700008', // 超级权限\r\n  SS_COMMODITY_B2B_R4: '713034', // B2B地方商城明细价格权限\r\n  SS_ORDER_B2B_R1: '719031', // B2B地方商城下单权限\r\n  SS_FINANCE_REPORT: '721814', // 明细财务报表权限\r\n  SS_ORDER_REPORT: '719814', // 明细销售报表权限\r\n  SS_DELIVERMAN: '731001', // 送货员权限\r\n\r\n  MB_BASIC: '900004' // 基本权限\r\n}\r\nper.authorities = authorities;\r\n\r\nexport default per;\r\n","const URI = {}\r\n\r\nconst ART_DETECTION_CREATE = '/pkgart/page/DetectionEntity';\r\nURI.ART_DETECTION_CREATE = ART_DETECTION_CREATE;\r\n\r\nconst ART_DETECTION_SEARCH_BOX = '/pkgart/page/DetectionSearchBox';\r\nURI.ART_DETECTION_SEARCH_BOX = ART_DETECTION_SEARCH_BOX;\r\n\r\nconst ART_DETECTION_LIST = '/pkgart/page/DetectionList';\r\nURI.ART_DETECTION_LIST = ART_DETECTION_LIST;\r\n\r\nconst COMMODITY_COMMODITY_PUBLISH = '/pkgcommodity/page/commodity/CommodityPublish';\r\nURI.COMMODITY_COMMODITY_PUBLISH = COMMODITY_COMMODITY_PUBLISH;\r\n\r\nconst COMMODITY_COMMODITY_SEARCH_BOX = '/pkgcommodity/page/commodity/CommoditySearchBox';\r\nURI.COMMODITY_COMMODITY_SEARCH_BOX = COMMODITY_COMMODITY_SEARCH_BOX;\r\n\r\nconst COMMODITY_COMMODITY_LIST = '/pkgcommodity/page/commodity/CommodityList';\r\nURI.COMMODITY_COMMODITY_LIST = COMMODITY_COMMODITY_LIST;\r\n\r\nconst LOGISTICS_ADDRESS_ENTITY = '/pkglogistics/page/logistics/AddressEntity';\r\nURI.LOGISTICS_ADDRESS_ENTITY = LOGISTICS_ADDRESS_ENTITY;\r\n\r\nconst LOGISTICS_ADDRESS_LIST = '/pkglogistics/page/logistics/AddressList';\r\nURI.LOGISTICS_ADDRESS_LIST = LOGISTICS_ADDRESS_LIST;\r\n\r\nconst LOGISTICS_FREIGHT_TEMPLATE_ENTITY = '/pkglogistics/page/logistics/FreightTemplateEntity';\r\nURI.LOGISTICS_FREIGHT_TEMPLATE_ENTITY = LOGISTICS_FREIGHT_TEMPLATE_ENTITY;\r\n\r\nconst LOGISTICS_FREIGHT_TEMPLATE_LIST = '/pkglogistics/page/logistics/FreightTemplateList';\r\nURI.LOGISTICS_FREIGHT_TEMPLATE_LIST = LOGISTICS_FREIGHT_TEMPLATE_LIST;\r\n\r\nconst LOGISTICS_FREIGHT_TEMPLATE_SEARCH_BOX = '/pkglogistics/page/logistics/FreightTempSearchBox';\r\nURI.LOGISTICS_FREIGHT_TEMPLATE_SEARCH_BOX = LOGISTICS_FREIGHT_TEMPLATE_SEARCH_BOX;\r\n\r\nconst FINANCE_CASH_DEPOSIT_ENTITY = '/pkgfinance/page/finance/CashDepositEntity';\r\nURI.FINANCE_CASH_DEPOSIT_ENTITY = FINANCE_CASH_DEPOSIT_ENTITY;\r\n\r\nconst FINANCE_CASH_DEPOSIT_LIST = '/pkgfinance/page/finance/CashDepositList';\r\nURI.FINANCE_CASH_DEPOSIT_LIST = FINANCE_CASH_DEPOSIT_LIST;\r\n\r\nconst FINANCE_CASH_DEPOSIT_SEARCH_BOX = '/pkgfinance/page/finance/CashDepositSearchBox';\r\nURI.FINANCE_CASH_DEPOSIT_SEARCH_BOX = FINANCE_CASH_DEPOSIT_SEARCH_BOX;\r\n\r\nconst FINANCE_WITHDRAW_ENTITY = '/pkgfinance/page/finance/WithdrawEntity';\r\nURI.FINANCE_WITHDRAW_ENTITY = FINANCE_WITHDRAW_ENTITY;\r\n\r\nconst FINANCE_WITHDRAW_LIST = '/pkgfinance/page/finance/WithdrawList';\r\nURI.FINANCE_WITHDRAW_LIST = FINANCE_WITHDRAW_LIST;\r\n\r\nconst FINANCE_WITHDRAW_SEARCH_BOX = '/pkgfinance/page/finance/WithdrawSearchBox';\r\nURI.FINANCE_WITHDRAW_SEARCH_BOX = FINANCE_WITHDRAW_SEARCH_BOX;\r\n\r\nconst IDE_IDEA_CREATE = '/pkgart/page/IdeaEntity';\r\nURI.IDE_IDEA_CREATE = IDE_IDEA_CREATE;\r\n\r\nconst IDE_IDEA_SEARCH_BOX = '/pkgart/page/IdeaSearchBox';\r\nURI.IDE_IDEA_SEARCH_BOX = IDE_IDEA_SEARCH_BOX;\r\n\r\nconst IDE_IDEA_LIST = '/pkgart/page/IdeaList';\r\nURI.IDE_IDEA_LIST = IDE_IDEA_LIST;\r\n\r\nconst LOGISTICS_MAP = '/pkglogistics/page/logistics/ShipMap';\r\nURI.LOGISTICS_MAP = LOGISTICS_MAP;\r\n\r\nconst MALL_CHANGE_TYPE = '/page/mall/Mall';\r\nURI.MALL_CHANGE_TYPE = MALL_CHANGE_TYPE;\r\n\r\nconst MALL_CHATTING = '/pkgmall/page/mall/Chatting';\r\nURI.MALL_CHATTING = MALL_CHATTING;\r\n\r\nconst MALL_COMMODITY_DETAIL = '/pkgmall/page/mall/CommodityDetail';\r\nURI.MALL_COMMODITY_DETAIL = MALL_COMMODITY_DETAIL;\r\n\r\nconst MALL_COMMODITY_LIST_CATEGORY = '/pkgmall/page/mall/CommodityListByCategory';\r\nURI.MALL_COMMODITY_LIST_CATEGORY = MALL_COMMODITY_LIST_CATEGORY;\r\n\r\nconst MALL_COMMODITY_LIST_KEYWORD = '/pkgmall/page/mall/CommodityListByKeyword';\r\nURI.MALL_COMMODITY_LIST_KEYWORD = MALL_COMMODITY_LIST_KEYWORD;\r\n\r\nconst MALL_COMMODITY_SEARCH_BOX = '/pkgmall/page/mall/CommoditySearchBox';\r\nURI.MALL_COMMODITY_SEARCH_BOX = MALL_COMMODITY_SEARCH_BOX;\r\n\r\nconst MALL_HOME = '/page/mall/Home';\r\nURI.MALL_HOME = MALL_HOME;\r\n\r\nconst MALL_MESSAGE_LIST = '/pkgmall/page/mall/MessageList';\r\nURI.MALL_MESSAGE_LIST = MALL_MESSAGE_LIST;\r\n\r\nconst MALL_MESSAGE_SEARCH = '/pkgmall/page/mall/MessageSearch';\r\nURI.MALL_MESSAGE_SEARCH = MALL_MESSAGE_SEARCH;\r\n\r\nconst MALL_SHOW_LIST_BY_TYPE = '/pkgmall/page/mall/ShowListByType';\r\nURI.MALL_SHOW_LIST_BY_TYPE = MALL_SHOW_LIST_BY_TYPE;\r\n\r\nconst MALL_SHOPPING_CART = '/page/mall/ShoppingCart';\r\nURI.MALL_SHOPPING_CART = MALL_SHOPPING_CART;\r\n\r\nconst MALL_SHOP_HOME = '/pkgmall/page/mall/ShopHome';\r\nURI.MALL_SHOP_HOME = MALL_SHOP_HOME;\r\n\r\nconst MEMBER_COMMISSION_BELONGTO = '/pkgsubject/page/member/CommissionBelongtoEntity';\r\nURI.MEMBER_COMMISSION_BELONGTO = MEMBER_COMMISSION_BELONGTO;\r\n\r\nconst MEMBER_LOGIN = '/pkgsubject/page/member/Login';\r\nURI.MEMBER_LOGIN = MEMBER_LOGIN;\r\n\r\nconst MEMBER_REGISTER = '/pkgsubject/page/member/Register';\r\nURI.MEMBER_REGISTER = MEMBER_REGISTER;\r\n\r\nconst MENBER_MINE = '/page/member/Mine';\r\nURI.MENBER_MINE = MENBER_MINE;\r\n\r\nconst MENBER_MERCHANT = '/page/subject/Merchant';\r\nURI.MENBER_MERCHANT = MENBER_MERCHANT;\r\n\r\nconst ORDER_PLACE_ORDER = '/pkgorder/page/order/OrderPlace';\r\nURI.ORDER_PLACE_ORDER = ORDER_PLACE_ORDER;\r\n\r\nconst ORDER_ORDER_ENTITY = '/pkgorder/page/order/OrderEntity';\r\nURI.ORDER_ORDER_ENTITY = ORDER_ORDER_ENTITY;\r\n\r\nconst ORDER_SEARCH_BOX = '/pkgorder/page/order/OrderSearchBox';\r\nURI.ORDER_SEARCH_BOX = ORDER_SEARCH_BOX;\r\n\r\nconst ORDER_VIEW_LIST = '/pkgorder/page/order/OrderViewList';\r\nURI.ORDER_VIEW_LIST = ORDER_VIEW_LIST;\r\n\r\nconst ORDER_ORDER_LIST = '/pkgorder/page/order/OrderList';\r\nURI.ORDER_ORDER_LIST = ORDER_ORDER_LIST;\r\n\r\nconst ORDER_OTHERS_SHIP_ENTITY = '/pkgorder/page/others/ShipEntity';\r\nURI.ORDER_OTHERS_SHIP_ENTITY = ORDER_OTHERS_SHIP_ENTITY;\r\n\r\nconst ORDER_OTHERS_SHIP_LIST = '/pkgorder/page/others/ShipList';\r\nURI.ORDER_OTHERS_SHIP_LIST = ORDER_OTHERS_SHIP_LIST;\r\n\r\nconst ORDER_OTHERS_SHIP_DETAIL = '/pkgorder/page/others/ShipDetail';\r\nURI.ORDER_OTHERS_SHIP_DETAIL = ORDER_OTHERS_SHIP_DETAIL;\r\n\r\nconst ORDER_SHIP_SEARCH_BOX = '/pkgorder/page/others/ShipSearchBox';\r\nURI.ORDER_SHIP_SEARCH_BOX = ORDER_SHIP_SEARCH_BOX;\r\n\r\nconst ORG_JOIN_APPLICATION = '/pkgsubject/page/others/OrgJoinApplication';\r\nURI.ORG_JOIN_APPLICATION = ORG_JOIN_APPLICATION;\r\n\r\nconst PAYMENT_PAY = '/pkgorder/page/payment/Payment';\r\nURI.PAYMENT_PAY = PAYMENT_PAY;\r\n\r\nconst PAYMENT_PAY3 = '/pkgorder/page/payment/Payment3';\r\nURI.PAYMENT_PAY3 = PAYMENT_PAY3;\r\n\r\nconst PAYMENT_PAY5 = '/pkgorder/page/payment/Payment5';\r\nURI.PAYMENT_PAY5 = PAYMENT_PAY5;\r\n\r\nconst SERVICE_STATION_SEARCH_BOX = '/pkgsubject/page/servicestation/ServiceStationSearchBox';\r\nURI.SERVICE_STATION_SEARCH_BOX = SERVICE_STATION_SEARCH_BOX;\r\n\r\nconst SERVICE_STATION_ENTITY = '/pkgsubject/page/servicestation/ServiceStationEntity';\r\nURI.SERVICE_STATION_ENTITY = SERVICE_STATION_ENTITY;\r\n\r\nconst SERVICE_STATION_LIST = '/pkgsubject/page/servicestation/ServiceStationList';\r\nURI.SERVICE_STATION_LIST = SERVICE_STATION_LIST;\r\n\r\nconst SUPPLIER_OPERATOR_ENTITY = '/pkgsubject/page/supplier/Supplier2OperatorEntity';\r\nURI.SUPPLIER_OPERATOR_ENTITY = SUPPLIER_OPERATOR_ENTITY;\r\n\r\nconst SUPPLIER_OPERATOR_LIST = '/pkgsubject/page/supplier/Supplier2OperatorList';\r\nURI.SUPPLIER_OPERATOR_LIST = SUPPLIER_OPERATOR_LIST;\r\n\r\nconst SUPPLIER_SEARCH_BOX = '/pkgsubject/page/supplier/SupplierSearchBox';\r\nURI.SUPPLIER_SEARCH_BOX = SUPPLIER_SEARCH_BOX;\r\n\r\nconst SUPPLIER_SUPPLIER_ENTITY = '/pkgsubject/page/supplier/SupplierEntity';\r\nURI.SUPPLIER_SUPPLIER_ENTITY = SUPPLIER_SUPPLIER_ENTITY;\r\n\r\nconst SUPPLIER_SUPPLIER_LIST = '/pkgsubject/page/supplier/SupplierList';\r\nURI.SUPPLIER_SUPPLIER_LIST = SUPPLIER_SUPPLIER_LIST;\r\n\r\nconst SUPPLIER_VISIT_ENTITY = '/pkgsubject/page/supplier/SupplierVisitEntity';\r\nURI.SUPPLIER_VISIT_ENTITY = SUPPLIER_VISIT_ENTITY;\r\n\r\nconst SUPPLIER_VISIT_LIST = '/pkgsubject/page/supplier/SupplierVisitList';\r\nURI.SUPPLIER_VISIT_LIST = SUPPLIER_VISIT_LIST;\r\n\r\nconst SUPPLIER_VISIT_SEARCH = '/pkgsubject/page/supplier/SupplierVisitSearch';\r\nURI.SUPPLIER_VISIT_SEARCH = SUPPLIER_VISIT_SEARCH;\r\n\r\n\r\nexport default URI;\r\n","import React from 'react'\r\nimport { styled } from '@linaria/react'\r\nimport { View } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\nimport GeneralButton from 'tsx/form/GeneralButton'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\nimport CheckBoxes from 'tsx/form/CheckBoxes'\r\nimport ImagePicker from 'tsx/form/ImagePicker'\r\n\r\nconst BottomOpBar0 = styled(View) <{bottom: string }>`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 46px;\r\n    z-index: 999;\r\n    background-color: rgba(0, 255, 255, 0.99);\r\n`\r\n\r\nclass BottomOpBar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\t\tcheckedList: []\r\n\t}}\r\n\r\n\tcomponentDidMount() {\r\n\t}\r\n\r\n\tonCheckBoxesChanged = (name, selectedValues) => {\r\n\t\tthis.setState({ [name]: selectedValues });\r\n\t\tthis.props.bottomFunc1(name, selectedValues);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {bottomLabel0, bottomLabel1, bottomLabel2, bottomLabel3, bottomLabel4, bottomLabel5, bottomLabel6, bottomLabel7, bottomLabel8, bottomLabel9, bottomLabel10, shareLabel } = this.props;\r\n\t\tconst {that, imageUri, postFunc, bottomFunc0, bottomFunc1, bottomFunc2, bottomFunc3, bottomFunc4, bottomFunc5, bottomFunc6, bottomFunc7, bottomFunc8, bottomFunc9, bottomFunc10, shareFunc } = this.props;\r\n\t\tconst isShown = bottomLabel1 || bottomLabel2 || bottomLabel3 || bottomLabel4;\r\n\r\n\t\tlet bottom = this.props.bottom;\r\n\t\tbottom = bottom ? 0 : 0;\r\n\t\tbottom = JsUtil.getCssHeightValue(bottom, 0);\r\n\t\tconst width = JsUtil.getCssWidthValue(-100, 0);\r\n\t\tconst options = [];\r\n\t\toptions.push({ value: 1, label: bottomLabel1 })\r\n\t\tlet style = {bottom: 0}\r\n        if(process.env.TARO_ENV === 'rn'){\r\n          style = {position: 'absolute', bottom: 0, width: width}\r\n        }\r\n        \r\n    let height = 20;\r\n    if(process.env.TARO_ENV === 'h5') {\r\n      height = 20;\r\n      style.bottom = 0\r\n      if(bottomLabel4=='结算') style.bottom = 50\r\n    }\r\n    \r\n\t\treturn (\r\n\t\t\t\t<BottomOpBar0 bottom={bottom} style={style}>\r\n\t\t\t\t{bottomLabel1 &&\r\n\t\t\t\t<CheckBoxes name='checkedList' width={80} height={height}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t    value={this.state.checkedList}\r\n\t\t\t\t    onChange={this.onCheckBoxesChanged}\r\n\t\t\t\t>\r\n\t\t\t\t</CheckBoxes>\r\n\t\t\t\t}\r\n\t\t\t\t{imageUri &&\r\n\t\t\t\t\t<ImagePicker files={[]} count={1} disabled={false} that={this.props.that} category={cnst.BIZZ_CAT_COMMON} />\r\n\t\t\t\t}\r\n\t\t\t\t{bottomLabel0 &&\r\n\t\t\t\t\t<GeneralButton type='primary' size='mini' width={26} height={height} onClick={bottomFunc0}>{bottomLabel0}</GeneralButton>\r\n\t\t\t\t}\r\n\t\t\t\t{bottomLabel2 &&\r\n\t\t\t\t\t<GeneralButton type='primary' size='mini' width={26} height={height} onClick={bottomFunc2}>{bottomLabel2}</GeneralButton>\r\n\t\t\t\t}\r\n\t\t\t\t{bottomLabel3 &&\r\n\t\t\t\t\t<GeneralButton type='primary' size='mini' width={26} height={height} onClick={bottomFunc3}>{bottomLabel3}</GeneralButton>\r\n\t\t\t\t}\r\n\t\t\t\t{bottomLabel4 &&\r\n\t\t\t\t\t<GeneralButton type='primary' size='mini' width={26} height={height} onClick={bottomFunc4}>{bottomLabel4}</GeneralButton>\r\n\t\t\t\t}\r\n\t\t\t\t{bottomLabel5 &&\r\n\t\t\t\t\t<GeneralButton type='primary' size='mini' width={26} height={height} onClick={bottomFunc5}>{bottomLabel5}</GeneralButton>\r\n\t\t\t\t}\r\n\t\t\t\t{bottomLabel6 &&\r\n\t\t\t\t\t<GeneralButton type='primary' size='mini' width={26} height={height} onClick={bottomFunc6}>{bottomLabel6}</GeneralButton>\r\n\t\t\t\t}\r\n\t\t\t\t{bottomLabel7 &&\r\n\t\t\t\t\t<GeneralButton type='primary' size='mini' width={26} height={height} onClick={bottomFunc7}>{bottomLabel7}</GeneralButton>\r\n\t\t\t\t}\r\n\t\t\t\t{bottomLabel8 &&\r\n\t\t\t\t\t<GeneralButton type='primary' size='mini' width={26} height={height} onClick={bottomFunc8}>{bottomLabel8}</GeneralButton>\r\n\t\t\t\t}\r\n\t\t\t\t{bottomLabel9 &&\r\n\t\t\t\t\t<GeneralButton type='primary' size='mini' width={26} height={height} onClick={bottomFunc9}>{bottomLabel9}</GeneralButton>\r\n\t\t\t\t}\r\n\t\t\t\t{bottomLabel10 &&\r\n\t\t\t\t\t<GeneralButton type='primary' size='mini' width={26} height={height} onClick={bottomFunc10}>{bottomLabel10}</GeneralButton>\r\n\t\t\t\t}\r\n\t\t\t\t{shareLabel &&\r\n\t\t\t\t\t<GeneralButton type='primary' size='mini' width={26} height={height} onClick={shareFunc} openType='share'>{shareLabel}</GeneralButton>\r\n\t\t\t\t}\r\n\t\t\t\t</BottomOpBar0>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default BottomOpBar\r\n","import React from 'react'\r\nimport Modal from 'tsx/component/CustomModal';\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\nimport BaseView from 'tsx/view/BaseView'\r\nimport ScrollableView from 'tsx/view/ScrollableView'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\nimport CheckBoxes from 'tsx/form/CheckBoxes';\r\nimport GeneralButton from 'tsx/form/GeneralButton'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\n\r\nclass TaroModal extends React.Component {\r\n    state = {\r\n        checkedList: []\r\n    }\r\n\r\n    onCheckBoxesChanged = (name, values) => {\r\n        this.setState({ [name]: values });\r\n        this.props.onCheckLevelAll();\r\n    }\r\n\r\n    showMessages = (contents) => {\r\n      return contents.map((item, idx) =>{\r\n                            return (<TextLabel key={idx}>{item}</TextLabel>)\r\n                        })\r\n    }\r\n\r\n    close = (event) => {\r\n\t  console.log('TaroModal clos() event: ', event);\r\n\t  if(this.props.that){\r\n\t    const messages = this.props.that.state? this.props.that.state.messages:{};\r\n        this.props.that.setState({messages: {...messages, isOpened:false}});\r\n      }\r\n    }\r\n    \r\n    render() {\r\n        const isRN = process.env.TARO_ENV === 'rn';\r\n        let isOpened = this.props.isOpened? true: false;\r\n        let display = this.props.isOpened? \"flex\" :  \"none\"\r\n        const zIndex = JsUtil.getCssNumValue( this.props.zIndex, 6666);\r\n              \r\n        const justifyContent = JsUtil.getCssStrValue( this.props.justifyContent, 'center');\r\n\r\n        let alignItems = this.props.alignItems\r\n        alignItems ? alignItems = alignItems : alignItems = 'center'\r\n              \r\n        const backgroundColor = JsUtil.getColorValue(this.props.backgroundColor, cnst.COLOR_BACKGROUND_TRANS_WHITE);\r\n          \r\n        const cancelText = this.props.cancelText;\r\n        const confirmText = this.props.confirmText;\r\n        const checkText = this.props.checkText;\r\n        let onConfirm = this.props.onConfirm;\r\n        const options = [];\r\n        options.push({ value: 1, label: checkText });\r\n        \r\n        const messages = this.props.that? this.props.that.state.messages:{};\r\n        let contents = [];\r\n        let shownContent = this.props.children;\r\n        let height = JsUtil.getCssNumValue(this.props.height, cnst.NUM_HEIGHT_MAIN)\r\n        if(messages && messages.content){\r\n            contents = messages.content.split('\\n');\r\n            shownContent=this.showMessages(contents);\r\n            onConfirm = messages.onConfirm||this.close;\r\n            display = 'flex';\r\n            isOpened = messages.isOpened;\r\n            height = cnst.NUM_HEIGHT_MAIN/2\r\n        }\r\n        \r\n        const menuBar = [<RowLayout justifyContent={'space-between'} width={cnst.NUM_WIDTH_MAIN} height={-5} backgroundColor={[0,255,255,1]}>\r\n                        {this.props.onCheckLevelAll && <CheckBoxes name='checkedList' options={options} value={this.state.checkedList} onChange={this.onCheckBoxesChanged}  width={68} />}\r\n                        {this.props.onClose && <GeneralButton type='primary' size='mini' width={26} height={20} onClick={this.props.onClose}>关闭</GeneralButton>}\r\n                        {this.props.onCancel && <GeneralButton type='primary' size='mini' width={26} height={20} onClick={this.props.onCancel}>{cancelText ? cancelText : '取消'}</GeneralButton>}\r\n                        {onConfirm && <GeneralButton type='primary' size='mini' width={26} height={20} onClick={onConfirm}>{confirmText ? confirmText : '确定'}</GeneralButton>}\r\n                         </RowLayout>];\r\n\r\n        if(isRN==false){\r\n\t\tif(!isOpened) return '';\r\n        return  (\r\n                <BaseView  display={display} position='fixed' zIndex={zIndex} width={cnst.NUM_WIDTH_MAIN}>\r\n                <ColumnLayout width={cnst.NUM_WIDTH_MAIN} backgroundColor={[173,255,47,1]}>\r\n                <ScrollableView justifyContent={justifyContent} alignItems={alignItems} height={height+20}>\r\n                    {shownContent}\r\n                </ScrollableView>\r\n                {menuBar}\r\n                </ColumnLayout>\r\n                </BaseView>\r\n           )}else{\r\n           return (\r\n                <Modal isVisible={isOpened} \r\n          animationIn={'fadeIn'}\r\n          animationOut={'fadeOut'}\r\n          coverScreen={true}\r\n          backdropColor={'white'}\r\n          backdropOpacity={0}> \r\n          <ColumnLayout  justifyContent={'center'} alignItems='center' width={cnst.NUM_WIDTH_MAIN}  height={height} backgroundColor={[255,0,255,1]}>\r\n                <ScrollableView justifyContent={this.props.justifyContent} height={height+15}>\r\n                    {shownContent}\r\n                </ScrollableView>\r\n                {menuBar}\r\n         </ColumnLayout>\r\n         </Modal>)\r\n    }\r\n    }\r\n}\r\n\r\nexport default TaroModal\r\n","import React from 'react'\r\nimport { styled } from '@linaria/react'\r\nimport { View } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport URI from 'tsx/common/URI'\r\nimport BaseView from 'tsx/view/BaseView'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\nimport LinkTag from 'tsx/view/LinkTag'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\nimport SimpleIcon from 'tsx/view/SimpleIcon'\r\nimport TaroModal from 'tsx/component/TaroModal';\r\nimport HomeImage from 'img/p/home_selected.png'\r\nimport SearchImage from 'img/p/search.png'\r\n\r\nconst TopNavBar0 = styled( View ) < { marginTop: string, height: string, backgroundColor: string } > `\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    position: fixed;\r\n    top: 0px;\r\n    margin-top: ${props => props.marginTop};\r\n    width: 100%;\r\n    height: ${props => props.height};\r\n    z-index: 999;\r\n    background-color: ${props => props.backgroundColor};\r\n`\r\n\r\nclass TopNavBar extends React.Component {\r\n    constructor( props ) {\r\n        super( props )\r\n        this.state = {\r\n            keyWord: '',\r\n            popupSearch: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    goBack = () => {\r\n        JsUtil.goBack()\r\n    }\r\n\r\n    go2Home = () => {\r\n        JsUtil.go2Tab( URI.MALL_HOME )\r\n    }\r\n\r\n    keyWordChanged = ( value ) => {\r\n        this.setState( { keyWord: value } );\r\n    }\r\n\r\n    searchCommodity = ( event ) => {\r\n        this.setState( { popupSearch: true } );\r\n    }\r\n\r\n    searchConfirm = ( deliveryType ) => ( event ) => {\r\n        this.setState( { popupSearch: false } );\r\n        JsUtil.go2Page( URI.MALL_COMMODITY_LIST_KEYWORD + '?deliveryType=' + deliveryType + '&commodityName=' + this.state.keyWord );\r\n    }\r\n    \r\n    commodityList = ( event ) => {\r\n        JsUtil.go2Page( URI.MALL_COMMODITY_SEARCH_BOX  + '?supplierId=')\r\n    }\r\n    \r\n    onClose = ( name ) => {\r\n        this.setState( { [name]: false } )\r\n    }\r\n\r\n    render() {\r\n        const height = JsUtil.getCssHeightValue(this.props.height, 'auto'); \r\n        const topNavBarTitle = this.props.topNavBarTitle;\r\n\r\n        return (\r\n            <TopNavBar0 height={height} backgroundColor={'#3F51B5'}>\r\n                {topNavBarTitle && <RowLayout justifyContent='flex-start'>\r\n                     <LinkTag color='white' onClick={this.goBack}>&nbsp;&lt;&nbsp;</LinkTag>\r\n                     <TextLabel>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TextLabel>\r\n                     <SimpleIcon value={HomeImage} onClick={this.go2Home} />\r\n                     <TextLabel>&nbsp;&nbsp;</TextLabel>\r\n                     <TextLabel justifyContent={'flex-start'} color='white'>{topNavBarTitle}</TextLabel>\r\n                     </RowLayout>\r\n                }\r\n                {!topNavBarTitle && <RowLayout justifyContent='flex-start'>\r\n                    <SimpleIcon value={SearchImage} onClick={this.commodityList} />\r\n                    <TextLabel>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TextLabel>\r\n                    <SimpleIcon value={HomeImage} onClick={this.go2Home} />\r\n                    </RowLayout>\r\n                }\r\n            </TopNavBar0>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopNavBar\r\n","import React from 'react'\r\nimport { styled } from '@linaria/react'\r\nimport { CheckboxGroup, Checkbox, View } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\nimport BrView from 'tsx/view/BrView'\r\nimport BaseView from 'tsx/view/BaseView'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\n\r\nconst CheckboxGroup0 = styled(CheckboxGroup)`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n`\r\nconst Checkbox0 = styled(Checkbox)`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    & > .taro-checkbox_checked {\r\n    top: 0;\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`\r\n\r\nclass CascadeBox extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        checkedList: [],\r\n      }\r\n    }\r\n    \r\n    onGroupChanged = (event) => {\r\n       console.log('CascadeBox onGroupChanged')\r\n       const id = event.currentTarget.id;\r\n       const name = this.props.name;\r\n       const selectedValues = event.detail.value;\r\n       let checkedList = this.props.value || [];\r\n       const ids = id.split('_');\r\n       const idx = parseInt(ids[0]);\r\n       const idxp = parseInt(ids[1]);\r\n       const changedValue = ids[2];\r\n       \r\n       if(selectedValues.length>0){\r\n           checkedList.push(changedValue);\r\n       }else{\r\n           checkedList=JsUtil.delEleByValue(checkedList, changedValue);\r\n       }\r\n       \r\n       //this.setState({checkedList: checkedList});\r\n       this.props.onChange(name, checkedList, changedValue, idx, idxp);\r\n    }\r\n    \r\n    onOptionChanged = (event) => {\r\n        console.log('CascadeBox onOptionChanged')\r\n        const name = this.props.name;\r\n        let checkedList = this.props.value;\r\n        const selectedValues = event.value;\r\n        const isChecked = event.checked;\r\n        const ids = selectedValues.split('_');\r\n        const idx = parseInt(ids[0]);\r\n        const idxp = parseInt(ids[1]);\r\n        const changedValue = ids[2];\r\n        \r\n        if(isChecked){\r\n            checkedList.push(changedValue);\r\n        }else{\r\n            checkedList=JsUtil.delEleByValue(checkedList, changedValue);\r\n        }\r\n        \r\n        //this.setState({checkedList: checkedList});\r\n        this.props.onChange(name, checkedList, changedValue, idx, idxp);\r\n     }\r\n    \r\n  render() {\r\n    const justifyContent = this.props.justifyContent? this.props.justifyContent: 'flex-start';\r\n    const marginLeft = this.props.marginLeft? this.props.marginLeft: 3;\r\n    const width = JsUtil.getCssWidthValue(this.props.width, cnst.NUM_WIDTH_MAIN);\r\n    const height = JsUtil.getCssWidthValue(this.props.height, 'auto');\r\n    const name = this.props.name;\r\n    const value = this.props.value;\r\n    const idxp = this.props.idxp? this.props.idxp: 0 ;\r\n    const options = this.props.options;\r\n      \r\n    return (<BaseView flexDirection={this.props.flexDirection} marginLeft={marginLeft} flexWrap='wrap' width={width} height={height} backgroundColor={cnst.COLOR_BACKGROUND_TRANS_WHITE}>\r\n     {this.props.label &&\r\n       <TextLabel backgroundColor={cnst.COLOR_BACKGROUND_TRANS_WHITE}>{this.props.label}</TextLabel>\r\n     }\r\n\r\n     {options.map((option, idx) => {\r\n     const isChecked = value? value.includes(option.value)? true: false: false;\r\n     \r\n     if(option.desc){\r\n     return (\r\n          <ColumnLayout key={idx}>\r\n          <CheckboxGroup0 id={idx+'_'+idxp+'_'+option.value}  onChange={this.onGroupChanged} disabled={this.props.disabled}>\r\n          <RowLayout alignItems='center' height={23}>\r\n          <Checkbox0 value={idx+'_'+idxp+'_'+option.value} checked={isChecked}  onChange={this.onOptionChanged}\r\n           style={{fontSize: 14}} disabled={this.props.disabled}\r\n          />\r\n          {option.label}\r\n          </RowLayout>\r\n          </CheckboxGroup0>\r\n          <BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_TRANS_WHITE} />\r\n          <BaseView justifyContent='space-around'>{option.desc}</BaseView>\r\n          {!option.desc.props.options &&\r\n          <BrView height={1} backgroundColor={cnst.COLOR_BACKGROUND_DEEP_BLUE} />\r\n          }\r\n          <BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_TRANS_WHITE} />\r\n          </ColumnLayout>\r\n     )}else{\r\n     return (\r\n          <CheckboxGroup0 id={idx+'_'+idxp+'_'+option.value}  onChange={this.onGroupChanged} disabled={this.props.disabled}>\r\n          <Checkbox0 value={idx+'_'+idxp+'_'+option.value} checked={isChecked}  onChange={this.onOptionChanged}\r\n           style={{fontSize: 14}} disabled={this.props.disabled}\r\n      >\r\n      {option.label}\r\n      </Checkbox0>\r\n          </CheckboxGroup0>\r\n     )}\r\n     \r\n     })}\r\n\r\n    </BaseView>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CascadeBox\r\n","import React from 'react'\r\nimport { styled } from '@linaria/react'\r\nimport { CheckboxGroup, Checkbox } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\nimport TextLabel from 'tsx/view/TextLabel';\r\n\r\nconst CheckboxGroup0 = styled(CheckboxGroup)`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n`\r\nconst Checkbox0 = styled(Checkbox)`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    & > .taro-checkbox_checked {\r\n    top: 0;\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`\r\n\r\nclass CheckBoxes extends React.Component {\r\n    onGroupChanged = (event) => {\r\n       console.log('CheckBoxes onGroupChanged')\r\n       const selectedValues = event.detail.value;\r\n       this.props.onChange(this.props.name, selectedValues)\r\n    }\r\n    \r\n    onOptionChanged = (event) => {\r\n        console.log('CheckBoxes onOptionChanged')\r\n        const name = this.props.name;\r\n        let selectedValues = this.props.value;\r\n        const changedValue = event.value;\r\n        const isChecked = event.checked;\r\n        \r\n        if(isChecked){\r\n            selectedValues.push(changedValue);\r\n        }else{\r\n            selectedValues=JsUtil.delEleByValue(selectedValues, changedValue);\r\n        }\r\n        \r\n        this.props.onChange(name, selectedValues)\r\n     }\r\n    \r\n  render() {\r\n    const width = JsUtil.getCssWidthValue(this.props.width, 'auto');\r\n    const height = JsUtil.getCssWidthValue(this.props.height, 'auto');\r\n\tconst options = this.props.options;\r\n    const value = this.props.value;\r\n\r\n    return (\r\n    <CheckboxGroup0 onChange={this.onGroupChanged}>\r\n    {options.map((option, idx) => {\r\n     const isChecked = value? (value.includes(option.value)||value.includes(option.value+''))? true: false: false;\r\n     \r\n     return (\r\n      <Checkbox0 key={idx} value={option.value} checked={isChecked} onChange={this.onOptionChanged}\r\n       style={{width: width, height: height, fontSize: 14}}\r\n      >\r\n      {option.label}&nbsp;&nbsp;\r\n      </Checkbox0>\r\n     )})}\r\n    </CheckboxGroup0>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxes\r\n","import React from 'react'\r\nimport { styled } from '@linaria/react'\r\nimport { Button } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport TextLabel from 'tsx/view/TextLabel';\r\n\r\nconst Button0 = styled(Button) <{ left: string, bottom: string,  top: string, right: string, justifyContent: string,  alignItems: string, alignSelf: string, \r\nwidth: string, height: string, backgroundColor: string }>`\r\ndisplay: flex;\r\nflex-direction: row;\r\nposition: relative;\r\njustify-content: ${props => props.justifyContent};\r\nalign-items: ${props => props.alignItems};\r\nalign-self: ${props => props.alignSelf};\r\nwidth: ${props => props.width};\r\nheight: ${props => props.height};\r\nbackground-color: ${props => props.backgroundColor};\r\n`\r\n\r\nclass GeneralButton extends React.Component {\r\n  render() {\r\n    const left = JsUtil.getCssWidthValue( this.props.left, 0);\r\n    const bottom = JsUtil.getCssHeightValue(this.props.bottom, 0);\r\n    const top = JsUtil.getCssHeightValue( this.props.top, 0);\r\n    const right = JsUtil.getCssWidthValue( this.props.right, 0);\r\n      \r\n    const justifyContent = JsUtil.getCssStrValue( this.props.justifyContent, 'flex-start');\r\n    const alignItems = JsUtil.getCssStrValue( this.props.alignItems, 'flex-start');\r\n    const alignSelf = JsUtil.getCssStrValue( this.props.alignSelf, 'flex-start');\r\n    \r\n    const width = JsUtil.getCssWidthValue(this.props.width, 'auto');\r\n    const height = JsUtil.getCssHeightValue(this.props.height, 'auto');\r\n\r\n    const marginTop = JsUtil.getCssHeightValue(this.props.marginTop, 0);\r\n    const marginBottom = JsUtil.getCssHeightValue(this.props.marginBottom, 0);\r\n\r\n    const backgroundColor = JsUtil.getColorValue( this.props.backgroundColor);\r\n    \r\n    const type = this.props.type? this.props.type: 'primary'\r\n    const size = this.props.size? this.props.size: 'mini'\r\n    \r\n    const plain  = this.props.plain? true: false;\r\n    const disabled  = this.props.disabled? true: false;\r\n    \r\n    let paddingLeft = 3;\r\n    if(process.env.TARO_ENV === 'h5') paddingLeft = 0;\r\n\r\n    return (\r\n       <Button \r\n        type={type} openType={this.props.openType} size={size} disabled={disabled} \r\n        backgroundColor={backgroundColor} \r\n        onClick={this.props.onClick} \r\n        style={{width: width, height: height, fontSize: 10, marginTop: 0, paddingLeft: paddingLeft, paddingRight: 0, paddingTop: 0}}\r\n       >\r\n        {this.props.children}\r\n       </Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GeneralButton\r\n","import React from 'react'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout';\r\nimport RowLayout from 'tsx/layout/RowLayout';\r\nimport CellView from 'tsx/view/CellView';\r\nimport GeneralButton from 'tsx/form/GeneralButton'\r\nimport LegenImage from 'tsx/view/LegenImage'\r\nimport LinkTag from 'tsx/view/LinkTag'\r\n\r\nclass ImagePicker extends React.Component {\r\n  that = this;\r\n  \r\n  onAddImage = (event) =>{\r\n      JsUtil.onFileUpload(this.props.that, {count: this.props.count, category: this.props.category}, this.uploadCallback);\r\n  }\r\n  \r\n  uploadCallback = (result) => {\r\n\t  console.log('uploadCallback result: ', result)\r\n      const files = this.props.count==1? []: this.props.files;\r\n      files.push({url: JsUtil.IMAGE_PREFIX + result.body})\r\n      const that = this.that;\r\n\t  console.log('uploadCallback that: ', that)\r\n      that.props.onChange(files, 'add', result.body);\r\n  }\r\n  \r\n  onRemoveImage = (idx, event) => {\r\n      let files = this.props.files;\r\n      files = JsUtil.delEleByIdx(files, idx);\r\n      if(this.props.that)\r\n      this.props.that.onChange(files, 'rm', idx);\r\n      else\r\n      this.props.onChange(files, 'rm', idx);\r\n  }\r\n  \r\n  getShownContent = (files) => {\r\n      const disabled = this.props.disabled;\r\n      const width = disabled? cnst.NUM_WIDTH_MAIN: 80;\r\n      const height = disabled? cnst.NUM_WIDTH_MAIN/2: 80;\r\n      const totalSize = files.length;\r\n      const columnSize = disabled? 1: this.props.columnSize||4;\r\n      const rowArr = []\r\n      let itemArr = []\r\n      \r\n      files.map((item, idx)=>{\r\n          itemArr.push( <CellView key={'img-'+idx}><LegenImage src={item.url} width={width} height={height}  />\r\n          {disabled!=true &&\r\n          <LinkTag plain={true} type='primary' onClick={event=>this.onRemoveImage(idx, event)} position={'absolute'} zIndex={9} justifyContent='flex-start' alignItems='flex-start' alignSelf='flex-start' width={10} height={10} backgroundColor={[255,255,255,1]}>-</LinkTag>\r\n          }\r\n          </CellView>)\r\n          if(idx==totalSize-1 && totalSize%columnSize!=0 && disabled!=true){\r\n             itemArr.push( <CellView key={'add-'+idx}><GeneralButton onClick={this.onAddImage} alignSelf='flex-end' width={80} height={80}>+</GeneralButton></CellView>)\r\n          }\r\n          \r\n          if( idx%columnSize==columnSize-1||idx==totalSize-1){\r\n             rowArr.push(<RowLayout key={'row-'+idx} >{itemArr}</RowLayout>)\r\n             itemArr = []\r\n          }\r\n      })\r\n      \r\n      if((totalSize==0 || totalSize%columnSize==0) && disabled!=true){\r\n          rowArr.push(<RowLayout  key={'row-'+(totalSize+1)} ><CellView><GeneralButton onClick={this.onAddImage}  alignSelf='flex-end' width={80} height={80}>+</GeneralButton></CellView></RowLayout>)\r\n      }\r\n      \r\n      return rowArr\r\n  }\r\n  \r\n  render() {\r\n    const showContent = this.getShownContent(this.props.files);\r\n      \r\n    return <ColumnLayout>\r\n      {showContent}\r\n    </ColumnLayout>\r\n  }\r\n}\r\n\r\nexport default ImagePicker\r\n","import React from 'react'\r\nimport { styled } from '@linaria/react'\r\nimport { Input } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\nimport BaseView from 'tsx/view/BaseView'\r\nimport TextLabel from 'tsx/view/TextLabel';\r\n\r\nconst Input0 = styled(Input) <{ width: string, height: string, backgroundColor: string }>`\r\ndisplay: flex;\r\nflex-direction: row;\r\nposition: relative;\r\ntext-align: center;\r\nwidth: ${props => props.width};\r\nheight: 25px;\r\nborder-style: solid;\r\nborder-width: 1px;\r\nborder-color: rgba(0,255,255,1)\r\n`\r\n\r\nclass IntegerInput extends React.Component {\r\n\tonInput = (event) => {\r\n\t\tthis.setValue(event.detail.value)\r\n\t}\r\n\r\n\tonClickMinus = (event) => {\r\n\t\tthis.setValue(this.props.value, 'minus')\r\n\t}\r\n\r\n\tonClickAdd = (event) => {\r\n\t\tthis.setValue(this.props.value, 'add')\r\n\t}\r\n\r\n\tsetValue = (value, funcName) => {\r\n\t\tif (this.props.disabled) return\r\n\r\n\t\tif (!value) {\r\n\t\t\tthis.props.onChange(this.props.name, '')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tvalue = parseInt(value)\r\n\t\tif (value>0) {\r\n\t\t\tif ('add' == funcName) value += 1\r\n\t\t\telse if ('minus' == funcName) value -= 1\r\n\t\t} else if (value == 0) {\r\n\t\t\tif ('add' == funcName) value += 1\r\n\t\t} else {\r\n\t\t\tvalue = 0\r\n\t\t}\r\n\r\n\t\tthis.props.onChange(this.props.name, value)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst value = this.props.value + ''\r\n\t\tconst width = JsUtil.getCssWidthValue(this.props.width, 100);\r\n\t\tconst width1 = JsUtil.getCssWidthValue(this.props.width, 60);\r\n\t\tconst width2 = JsUtil.getCssWidthValue(this.props.width, 40);\r\n\t\tconst height = JsUtil.getCssHeightValue(this.props.height, 20);\r\n\t\tconst backgroundColor = JsUtil.getColorValue(this.props.backgroundColor, [0, 255, 255, 1]);\r\n\t\tconst backgroundColor2 = JsUtil.getColorValue(this.props.backgroundColor, [255, 0, 255, 0]);\r\n\r\n\t\treturn (<RowLayout justifyContent='center' alignItems='center' alignSelf='center' width={width} height={height} >\r\n\t\t\t<BaseView onClick={this.onClickMinus}  justifyContent='center' alignItems='center' alignSelf='center' width={width2} backgroundColor={backgroundColor}>\r\n\t\t\t\t<TextLabel backgroundColor={backgroundColor2}>-</TextLabel>\r\n\t\t\t</BaseView>\r\n\t\t\t<Input\r\n\t\t\t\ttype={'number'}\r\n\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonInput={this.onInput}\r\n\t\t\t\twidth={width1}\r\n\t\t\t\tstyle={{ width: width1, borderStyle: 'solid', borderWidth: 1, paddingLeft: 10, paddingRight: 10, borderColor: 'rgba(0,0,0,1)', fontSize: 14 }}\r\n\t\t\t/>\r\n\t\t\t<BaseView onClick={this.onClickAdd} justifyContent='center' alignItems='center' alignSelf='center' width={width2} backgroundColor={backgroundColor}>\r\n\t\t\t\t<TextLabel backgroundColor={backgroundColor2}>+</TextLabel>\r\n\t\t\t</BaseView>\r\n\t\t</RowLayout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default IntegerInput\r\n","import React from 'react'\r\nimport { styled } from '@linaria/react'\r\nimport { Picker } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\nimport BaseView from 'tsx/view/BaseView'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\n\r\nconst Picker0 = styled(Picker) <{ width: string, marginTop: string, marginBottom: string, backgroundColor: string }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: stretch;\r\n    margin-top: ${props => props.marginTop};\r\n    margin-bottom: ${props => props.marginBottom};\r\n`\r\n\r\nclass SelectInput extends React.Component {\r\n\tonChange = (event) => {\r\n\t\tconst idx = event.detail.value;\r\n\t\tconst selectedItem = this.props.options[idx];\r\n\t\tif (selectedItem)\r\n\t\t\tthis.props.onChange(selectedItem);\r\n\t}\r\n\r\n\tonCancel = (event) => {\r\n\r\n\t\tconsole.log(event)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst options = this.props.options;\r\n\t\tconst value = this.props.value;\r\n\t\tconst labelKey = this.props.labelKey;\r\n\t\tconst valueKey = this.props.valueKey;\r\n\t\tlet index = -1;\r\n\t\tlet optionLabel = '请选择';\r\n\t\tif (options.length > 0) {\r\n\t\t\tindex = options.findIndex(item => item[valueKey] == value);\r\n\t\t\tif (index >= 0) optionLabel = options[index][labelKey]\r\n\t\t}\r\n\r\n\t\tconst labelWidth = JsUtil.getCssWidthValue(this.props.labelWidth, cnst.NUM_WIDTH_LABEL);\r\n\t\tconst valueWidth = JsUtil.getCssWidthValue(this.props.valueWidth, cnst.NUM_WIDTH_VALUE);\r\n\r\n\t\tconst marginTop = JsUtil.getCssHeightValue(this.props.marginTop, 0);\r\n\t\tconst marginBottom = JsUtil.getCssHeightValue(this.props.marginBottom, 0);\r\n\r\n\t\treturn (\r\n\t\t\t<RowLayout justifyContent={'flex-start'} marginTop={marginTop} marginBottom={marginBottom}>\r\n\t\t\t\t<TextLabel width={labelWidth}>{this.props.label}</TextLabel>\r\n\t\t\t\t<Picker\r\n\t\t\t\t\trange={options}\r\n\t\t\t\t\trangeKey={labelKey}\r\n\t\t\t\t\tvalue={index}\r\n\t\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\tonCancel={this.onCancel}\r\n\t\t\t\t\tmarginTop={marginTop} marginBottom={marginBottom}\r\n\t\t\t\t\tstyle={{ width: valueWidth, borderStyle: 'solid', borderWidth: 1, borderColor: 'rgba(0,255,255,1)' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<TextLabel>{optionLabel} </TextLabel>\r\n\t\t\t\t</Picker>\r\n\t\t\t</RowLayout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default SelectInput\r\n","import React from 'react'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\nimport SimpleIcon from 'tsx/view/SimpleIcon'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\n\r\nclass CardLayout extends React.Component {\r\n      \r\n  render() {\r\n    const alignSelf =  JsUtil.getCssStrValue(this.props.alignSelf, 'center')\r\n      \r\n    return (\r\n      <ColumnLayout width={this.props.width} {...this.props}>\r\n      <RowLayout justifyContent='flex-start' width={this.props.width}>\r\n        <SimpleIcon value={this.props.thumb}></SimpleIcon>\r\n        <TextLabel>{this.props.title}</TextLabel>\r\n      </RowLayout>\r\n        {this.props.children}\r\n      </ColumnLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardLayout\r\n","import React from 'react'\r\nimport CharacteristicLayout from 'tsx/layout/CharacteristicLayout'\r\nimport Level2View from 'tsx/view/Level2View'\r\n\r\nclass CarouselLayout extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <CharacteristicLayout messages={this.props.messages}>\r\n          {this.props.children}\r\n      </CharacteristicLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CarouselLayout\r\n","import React from 'react'\r\nimport CarouselLayout from 'tsx/layout/CarouselLayout'\r\nimport Level2View from 'tsx/view/Level2View'\r\n\r\nclass CategoryLayout extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <CarouselLayout messages={this.props.messages}>\r\n          {this.props.children}\r\n      </CarouselLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CategoryLayout\r\n","import React from 'react'\r\nimport HeadLayout from 'tsx/layout/HeadLayout'\r\nimport Level2View from 'tsx/view/Level2View'\r\n\r\nclass CharacteristicLayout extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <HeadLayout messages={this.props.messages}>\r\n          {this.props.children}\r\n      </HeadLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CharacteristicLayout\r\n","import React from 'react'\r\nimport { styled } from '@linaria/react'\r\nimport { View } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\n\r\nconst View0 = styled(View)<{ justifyContent: string, alignItems: string, \r\n    alignSelf: string,  width: string,  height: string,  backgroundColor: string }>`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: ${props => props.justifyContent};\r\nalign-items: ${props => props.alignItems};\r\nwidth: ${props => props.width};\r\nheight: ${props => props.height};\r\nbackground-color: ${props => props.backgroundColor};\r\n`\r\n\r\nclass ColumnLayout extends React.Component {\r\n\r\n  render() {\r\n      const justifyContent =  JsUtil.getCssStrValue(this.props.justifyContent, 'flex-start')\r\n      const alignItems =  JsUtil.getCssStrValue(this.props.alignItems, 'stretch')\r\n      const width =  JsUtil.getCssStrValue(this.props.width, cnst.NUM_WIDTH_MAIN)\r\n      const height =  JsUtil.getCssStrValue(this.props.height, 'auto')\r\n      const backgroundColor = JsUtil.getColorValue(this.props.backgroundColor);\r\n  \r\n      return (\r\n              <View0  \r\n                justifyContent={justifyContent}\r\n                alignItems={alignItems}\r\n                width={width}\r\n                height={height}\r\n                backgroundColor={backgroundColor}\r\n              >\r\n                {this.props.children}\r\n              </View0 >\r\n            )\r\n   }\r\n}\r\n\r\nexport default ColumnLayout\r\n","import React from 'react'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\nimport DivView from 'tsx/view/DivView'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\nimport LegenImage from 'tsx/view/LegenImage'\r\n\r\nclass CommodityLayout extends React.Component {\r\n   onClick = (item) => (event) =>{\r\n       this.props.onClick(item, 0)\r\n   }\r\n   \r\n  render() {\r\n    const shownObj = this.props.shownObj\r\n    if(!shownObj) return null;\r\n    const imgPrefix = JsUtil.IMAGE_PREFIX;\r\n    const commodityId = shownObj.commodityId\r\n    const width = cnst.NUM_WIDTH_MAIN/2;\r\n    const height = cnst.NUM_HEIGHT_MAIN/2;\r\n\r\n    return (\r\n      <ColumnLayout width={width}>\r\n            <LegenImage src={imgPrefix + shownObj.commodityPicUri} onClick={this.onClick(shownObj)} width={width} height={height} />\r\n            <DivView width={width+2}><TextLabel width={width+2} flexWrap='wrap'>{shownObj.commodityName}</TextLabel></DivView>\r\n            <RowLayout width={cnst.NUM_WIDTH_MAIN/2}>\r\n            <TextLabel color='red'>{JsUtil.currFormat(shownObj.price)}&nbsp;</TextLabel>\r\n            <TextLabel>{shownObj.awardRate*100}&nbsp;</TextLabel>\r\n            <TextLabel color='red'>{shownObj.presentRate*100}&nbsp;</TextLabel>\r\n            <TextLabel>{shownObj.voucherRate*100}</TextLabel>\r\n            </RowLayout>\r\n      </ColumnLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CommodityLayout\r\n","import React from 'react'\r\nimport CategoryLayout from 'tsx/layout/CategoryLayout'\r\nimport Level2View from 'tsx/view/Level2View'\r\n\r\nclass FloorLayout extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <CategoryLayout messages={this.props.messages} >\r\n          {this.props.children}\r\n      </CategoryLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FloorLayout\r\n","import React from 'react'\r\nimport Taro from '@tarojs/taro'\r\nimport { styled } from '@linaria/react'\r\nimport { View } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\nimport TopNavBar from 'tsx/component/TopNavBar'\r\nimport TaroModal from 'tsx/component/TaroModal'\r\n\r\nconst View0 = styled(View)`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\n`\r\n\r\nclass FootLayout extends React.Component {\r\n\tstate = {\r\n\t\tmarginTop: 46\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tTaro.getSystemInfo({})\r\n\t\t\t.then(res => {\r\n\t\t\t\tconst statusBarHeight = res.statusBarHeight || 20\r\n\t\t\t\tlet topBarHeight = 36;\r\n\t\t\t\tlet marginTop = 30;\r\n\t\t\t\tif (process.env.TARO_ENV === 'rn') {\r\n\t\t\t\t\tmarginTop = 1\r\n\t\t\t\t} else if (process.env.TARO_ENV === cnst.TARO_ENV_WEAPP) {\r\n\t\t\t\t\ttopBarHeight += statusBarHeight\r\n\t\t\t\t\tmarginTop = topBarHeight + 1\r\n\t\t\t\t} else if (process.env.TARO_ENV === 'h5') {\r\n\t\t\t\t\ttopBarHeight -= 6\r\n\t\t\t\t\tmarginTop = topBarHeight + 1\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setState({ topBarHeight: topBarHeight, marginTop: marginTop })\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst topBarHeight = this.state.topBarHeight;\r\n\t\tconst marginTop = this.state.marginTop;\r\n\t\tconst backgroundColor = JsUtil.getColorValue(cnst.COLOR_BACKGROUND_NEAR_WHITE);\r\n\r\n\t\treturn (\r\n\t\t\t<View style={{ flex: 1, marginTop: marginTop, backgroundColor: backgroundColor }}>\r\n\t\t\t\t<TopNavBar height={topBarHeight} topNavBarTitle={this.props.topNavBarTitle} />\r\n\t\t\t\t<TaroModal that={this.props.that} zIndex={8888}></TaroModal>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</View>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default FootLayout\r\n","import React from 'react'\r\nimport cnst from 'tsx/common/Constant'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\n\r\nclass GridLayout extends React.Component {\r\n    columnSize = this.props.columnSize\r\n    \r\n    getChildren = (childrenWithPropsArray) =>{\r\n      const totalSize = childrenWithPropsArray.length\r\n      const rowArr = []\r\n      let itemArr = []\r\n      \r\n      childrenWithPropsArray.map((item, idx)=>{\r\n            itemArr.push( item)\r\n          if(idx%this.columnSize==1||idx==totalSize-1){\r\n             rowArr.push(<RowLayout key={idx} width={cnst.NUM_WIDTH_MAIN/this.columnSize} >{itemArr}</RowLayout>)\r\n             itemArr = []\r\n          }\r\n      })\r\n      \r\n      return rowArr;\r\n    }\r\n    \r\n  render() {\r\n    const data = this.props.data\r\n    if(!data) return null;\r\n    const childrenWithPropsArray = []\r\n    \r\n    data.map((item, idx)=>{\r\n    const childrenWithProps = React.Children.map( this.props.children, (child, idx) => {\r\n      // Checking isValidElement is the safe way and avoids a TS error too.\r\n      if (React.isValidElement(child)) {\r\n        return React.cloneElement(child, { shownObj:  item})\r\n      }\r\n\r\n      return child;\r\n    });\r\n    \r\n    childrenWithPropsArray.push(childrenWithProps)\r\n    })\r\n    \r\n    const showElements = this.getChildren(childrenWithPropsArray);\r\n    \r\n    return (\r\n      <ColumnLayout width={cnst.NUM_WIDTH_MAIN/2}>\r\n            {showElements}\r\n      </ColumnLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridLayout\r\n","import React from 'react'\r\nimport cnst from 'tsx/common/Constant'\r\nimport FootLayout from 'tsx/layout/FootLayout'\r\nimport BrView from 'tsx/view/BrView'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\nimport ScrollableView from 'tsx/view/ScrollableView'\r\nimport Level1View from 'tsx/view/Level1View'\r\nimport BottomOpBar from 'tsx/component/BottomOpBar'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\n\r\nclass HeadLayout extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<FootLayout that={this.props.that} topNavBarTitle={this.props.topNavBarTitle} >\r\n\t\t\t\t<ScrollableView>\r\n\t\t\t\t\t<ColumnLayout width={cnst.NUM_WIDTH_MAIN} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} >\r\n\t\t\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t\t\t{this.props.children}\r\n\r\n\t\t\t\t\t\t<BrView height={36} backgroundColor={cnst.COLOR_BACKGROUND_NEAR_WHITE} />\r\n\t\t\t\t\t\t<Level1View alignItems='center'>\r\n\t\t\t\t\t\t\t<TextLabel justifyContent='center'>Copyright © 2012-2024 版权所有</TextLabel>\r\n\t\t\t\t\t\t\t<TextLabel justifyContent='center'>柏君商城 www.pc8g.com</TextLabel>\r\n\t\t\t\t\t\t\t<TextLabel justifyContent='center'>深圳市柏君科技有限公司</TextLabel>\r\n\t\t\t\t\t\t\t<TextLabel justifyContent='center'>粤ICP备18056790号</TextLabel>\r\n\t\t\t\t\t\t\t<TextLabel justifyContent='center'>粤公网安备 44030502002068号</TextLabel>\r\n\t\t\t\t\t\t</Level1View>\r\n\t\t\t\t\t\t<BrView height={66} backgroundColor={cnst.COLOR_BACKGROUND_NEAR_WHITE} />\r\n\t\t\t\t\t</ColumnLayout>\r\n\t\t\t\t</ScrollableView>\r\n\r\n\t\t\t\t{(this.props.bottomLabel0 || this.props.bottomLabel1 || this.props.bottomLabel2 || this.props.bottomLabel3 || this.props.bottomLabel4 || this.props.bottomLabel6 || this.props.bottomLabel8) &&\r\n\t\t\t\t\t<BottomOpBar bottomLabel0={this.props.bottomLabel0} bottomLabel1={this.props.bottomLabel1} bottomLabel2={this.props.bottomLabel2} bottomLabel3={this.props.bottomLabel3} bottomLabel4={this.props.bottomLabel4}\r\n\t\t\t\t\t\tbottomLabel5={this.props.bottomLabel5} bottomLabel6={this.props.bottomLabel6} bottomLabel7={this.props.bottomLabel7} bottomLabel8={this.props.bottomLabel8}\r\n\t\t\t\t\t\tbottomLabel9={this.props.bottomLabel9} bottomLabel10={this.props.bottomLabel10} shareLabel={this.props.shareLabel} that={this.props.that} imageUri={this.props.imageUri} postFunc={this.props.postFunc}\r\n\t\t\t\t\t\tbottomFunc0={this.props.bottomFunc0} bottomFunc1={this.props.bottomFunc1} bottomFunc2={this.props.bottomFunc2} bottomFunc3={this.props.bottomFunc3} bottomFunc4={this.props.bottomFunc4}\r\n\t\t\t\t\t\tbottomFunc5={this.props.bottomFunc5} bottomFunc6={this.props.bottomFunc6} bottomFunc7={this.props.bottomFunc7}\r\n\t\t\t\t\t\tbottomFunc8={this.props.bottomFunc8} bottomFunc9={this.props.bottomFunc9} bottomFunc10={this.props.bottomFunc10}\r\n\t\t\t\t\t\tshareFunc={this.props.shareFunc} bottom={this.props.bottom} />\r\n\t\t\t\t}\r\n\t\t\t</FootLayout >\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default HeadLayout\r\n","import React from 'react'\r\nimport { styled } from '@linaria/react'\r\nimport { View } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\n\r\nconst View0 = styled(View)<{ justifyContent: string, alignItems: string, \r\n    alignSelf: string,  width: string,  height: string,  backgroundColor: string }>`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: ${props => props.justifyContent};\r\nalign-items: ${props => props.alignItems};\r\nwidth: ${props => props.width};\r\nheight: ${props => props.height};\r\nbackground-color: ${props => props.backgroundColor};\r\n`\r\n\r\nclass RowLayout extends React.Component {\r\n\r\n  render() {\r\n      const justifyContent =  JsUtil.getCssStrValue(this.props.justifyContent, 'flex-start')\r\n      const alignItems =  JsUtil.getCssStrValue(this.props.alignItems, 'stretch')\r\n      const width =  JsUtil.getCssWidthValue(this.props.width, cnst.NUM_WIDTH_MAIN)\r\n      const height =  JsUtil.getCssHeightValue(this.props.height, 'auto')\r\n      const backgroundColor = JsUtil.getColorValue(this.props.backgroundColor);\r\n  \r\n      return (\r\n              <View0  \r\n                justifyContent={justifyContent}\r\n                alignItems={alignItems}\r\n                width={width}\r\n                height={height}\r\n                backgroundColor={backgroundColor}\r\n              >\r\n                {this.props.children}\r\n              </View0 >\r\n            )\r\n   }\r\n}\r\n\r\nexport default RowLayout\r\n","import React from 'react'\r\nimport { styled } from '@linaria/react'\r\nimport { View } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\n\r\nconst View0 = styled(View) <{\n\tdisplay: string, visibility: string, position: string, zIndex: string, flexDirection: string, justifyContent: string, alignItems: string,\r\n\talignSelf: string, flexGrow: string, flexWrap: string, width: string, height: string, left: string, top: string, bottom: string,\r\n\tmarginLeft: string, marginRight: string, marginTop: string, marginBottom: string, borderStyle: string, backgroundColor: string\n}>`\r\ndisplay: ${props => props.display};\r\nflex-direction: ${props => props.flexDirection};\r\nvisibility: ${props => props.visibility};\r\nposition: ${props => props.position};\r\nz-index: ${props => props.zIndex};\r\nflex-wrap: ${props => props.flexWrap};\r\njustify-content: ${props => props.justifyContent};\r\nalign-items: ${props => props.alignItems};\r\nalign-self: ${props => props.alignSelf};\r\nwidth: ${props => props.width};\r\nheight: ${props => props.height};\r\nmargin-left: ${props => props.marginLeft};\r\nmargin-right: ${props => props.marginRight};\r\nmargin-top: ${props => props.marginTop};\r\nmargin-bottom: ${props => props.marginBottom};\r\nborder-style:  ${props => props.borderStyle};\r\nborder-width: 1px;\r\nborder-color: rgba(0,255,255,1);\r\nbackground-color: ${props => props.backgroundColor};\r\n`\r\n\r\nclass BaseView extends React.Component {\r\n\trender() {\r\n\t\tconst display = JsUtil.getCssStrValue(this.props.display, 'flex');\r\n\t\tconst visibility = JsUtil.getCssStrValue(this.props.visibility, 'visible');\r\n\t\tconst position = JsUtil.getCssStrValue(this.props.position, 'relative');\r\n\t\tconst zIndex = JsUtil.getCssNumValue(this.props.zIndex, 0);\r\n\r\n\t\tconst flexDirection = JsUtil.getCssStrValue(this.props.flexDirection, 'column')\r\n\t\tconst justifyContent = JsUtil.getCssStrValue(this.props.justifyContent, 'flex-start')\r\n\t\tconst alignItems = JsUtil.getCssStrValue(this.props.alignItems, 'stretch')\r\n\t\tconst alignSelf = JsUtil.getCssStrValue(this.props.alignSelf, 'auto')\r\n\r\n\t\tconst flexWrap = JsUtil.getCssStrValue(this.props.flexWrap, 'nowrap')\r\n\t\tconst width = JsUtil.getCssWidthValue(this.props.width, 'auto');\r\n\t\tconst height = JsUtil.getCssHeightValue(this.props.height, 'auto');\r\n\r\n\t\tconst marginLeft = JsUtil.getCssWidthValue(this.props.marginLeft, 0);\r\n\t\tconst marginRight = JsUtil.getCssWidthValue(this.props.marginRight, 0);\r\n\t\tconst marginTop = JsUtil.getCssHeightValue(this.props.marginTop, 0);\r\n\t\tconst marginBottom = JsUtil.getCssHeightValue(this.props.marginBottom, 0);\r\n\r\n\t\tconst borderStyle = JsUtil.getCssStrValue(this.props.borderStyle, 'none');\r\n\r\n\t\tconst backgroundColor = JsUtil.getColorValue(this.props.backgroundColor);\r\n\r\n\t\treturn (\r\n\t\t\t<View0 onClick={this.props.onClick} display={display} visibility={visibility} position={position} zIndex={zIndex} flexDirection={flexDirection}\r\n\t\t\t\tjustifyContent={justifyContent} alignItems={alignItems} alignSelf={alignSelf} flexWrap={flexWrap} width={width} height={height}\r\n\t\t\t\tmarginLeft={marginLeft} marginRight={marginRight} marginTop={marginTop} marginBottom={marginBottom}\r\n\t\t\t\tborderStyle={borderStyle} backgroundColor={backgroundColor} \r\n\t\t\t>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</View0>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default BaseView\r\n","import React from 'react'\r\nimport BaseView from 'tsx/view/BaseView';\r\n\r\nclass BrView extends React.Component {\r\n  render() {\r\n    return (\r\n      <BaseView \r\n         backgroundColor={this.props.backgroundColor}\r\n         {...this.props}\r\n      >\r\n        {this.props.children}\r\n      </BaseView>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BrView\r\n","import React from 'react';  \r\nimport BaseView from 'tsx/view/BaseView';\r\n\r\nclass CellView extends React.Component {\r\n  render() {\r\n      return (\r\n              <BaseView {...this.props}>\r\n                {this.props.children}\r\n              </BaseView >\r\n            )\r\n          }\r\n}\r\n\r\nexport default CellView\r\n","import React from 'react';  \r\nimport { styled } from '@linaria/react'\r\nimport { View } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\n\r\nconst DivView0 = styled(View)<{ width: string, height: string, backgroundColor: string }>`\r\nwidth: ${props => props.width};\r\nheight: ${props => props.height};\r\nbackground-color: ${props => props.backgroundColor};\r\n`\r\n\r\nclass DivView extends React.Component {\r\n      \r\n  render() {\r\n      const width = JsUtil.getCssWidthValue(this.props.width, 'auto');\r\n      const height = JsUtil.getCssHeightValue(this.props.height, 'auto');\r\n      \r\n      const backgroundColor = JsUtil.getColorValue(this.props.backgroundColor, cnst.COLOR_BACKGROUND_TRANS_WHITE);\r\n\r\n      return (\r\n              <DivView0 \r\n                onClick={this.props.onClick}\r\n                width={width} \r\n                height={height}\r\n                backgroundColor={backgroundColor}\r\n              >\r\n                {this.props.children}\r\n              </DivView0 >\r\n            )\r\n      }\r\n}\r\n\r\nexport default DivView\r\n","import React from 'react'\r\nimport { Image } from '@tarojs/components'\r\nimport { styled } from '@linaria/react'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport DivView from 'tsx/view/DivView'\r\n\r\nconst Image0 = styled(Image) <{ width: string, height: string }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: ${props => props.width};\r\n  height: ${props => props.height};\r\n`\r\n\r\nclass LegenImage extends React.Component {\r\n  render() {\r\n    const width = JsUtil.getCssWidthValue(this.props.width, -50);\r\n    const height = JsUtil.getCssHeightValue(this.props.height, -20);\r\n\r\n    return (\r\n          <DivView  width={width} height={height} >\r\n          <Image0 src={this.props.src} onClick={this.props.onClick}  width={width} height={height} style={{width: width, height: height}} />\r\n          </DivView>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LegenImage\r\n","import React from 'react';  \r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\n\r\nclass Level1View extends React.Component {\r\n  render() {\r\n      return (\r\n              <ColumnLayout\r\n                {...this.props}\r\n              >\r\n                {this.props.children}\r\n              </ColumnLayout >\r\n            )\r\n          }\r\n}\r\n\r\nexport default Level1View\r\n","import React from 'react'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\n\r\nclass Level2View extends React.Component {\r\n  render() {\r\n      const justifyContent =  JsUtil.getCssStrValue(this.props.justifyContent, 'flex-start')\r\n      const alignItems =  JsUtil.getCssStrValue(this.props.alignItems, 'stretch')\r\n      const alignSelf =  JsUtil.getCssStrValue(this.props.alignSelf, 'auto')\r\n      \r\n      return (\r\n              <ColumnLayout \r\n              justifyContent={justifyContent}\r\n              alignItems={alignItems}\r\n              alignSelf={alignSelf}\r\n              {...this.props}\r\n              >\r\n              {this.props.children}\r\n              </ColumnLayout >\r\n          )\r\n  }\r\n}\r\n\r\nexport default Level2View\r\n","import React from 'react'\r\nimport BaseView from 'tsx/view/BaseView'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\n\r\nclass LinkTag extends React.Component {\r\n  render() {\r\n    return (\r\n      <BaseView\r\n            flexDirection={'row'}\r\n            {...this.props}\r\n      >\r\n        <TextLabel \r\n            color={this.props.color} \r\n            onClick={this.props.onClick}>{this.props.children}\r\n        </TextLabel>\r\n      </BaseView>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LinkTag\r\n","import React from 'react'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\nimport BrView from 'tsx/view/BrView'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\nimport LinkTag from 'tsx/view/LinkTag'\r\n\r\nclass ListItem extends React.Component {\r\n  render() {\r\n      const justifyContent =  JsUtil.getCssStrValue(this.props.justifyContent, 'flex-start')\r\n      const alignItems =  JsUtil.getCssStrValue(this.props.alignItems, 'stretch')\r\n      const alignSelf =  JsUtil.getCssStrValue(this.props.alignSelf, 'auto')\r\n  \r\n    return (<ColumnLayout>\r\n      <RowLayout  \r\n        arrow={this.props.arrow} \r\n        hasBorder={this.props.hasBorder}\r\n        disabled={false}\r\n              justifyContent={justifyContent}\r\n              alignItems={alignItems}\r\n              alignSelf={alignSelf}\r\n        {...this.props}\r\n       >\r\n            <LinkTag  onClick={this.props.onClick}>{this.props.title} </LinkTag>\r\n            <TextLabel>{this.props.extraText} </TextLabel>\r\n      </RowLayout>\r\n      <BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_TRANS_WHITE} />\r\n      </ColumnLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\n\r\nclass ListView extends React.Component {\r\n  render() {\r\n      const justifyContent =  JsUtil.getCssStrValue(this.props.justifyContent, 'flex-start')\r\n      const alignItems =  JsUtil.getCssStrValue(this.props.alignItems, 'stretch')\r\n      const alignSelf =  JsUtil.getCssStrValue(this.props.alignSelf, 'auto')\r\n      \r\n    return (\r\n      <ColumnLayout \r\n         hasBorder={this.props.hasBorder}\r\n              justifyContent={justifyContent}\r\n              alignItems={alignItems}\r\n              alignSelf={alignSelf}\r\n         {...this.props}\r\n      >\r\n        {this.props.children}\r\n      </ColumnLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListView\r\n","import React from 'react'\r\nimport { styled } from '@linaria/react'\r\nimport { ScrollView } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\n\r\nconst ScrollView0 = styled(ScrollView) <{ marginTop: string, justifyContent: string, height: string }>`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: ${props => props.justifyContent};\r\nalign-items: center;\r\nmargin-top: ${props => props.marginTop};\r\nheight: ${props => props.height};\r\n`\r\n\r\nclass ScrollableView extends React.Component {\r\n  scrollToEnd2 = () => {\r\n    this.scrollToEnd({animated:false})\r\n  }\r\n  \r\n  render() {\r\n    const marginTop = JsUtil.getCssWidthValue(this.props.marginTop, 0);\r\n    const justifyContent = JsUtil.getCssStrValue(this.props.justifyContent, 'center');\r\n    const height = JsUtil.getCssHeightValue(this.props.height, 'auto');\r\n      \r\n    return (\r\n      <ScrollView0 enable-flex={true} scrollY={true} marginTop={marginTop}  justifyContent={justifyContent} height={height}\r\n            onContentSizeChange={this.scrollToEnd2}\r\n      > \r\n        {this.props.children}\r\n      </ScrollView0>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ScrollableView\r\n","import React from 'react'\r\nimport { styled } from '@linaria/react'\r\nimport { Image } from '@tarojs/components'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\n\r\nconst SimpleIcon0 = styled(Image) <{ justifyContent: string, alignItems: string, \r\n    alignSelf: string, width: string, height: string }>`\r\n  display: flex;\r\n  flex-direction: row;\r\njustify-content: ${props => props.justifyContent};\r\nalign-items: ${props => props.alignItems};\r\nalign-self: ${props => props.alignSelf};\r\n  width: ${props => props.width};\r\n  height: ${props => props.height};\r\n`\r\n\r\nclass SimpleIcon extends React.Component {\r\n  render() {\r\n      const justifyContent = JsUtil.getCssStrValue(this.props.justifyContent, 'flex-start')\r\n      const alignItems =  JsUtil.getCssStrValue(this.props.alignItems, 'stretch')\r\n      const alignSelf =  JsUtil.getCssStrValue(this.props.alignSelf, 'auto')\r\n      \r\n      const width = JsUtil.getCssWidthValue(this.props.width, 20);\r\n      const height = JsUtil.getCssHeightValue(this.props.height, 20);\r\n\r\n    return (\r\n      <SimpleIcon0 src={this.props.value} onClick={this.props.onClick} justifyContent={justifyContent} alignItems={alignItems} alignSelf={alignSelf} \r\n       width={width} height={height}  >\r\n      </SimpleIcon0>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SimpleIcon\r\n","import React from 'react'\r\nimport cnst from 'tsx/common/Constant'\r\nimport BaseView from 'tsx/view/BaseView'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\n\r\nclass TabPane extends React.Component {\r\n  onClick = (idx) => (event) =>{\r\n      \r\n      this.props.onClick(idx);\r\n  }\r\n  \r\n  render() {\r\n    const tabOptions = this.props.tabOptions;  \r\n    const currTabIdx = this.props.currTabIdx;\r\n    return (\r\n      <BaseView width={cnst.NUM_WIDTH_MAIN} height={'auto'} >\r\n            <RowLayout justifyContent='space-between'>\r\n            {tabOptions.map((item, idx)=>{\r\n                return (<TextLabel key={idx} onClick={this.onClick(idx)} color={currTabIdx==idx? 'red': 'black'}>{item.title}&nbsp;&nbsp;</TextLabel>)\r\n            })\r\n            }\r\n            </RowLayout>\r\n            {this.props.children}\r\n      </BaseView>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TabPane\r\n","import React from 'react'\r\nimport { Text } from '@tarojs/components'\r\nimport { styled } from '@linaria/react'\r\nimport JsUtil from 'tsx/common/JsUtil'\r\n\r\nconst TextLabel0 = styled(Text)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: ${props => props.justifyContent};\r\n  align-items: ${props => props.alignItems};\r\n  flex-wrap: ${props => props.flexWrap};\r\n  width: ${props => props.width};\r\n  height: ${props => props.height};\r\n`\r\n\r\nclass TextLabel extends React.Component {\r\n\r\n\trender() {\r\n\t\tconst justifyContent = JsUtil.getCssStrValue(this.props.justifyContent, 'flex-start')\r\n\t\tconst alignItems = JsUtil.getCssStrValue(this.props.alignItems, 'flex-start')\r\n\t\tconst flexWrap = JsUtil.getCssStrValue(this.props.flexWrap, 'nowrap')\r\n\r\n\t\tconst width = JsUtil.getCssWidthValue(this.props.width, 'auto');\r\n\t\tconst height = JsUtil.getCssHeightValue(this.props.height, 'auto');\r\n\r\n\t\tconst color = JsUtil.getColorValue(this.props.color, 'black');\r\n\t\tconst fontSize = JsUtil.getCssNumValue(this.props.fontSize, 14);\r\n\r\n\t\tconst backgroundColor = JsUtil.getColorValue(this.props.backgroundColor, [255, 0, 255, 0]);\r\n\r\n\t\treturn (\r\n\t\t\t<TextLabel0 justifyContent={justifyContent} alignItems={alignItems}\r\n\t\t\t\tflexWrap={flexWrap} width={width} height={height}\r\n\t\t\t\tonClick={this.props.onClick}\r\n\t\t\t\tstyle={{ color: color, fontSize: fontSize }}\r\n\t\t\t>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</TextLabel0>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default TextLabel\r\n"],"names":[],"sourceRoot":""}