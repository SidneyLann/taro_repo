{"version":3,"file":"pkgcommodity/page/commodity/CommodityPublish.js","mappingsuCA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAGA;AAEA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAhLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAgJA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AArNA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAmNA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAUA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAoDA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAoBA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAlCA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAqBA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAYA;AAAA;AAAA;AACA;AAAA;AA2CA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AA5GA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAuEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AArIA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAmIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrJA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAYA;AAAA;AAAA;AACA;AAAA;AA8FA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAGA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AAAA;AAGA;AACA;AAxwBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAqCA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAoor3BA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAm3BA;;;;;;;;;;AC14BA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AAKA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA5CA;AAAA;AAAA;AA8CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA","sources":["webpack://i_bizz_client/./src/pkgcommodity/page/commodity/CommodityPublish.tsx?0a2f","webpack://i_bizz_client/._src_component_CategoryField3.tsx","webpack://i_bizz_client/._src_form_RichTextInput.tsx","webpack://i_bizz_client/._src_pkgcommodity_page_commodity_CommodityFirst.tsx","webpack://i_bizz_client/._src_pkgcommodity_page_commodity_CommodityPublish.tsx","webpack://i_bizz_client/._src_pkgcommodity_page_commodity_CommoditySecond.tsx","webpack://i_bizz_client/._src_pkgcommodity_page_commodity_CommodityThird.tsx","webpack://i_bizz_client/._src_pkgcommodity_page_commodity_CommodityUtil.ts"],"sourcesContent":["import _toConsumableArray from \"c:/taro/i_bizz_client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"c:/taro/i_bizz_client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"c:/taro/i_bizz_client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"c:/taro/i_bizz_client/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"c:/taro/i_bizz_client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _defineProperty from \"c:/taro/i_bizz_client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport React from 'react';\nimport JsUtil from 'tsx/common/JsUtil';\nimport cnst from 'tsx/common/Constant';\nimport HeadLayout from \"tsx/layout/HeadLayout\";\nimport CommodityFirst from './CommodityFirst';\nimport CommoditySecond from './CommoditySecond';\nimport CommodityThird from './CommodityThird';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CommodityPublish = /*#__PURE__*/function (_React$Component) {\n  function CommodityPublish(props) {\n    var _this;\n    _classCallCheck(this, CommodityPublish);\n    _this = _callSuper(this, CommodityPublish, [props]);\n    _defineProperty(_this, \"thirdRef\", /*#__PURE__*/React.createRef());\n    _defineProperty(_this, \"menuParam\", void 0);\n    _defineProperty(_this, \"next\", function () {\n      var deliveryArr = _this.state.deliveryArr;\n      var totalRealSteps = deliveryArr.length + 1;\n      var activeStep = _this.state.activeStep;\n      if (activeStep == 0) {\n        if (!_this.state.operatorId) {\n          JsUtil.showMsgBox(_this, \"\\u8BF7\\u9009\\u62E9\\u8FD0\\u8425\\u4E2D\\u5FC3\");\n          return;\n        }\n        if (deliveryArr.length == 0) {\n          JsUtil.showMsgBox(_this, \"\\u8BF7\\u9009\\u62E9\\u914D\\u9001\\u7C7B\\u578B\");\n          return;\n        }\n        for (var i = 0; i < deliveryArr.length; i++) {\n          if (deliveryArr[i] == cnst.DELIVERY_TYPE_ONLINE && deliveryArr.length > 1) {\n            JsUtil.showMsgBox(_this, '在线运输不能和其它配送类型一起使用');\n            return;\n          }\n        }\n        if (!_this.state.categories[2]) {\n          JsUtil.showMsgBox(_this, \"\\u8BF7\\u9009\\u62E9\\u5546\\u54C1\\u5206\\u7C7B\");\n          return;\n        }\n      } else if (activeStep > 0 && activeStep < totalRealSteps) {\n        var deliveryType = _this.state.deliveryArr[activeStep - 1];\n        var fromAddrIdsKey = 'fromAddrIds' + deliveryType;\n        var fromIdArr4CurrDeliType = _this.state[fromAddrIdsKey];\n        if (fromIdArr4CurrDeliType.length == 0) {\n          JsUtil.showMsgBox(_this, \"\\u8BF7\\u9009\\u62E9\\u53D1\\u8D27\\u5730\\u5740\");\n          return;\n        }\n      }\n      if (activeStep < totalRealSteps) {\n        activeStep = activeStep + 1;\n        _this.setState({\n          activeStep: activeStep\n        });\n      }\n    });\n    _defineProperty(_this, \"previous\", function () {\n      var totalSteps = _this.state.deliveryArr.length + 1;\n      var activeStep = _this.state.activeStep;\n      if (activeStep > totalSteps) {\n        activeStep = totalSteps;\n      }\n      if (activeStep > 0) {\n        activeStep = activeStep - 1;\n      }\n      _this.setState({\n        activeStep: activeStep\n      });\n    });\n    _defineProperty(_this, \"save\", function () {\n      _this.thirdRef.current.submit(_this.state.deliveryArr);\n    });\n    _defineProperty(_this, \"setCommodityThird\", function (commodityThird) {\n      _this.setState({\n        commodityThird: commodityThird\n      });\n    });\n    _defineProperty(_this, \"setOperatorId\", function (operatorId) {\n      _this.setState({\n        operatorId: operatorId\n      });\n    });\n    _defineProperty(_this, \"setCategories\", function (categories) {\n      _this.setState({\n        categories: categories\n      });\n    });\n    _defineProperty(_this, \"setDeliveryType\", function (deliveryType) {\n      _this.setState({\n        deliveryType: deliveryType\n      });\n    });\n    _defineProperty(_this, \"setDeliveryArr\", function (deliveryArr) {\n      _this.setState({\n        deliveryArr: deliveryArr\n      });\n    });\n    _defineProperty(_this, \"setFromAddrIds\", function (deliveryArr, getFromAddrIds0) {\n      if (!deliveryArr) return;\n      deliveryArr.map(function (deliveryType) {\n        _this.setState(_defineProperty({}, 'fromAddrIds' + deliveryType, JsUtil.getFromAddrIds(deliveryType, getFromAddrIds0)));\n      });\n    });\n    _defineProperty(_this, \"setFromIdArr4CurrDeliType\", function (fromIdArr4CurrDeliType) {\n      var deliveryType = _this.state.deliveryArr[_this.state.activeStep - 1];\n      var fromAddrIdsKey = 'fromAddrIds' + deliveryType;\n      _this.setState(_defineProperty({}, fromAddrIdsKey, fromIdArr4CurrDeliType));\n    });\n    _this.params = JsUtil.getUrlParams(_this);\n    _this.state = {\n      mode: _this.params.mode || cnst.SHOW_MODE_NEW,\n      commodityThird: null,\n      activeStep: _this.params.activeStep || 0,\n      operatorId: cnst.ID_HQ,\n      deliveryArr: [],\n      deliveryType: '',\n      categories: [],\n      fromAddrIds1: [],\n      fromAddrIds3: [],\n      fromAddrIds5: [],\n      fromAddrIds7: [],\n      fromAddrIds9: []\n    };\n    return _this;\n  }\n  _inherits(CommodityPublish, _React$Component);\n  return _createClass(CommodityPublish, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"getStepsTitles\",\n    value: function getStepsTitles() {\n      var titles = ['配送类型商品分类'];\n      var deliveryArr = this.state.deliveryArr;\n      deliveryArr.map(function (item) {\n        return titles.push(cnst.getDeliveryName(parseInt(item)) + '发货地址');\n      });\n      titles.push('商品详细信息');\n      return titles;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n        activeStep = _this$state.activeStep,\n        deliveryArr = _this$state.deliveryArr;\n      var totalSteps = deliveryArr.length + 1;\n      var deliveryType = deliveryArr[activeStep - 1];\n      var fromAddrIdsKey = 'fromAddrIds' + deliveryType;\n      var fromIdArr4CurrDeliType = this.state[fromAddrIdsKey];\n      var stepTitles = this.getStepsTitles();\n      var fromAddrIds = [1].concat(_toConsumableArray(this.state.fromAddrIds1), [3], _toConsumableArray(this.state.fromAddrIds3), [5], _toConsumableArray(this.state.fromAddrIds5), [7], _toConsumableArray(this.state.fromAddrIds7), [9], _toConsumableArray(this.state.fromAddrIds9));\n      var previousLabel = activeStep > 0 ? '上步' : '';\n      var nextLabel = activeStep < totalSteps ? '下步' : '';\n      var saveLabel = activeStep >= totalSteps ? '保存' : '';\n      return /*#__PURE__*/_jsxs(HeadLayout, {\n        that: this,\n        topNavBarTitle: stepTitles[activeStep],\n        bottomLabel3: previousLabel,\n        bottomFunc3: this.previous,\n        bottomLabel6: nextLabel,\n        bottomFunc6: this.next,\n        bottomLabel8: saveLabel,\n        bottomFunc8: this.save,\n        children: [activeStep == 0 && /*#__PURE__*/_jsx(CommodityFirst, {\n          that: this,\n          mode: this.state.mode,\n          deliveryArr: deliveryArr,\n          setDeliveryArr: this.setDeliveryArr,\n          categories: this.state.categories,\n          setCategories: this.setCategories,\n          children: \"\\u9009\\u62E9\\u5546\\u54C1\\u5206\\u7C7B\"\n        }), activeStep > 0 && activeStep < totalSteps && /*#__PURE__*/_jsx(CommoditySecond, {\n          that: this,\n          mode: this.state.mode,\n          operatorId: this.state.operatorId,\n          deliveryType: deliveryType,\n          fromIdArr4CurrDeliType: fromIdArr4CurrDeliType,\n          setFromIdArr4CurrDeliType: this.setFromIdArr4CurrDeliType,\n          children: \"\\u9009\\u62E9\\u53D1\\u8D27\\u5730\\u5740\"\n        }), activeStep >= totalSteps && /*#__PURE__*/_jsx(CommodityThird, {\n          that: this,\n          mode: this.state.mode,\n          operatorId: this.state.operatorId,\n          setOperatorId: this.setOperatorId,\n          deliveryArr: deliveryArr,\n          setDeliveryArr: this.setDeliveryArr,\n          setDeliveryType: this.setDeliveryType,\n          fromAddrIds: fromAddrIds,\n          setFromAddrIds: this.setFromAddrIds,\n          categories: this.state.categories,\n          setCategories: this.setCategories,\n          ref: this.thirdRef,\n          children: \"\\u586B\\u5199\\u5546\\u54C1\\u8BE6\\u7EC6\\u4FE1\\u606F\"\n        })]\n      });\n    }\n  }]);\n}(React.Component);\nexport default CommodityPublish;","import React from 'react';\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\nimport BaseView from 'tsx/view/BaseView'\r\nimport BrView from 'tsx/view/BrView'\r\nimport SelectInput from 'tsx/form/SelectInput'\r\n\r\nclass CategoryField3 extends React.Component {\r\n\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\tconsole.log('category 3 lifecycle method getDerivedStateFromError');\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n\t\tconsole.log('category 3 lifecycle method getDerivedStateFromProps');\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tconsole.log('category 3 lifecycle method constructor');\r\n\t\tthis.state = {\r\n\t\t\tcategory1Id: null,\r\n\t\t\tcategory2Id: null,\r\n\t\t\tcategory3Id: null,\r\n\t\t\tcategory1Options: [],\r\n\t\t\tcategory2Options: [],\r\n\t\t\tcategory3Options: [],\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('category 3 lifecycle method componentDidMount');\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tshouldComponentUpdate() {\r\n\t\tconsole.log('category 3 lifecycle method shouldComponentUpdate');\r\n\t\treturn true;\r\n\t}\r\n\r\n\tgetSnapshotBeforeUpdate() {\r\n\t\tconsole.log('category 3 lifecycle method getSnapshotBeforeUpdate');\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tconsole.log('category 3 lifecycle method componentDidUpdate');\r\n\t}\r\n\r\n\tcomponentDidCatch() {\r\n\t\tconsole.log('category 3 lifecycle method componentDidCatch');\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log('category 3 lifecycle method componentWillUnmount');\r\n\t}\r\n\r\n\tinit = () => {\r\n\t\tconst categoryArr = this.props.value;\r\n\r\n\t\tif (categoryArr&&categoryArr[2]) {\r\n\t\t\tthis.loadCategoryTreeInfoByBottomId(categoryArr[2]);\r\n\t\t\treturn;\n\t\t}\r\n\r\n\t\tconst param = {\r\n\t\t\tparentId: cnst.ID_TOP_CATEGORY\r\n\t\t}\r\n\r\n\t\tconst succ = (result) => {\r\n\t\t\tif (JsUtil.handleMessage(this, result)) {\r\n\t\t\t\tconst options = result.body;\r\n\t\t\t\tthis.setState({ category1Options: options });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst err = (result) => {\r\n\t\t\tJsUtil.handleMessage(this, result, true)\r\n\t\t}\r\n\r\n\t\tJsUtil.asyncHttpPost(this, '/cm/pub/category/search', JSON.stringify(param), succ, err);\r\n\t}\r\n\r\n\tloadCategoryTreeInfoByBottomId = category3Id => {\r\n\t\tJsUtil.asyncHttpGet(this,\r\n\t\t\t`/cm/pub/category/load/search?id=${category3Id}`,\r\n\t\t\tcategory3Res => {\r\n\t\t\t\tconst category2Id = category3Res.body.parentId;\r\n\r\n\t\t\t\tJsUtil.asyncHttpPost(this,\r\n\t\t\t\t\t'/cm/pub/category/search',\r\n\t\t\t\t\tJSON.stringify({ parentId: category2Id }),\r\n\t\t\t\t\tcategories3Res => {\r\n\t\t\t\t\t\tconst options = categories3Res.body\r\n\t\t\t\t\t\tconst entity = options.find(e => e.id == category3Id)\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tcategory3Options: options,\r\n\t\t\t\t\t\t\tcategory3Id: entity ? entity.id : null\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tJsUtil.asyncHttpGet(this,\r\n\t\t\t\t\t\t\t`/cm/pub/category/load/search?id=${category2Id}`,\r\n\t\t\t\t\t\t\tcategory2Res => {\r\n\t\t\t\t\t\t\t\tconst category1Id = category2Res.body.parentId;\r\n\r\n\t\t\t\t\t\t\t\tJsUtil.asyncHttpPost(this,\r\n\t\t\t\t\t\t\t\t\t'/cm/pub/category/search',\r\n\t\t\t\t\t\t\t\t\tJSON.stringify({ parentId: category1Id }),\r\n\t\t\t\t\t\t\t\t\tcategories2Res => {\r\n\t\t\t\t\t\t\t\t\t\tconst options = categories2Res.body\r\n\t\t\t\t\t\t\t\t\t\tconst entity = options.find(e => e.id == category2Id)\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tcategory2Options: options,\r\n\t\t\t\t\t\t\t\t\t\t\tcategory2Id: entity ? entity.id : null\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\tJsUtil.asyncHttpPost(this,\r\n\t\t\t\t\t\t\t\t\t\t\t'/cm/pub/category/search',\r\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify({ parentId: cnst.ID_TOP_REGION }),\r\n\t\t\t\t\t\t\t\t\t\t\tcategories1Res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst options = categories1Res.body\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst entity = options.find(e => e.id == category1Id)\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategory1Options: options,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategory1Id: entity ? entity.id : null\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tcategory1Err => console.log(category1Err)\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tcategories2Err => console.log(categories2Err)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tcategory2Err => console.log(category2Err)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcategories3Err => console.log(categories3Err)\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tcategory3Err => console.log(category3Err)\r\n\t\t);\r\n\t}\r\n\r\n\tcategory1Changed = (selectedItem) => {\r\n\t\tconst id = selectedItem.id;\r\n\t\tconst selectedEntity = this.state.category1Options.find(entity => entity.id = id);\r\n\t\tif (!selectedEntity) return;\r\n\r\n\t\tlet params = {\r\n\t\t\tparentId: id\r\n\t\t}\r\n\r\n\t\tconst succ = (result) => {\r\n\t\t\tthis.setState({ category1Id: id, category2Options: result.body, category3Options: [] });\r\n\t\t\tthis.props.onChange([id, null, null]);\r\n\t\t}\r\n\r\n\t\tconst err = (result) => {\r\n\t\t\tJsUtil.handleMessage(this, result, true)\r\n\t\t}\r\n\r\n\t\tJsUtil.asyncHttpPost(this, '/cm/pub/category/search', JSON.stringify(params), succ, err);\r\n\t}\r\n\r\n\tcategory2Changed = (selectedItem) => {\r\n\t\tconst id = selectedItem.id;\r\n\t\tconst selectedEntity = this.state.category2Options.find(entity => entity.id = id);\r\n\t\tif (!selectedEntity) return;\r\n\r\n\t\tlet params = {\r\n\t\t\tparentId: id\r\n\t\t}\r\n\r\n\t\tconst succ = (result) => {\r\n\t\t\tconst category3Options = result.body;\r\n\t\t\tconst category1Id = this.state.category1Id;\r\n\t\t\tthis.setState({ category2Id: id, category3Options: category3Options });\r\n\t\t\tthis.props.onChange([category1Id, id, null]);\r\n\t\t}\r\n\r\n\t\tconst err = (result) => {\r\n\t\t\tJsUtil.handleMessage(this, result, true)\r\n\t\t}\r\n\r\n\t\tJsUtil.asyncHttpPost(this, '/cm/pub/category/search', JSON.stringify(params), succ, err);\r\n\t}\r\n\r\n\tcategory3Changed = (selectedItem) => {\r\n\t\tconst id = selectedItem.id;\r\n\t\tconst selectedEntity = this.state.category3Options.find(entity => entity.id = id);\r\n\t\tif (!selectedEntity) return;\r\n\t\tconst category1Id = this.state.category1Id;\r\n\t\tconst category2Id = this.state.category2Id;\r\n\t\tthis.setState({ category3Id: id },\r\n\t\t\t() => this.props.onChange([category1Id, category2Id, id]))\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst mode = this.props.mode;\r\n\t\tconst { category1Options, category2Options, category3Options } = this.state;\r\n\t\tconst { category1Id, category2Id, category3Id } = this.state;\r\n\t\tconst labelKey = 'categoryFullName';\r\n\t\tconst valueKey = 'id';\r\n\t\tconst label1 = this.props.label1 ? this.props.label1 : '商品大分类';\r\n\t\tlet disabled = false;\r\n\t\tif (mode == cnst.SHOW_MODE_VIEW) disabled = true;\r\n\r\n\t\treturn (\r\n\t\t\t<BaseView>\r\n\t\t\t\t<SelectInput options={category1Options} labelKey={labelKey} valueKey={valueKey} value={category1Id} onChange={this.category1Changed} label={label1} disabled={disabled} >\r\n\t\t\t\t</SelectInput>\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\r\n\t\t\t\t<SelectInput options={category2Options} labelKey={labelKey} valueKey={valueKey} value={category2Id} onChange={this.category2Changed} label={'商品中分类'} disabled={disabled} >\r\n\t\t\t\t</SelectInput>\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\r\n\t\t\t\t<SelectInput options={category3Options} labelKey={labelKey} valueKey={valueKey} value={category3Id} onChange={this.category3Changed} label={'商品小分类'} disabled={disabled} >\r\n\t\t\t\t</SelectInput>\r\n\t\t\t</BaseView>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CategoryField3;\r\n","import React from 'react'\r\nimport Taro from '@tarojs/taro'\r\nimport { Editor } from '@tarojs/components';\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport DivView from 'tsx/view/DivView';\r\nimport SimpleIcon from 'tsx/view/SimpleIcon'\r\nimport editImage from 'img/p/setting2.png';\r\n\r\nclass RichTextInput extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\teditorFormat: {},\r\n\t\t}\r\n\t}\r\n\r\n\teditorCtx;\r\n\r\n\tonEditorReady = () => {\r\n\t\tconst value = this.props.value;\r\n\t\t\r\n\t\tTaro.createSelectorQuery()\r\n\t\t\t.select('#editor')\r\n\t\t\t.context((res) => {\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tthis.editorCtx = res.context\r\n\t\t\t\t\tconsole.log(value)\r\n\t\t\t\t\tif(value)\r\n\t\t\t\t\tthis.editorCtx.setContents({html: value})\r\n\t\t\t\t}\r\n\t\t\t}).exec()\r\n\t}\r\n\r\n\tonStatusChange = (event) => {\r\n\t\tthis.setState({editorFormat: event.detail})\r\n\t}\r\n\r\n\tonEditorInput = (event) => {\r\n\t\tconst value = event.detail.html\r\n\t\tthis.props.onChange(value)\r\n\t}\r\n\r\n\tonEditorBlur = (event) => {\r\n\t\tconst value = event.detail.html\r\n\t}\r\n\t\r\n  onAddImage = (event) =>{\r\n      JsUtil.onFileUpload(this, {count: 10}, this.uploadCallback);\r\n  }\r\n  \r\n  uploadCallback = (result, idx) => {\r\n\t\t\t\t\t\t\tthis.editorCtx.insertImage({\r\n\t\t\t\t\t\t\t\tsrc: JsUtil.IMAGE_PREFIX + result.body,\r\n\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\tid: 'cmdu-' + idx,\r\n\t\t\t\t\t\t\t\t\trole: 'god'\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\twidth: 300,\r\n\t\t\t\t\t\t\t\tsuccess: (result2) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(result2)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n  }\r\n\r\n\trender() {\r\n\t\r\n\t\treturn (\r\n\t\t\t<DivView>\r\n\t\t\t\t<Editor id='editor'className='editor'\r\n\t\t\t\t\tplaceholder='请输入内容...'\r\n\t\t\t\t\tonReady={this.onEditorReady}\r\n\t\t\t\t\tonInput={this.onEditorInput}\r\n\t\t\t\t\tonStatuschange={this.onStatusChange}\r\n\t\t\t\t\tonBlur={this.onEditorBlur}\r\n\t\t\t\t>\r\n\t\t\t\t</Editor>\r\n\t\t\t\t<SimpleIcon value={editImage} color='#3F51B5' onClick={this.onAddImage} />\r\n\t\t\t</DivView>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default RichTextInput\r\n","import React from 'react'\n\nimport JsUtil from 'tsx/common/JsUtil'\nimport cnst from 'tsx/common/Constant'\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\nimport BrView from 'tsx/view/BrView'\nimport TextLabel from 'tsx/view/TextLabel'\nimport CategoryField3 from 'tsx/component/CategoryField3'\nimport OperatorSelect from 'tsx/component/OperatorSelect'\nimport CheckBoxes from 'tsx/form/CheckBoxes'\n\nclass CommodityFirst extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.params = JsUtil.getUrlParams(this);\n\t\tthis.opOptionType = this.params.mallType == cnst.MALL_TYPE_R_B2C ? cnst.OP_OPTION_TYPE_SUPPLIER : '';\n\t\tthis.currOrgId = JsUtil.getAppItem('currOrgId');\n\t\tthis.currOrgType = JsUtil.getAppItem('currOrgType');\n\n\t\tthis.state = {\n\t\t\tmode: this.params.mode || cnst.SHOW_MODE_NEW,\n\t\t\toperatorId: cnst.ID_HQ,\n\t\t\toperatorOptions: [],\n\t\t\tdeliveryOptions: [{ value: cnst.DELIVERY_TYPE_EXPRESS, label: '快递  ' }, { value: cnst.DELIVERY_TYPE_EXPRESS_CHANGE, label: '转运  ' }, { value: cnst.DELIVERY_TYPE_IMMEDIATELY, label: '即时送' }, { value: cnst.DELIVERY_TYPE_SELF_PICKUP, label: '自提' }, { value: cnst.DELIVERY_TYPE_ONLINE, label: '在线运输' }],\n\t\t\tmessages: {}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t}\n\n\tlabels0 = {\n\t\toperatorName: '运营中心名称',\n\t\tdeliveryType: '配送类型',\n\t\tmemberId: '用户编号',\n\t}\n\tlabels = { ...this.label0 }\n\n\tsetDeliveryArr = (name, deliveryArr) => {\n\t\tthis.props.setDeliveryArr(deliveryArr)\n\t}\n\n\tsetCategories = (categories) => {\n\t\tthis.props.setCategories(categories)\n\t}\n\n\tonConfirm = () => {\n\t\tJsUtil.closeMsgBox(this)\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<ColumnLayout >\n\t\t\t\t{this.opOptionType && <OperatorSelect mode={cnst.SHOW_MODE_NEW} optionType={this.opOptionType} checkedId={''} that={this} />}\n\n\t\t\t\t<TextLabel>配送类型</TextLabel>\n\t\t\t\t<CheckBoxes name={'deliveryArr'} label={this.labels.deliveryType} options={this.state.deliveryOptions} value={this.props.deliveryArr} onChange={this.setDeliveryArr} />\n\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\n\t\t\t\t<CategoryField3 value={this.props.categories} onChange={categories => this.setCategories(categories)} />\n\t\t\t</ColumnLayout>\n\t\t)\n\t}\n}\n\nexport default CommodityFirst\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"!!../../../../node_modules/@tarojs/taro-loader/lib/entry-cache.js?name=pkgcommodity/page/commodity/CommodityPublish!./CommodityPublish.tsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pkgcommodity/page/commodity/CommodityPublish', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","import React from 'react';\r\n\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\nimport URI from 'tsx/common/URI'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\nimport RowLayout from 'tsx/layout/RowLayout'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\nimport CascadeBox from 'tsx/form/CascadeBox';\r\n\r\nclass CommoditySecond extends React.Component {\r\n\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\tconsole.log('commodity second lifecycle method getDerivedStateFromError');\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n\t\tconsole.log('commodity second lifecycle method getDerivedStateFromProps');\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconsole.log('commodity second lifecycle method constructor');\r\n\r\n\t\tthis.params = JsUtil.getUrlParams(this);\r\n\t\tthis.that = this.props.that;\r\n\t\t\r\n\t\tthis.state = {\r\n            mode: this.params.mode || cnst.SHOW_MODE_NEW,\r\n            entities: [],\r\n            fromIdArr4CurrDeliType: this.props.fromIdArr4CurrDeliType\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('commodity second lifecycle method componentDidMount');\r\n\t\tthis.fetchFromAddrIds(this.props.deliveryType, this.props.operatorId, this.currOrgId);\r\n\t}\r\n\r\n\tshouldComponentUpdate() {\r\n\t\tconsole.log('commodity second lifecycle method shouldComponentUpdate');\r\n\t\tif (this.state.mode == cnst.SHOW_MODE_EDIT) return true;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tgetSnapshotBeforeUpdate() {\r\n\t\tconsole.log('commodity second lifecycle method getSnapshotBeforeUpdate');\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tconsole.log('commodity second lifecycle method componentDidUpdate');\r\n\t\tif(prevProps.fromIdArr4CurrDeliType != this.props.fromIdArr4CurrDeliType){\r\n\t\t\tthis.setState({fromIdArr4CurrDeliType: this.props.fromIdArr4CurrDeliType});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch() {\r\n\t\tconsole.log('commodity second lifecycle method componentDidCatch');\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log('commodity second lifecycle method componentWillUnmount');\r\n\t}\r\n\t\r\n\tcheckedAllList=[];\r\n\tcurrOrgId = JsUtil.getAppItem('currOrgId');\r\n\r\n    fetchFromAddrIds = (deliveryType, operatorId, supplierId) => {\r\n        // 查找非转运地址列表\r\n        const param =  `deliveryType=${deliveryType}&operatorId=${operatorId}&supplierId=${supplierId}`;\r\n        console.log('param: ', param)\r\n\r\n        let uri = '/lg/pub/receipt/address/organization/from/search';\r\n\r\n        const succ = (result) => {\r\n          if (JsUtil.handleMessage(this.that, result)) {\r\n              const entities = result.body;\r\n              \r\n              if(entities.length==0){\r\n                JsUtil.showMsgBox(this.that, deliveryType+': 无此类型的发货地址, 不能发布此配送类型的商品')\r\n                return\r\n              }\r\n              \r\n              this.setState({entities});\r\n              entities.map((item, idx) => {\r\n                  this.checkedAllList.push(item.id)\r\n              })\r\n          }\r\n        }\r\n\r\n        const err = (result) => {\r\n          JsUtil.handleMessage(this.that, result, true)\r\n        }\r\n\r\n        JsUtil.asyncHttpPost(this.that, uri, param, succ, err, cnst.REQUEST_TYPE_WWW);\r\n    }\r\n\r\n    getOptions = (records) => {\r\n        const options = []\r\n\r\n        records.map((item, indx) => {\r\n        const desc = (\r\n            <RowLayout><TextLabel>{item.regionFullName}{item.detailAddress}</TextLabel></RowLayout>\r\n        )\r\n\r\n        options.push({ value: item.id, label: item.subjectName, desc: desc })\r\n        })\r\n\r\n        return options;\r\n    }\r\n\r\n\tonCheckBoxesAllChanged = (name, selectedValues) => {\r\n\t\tif (selectedValues.length == 0) {\r\n        this.setState({ [name]: [] });\r\n\t\t} else {\r\n        this.setState({ [name]: this.checkedAllList });\r\n\t\t}\r\n\t}\r\n\r\n\tonCascadeBoxChanged = (name, selectedValues) => {\r\n\t\tthis.setState({ [name]: selectedValues });\r\n\t\tthis.props.setFromIdArr4CurrDeliType(selectedValues);\r\n\t}\r\n\t\r\n\tonClose = (name) => {\r\n\t  this.setState({ [name]: false })\r\n\t}\r\n\r\n\tonConfirm = () => {\r\n\t\tJsUtil.closeMsgBox(this.that)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { entities, fromIdArr4CurrDeliType } = this.state;\r\n\t\tconst options = this.getOptions(entities);\r\n\t    \r\n\t\treturn (\r\n        <ColumnLayout>\r\n        \t\t<CascadeBox name='fromIdArr4CurrDeliType' \r\n                options={options}\r\n                value={fromIdArr4CurrDeliType}\r\n                onChange={this.onCascadeBoxChanged}\r\n        \t\t>\r\n        \t\t</CascadeBox>\r\n        </ColumnLayout>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CommoditySecond;\r\n","import React from 'react';\r\nimport validator from 'validator';\r\n\r\nimport JsUtil from 'tsx/common/JsUtil'\r\nimport cnst from 'tsx/common/Constant'\r\nimport ColumnLayout from 'tsx/layout/ColumnLayout'\r\nimport BrView from 'tsx/view/BrView'\r\nimport TextLabel from 'tsx/view/TextLabel'\r\nimport GeneralInput from 'tsx/form/GeneralInput';\r\nimport ImagePicker from 'tsx/form/ImagePicker'\r\nimport RichTextInput from 'tsx/form/RichTextInput'\r\nimport SelectInput from 'tsx/form/SelectInput'\r\nimport CascadeBox from 'tsx/form/CascadeBox'\r\nimport cmdu from './CommodityUtil'\r\n\r\nclass CommodityThird extends React.Component {\r\n\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\tconsole.log('commodity third lifecycle method getDerivedStateFromError');\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n\t\tconsole.log('commodity third lifecycle method getDerivedStateFromProps');\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconsole.log('commodity third lifecycle method constructor');\r\n\r\n\t\tthis.that = this.props.that;\r\n\t\tthis.params = JsUtil.getUrlParams(this);\r\n\t\tthis.categories = this.props.categories;\r\n\t\tthis.operatorId = this.props.operatorId;\r\n\t\tthis.deliveryArr = this.props.deliveryArr;\r\n\t\tthis.fromAddrIds = this.props.fromAddrIds;\r\n\r\n\t\tthis.state = {\r\n\t\t\tmode: this.params.mode || cnst.SHOW_MODE_NEW,\r\n\t\t\tentity: {},\r\n\t\t\tfreightTemplateId: '',\r\n\t\t\tfreightTemplate2Id: '',\r\n\t\t\tfreightTmpOptions: [],\r\n\t\t\tawardRate: 0.0,\r\n\t\t\tpresentRate: 0.5,\r\n\t\t\tpresentCycleUnit: 1,\r\n\t\t\tpresentCycleUnitOptions: [{ value: 1, label: '月' }, { value: 12, label: '年' }, { value: 120, label: '十年' }],\r\n\t\t\tpresentCycleQty: 10,\r\n\t\t\tvoucherRate: 0.2,\r\n\t\t\tsettleRate: 0.965,\r\n\t\t\tpayType: 1,\r\n\t\t\tpayTypeOptions: [{ value: 1, label: '在线支付' }, { value: 3, label: '货到付款' }],\r\n\t\t\ttradeType: 1,\r\n\t\t\ttradeTypeOptions: [{ value: 1, label: '普通' }, { value: 3, label: '推荐' }, { value: 5, label: '团购' }],\r\n\t\t\tgrouponDays: 1,\r\n\t\t\tgrouponDaysOptions: [{ value: 1, label: '1' }, { value: 2, label: '2' }, { value: 3, label: '3' }],\r\n\t\t\tgrouponQty: 3,\r\n\t\t\tweight: 1,\r\n\t\t\tspecEntities: [],\r\n\t\t\tspecNames: [],\r\n\t\t\tcombinedSpecValueNames: [],\r\n\t\t\tselectedSpecValueNames: [],\r\n\t\t\tspecCheckedArr: [],\r\n\t\t\tselectedSpecValueIds: [],\r\n\t\t\tattributeEntities: [],\r\n\t\t\tattributeValues: [],\r\n\t\t\tpriceAndQtyValues: {},\r\n\t\t\terrors: JsUtil.setProperties(this.labels, false),\r\n\t\t\tdisabled: this.params.mode == cnst.SHOW_MODE_VIEW,\r\n\t\t\tcommodityNo: '',\r\n\t\t\tbigImageUri: [],\r\n\t\t\tbigImageFiles: [],\r\n\t\t\tdescriptions: '',\r\n\t\t\tBrandId: '',\r\n\t\t\tBrandOptions: [],\r\n\t\t\tupdateTime: ''\r\n\t\t}\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('commodity third lifecycle method componentDidMount');\r\n\t\tconst id = this.params.id;\r\n\t\tconst mode = this.state.mode;\r\n\t\tif (mode == cnst.SHOW_MODE_NEW) {\r\n\t\t\tconst categoryId = this.categories[2];\r\n\t\t\tthis.fetchCommoditySpecCategory(categoryId, []);\r\n\t\t\tthis.fetchCommodityAttribute(categoryId, []);\r\n\t\t\tthis.fetchBrandAndFreightTemplate();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.that.state.commodityThird) this.setState({ ...this.that.state.commodityThird });\r\n\t\telse this.load(id, mode);\r\n\t}\r\n\r\n\tshouldComponentUpdate() {\r\n\t\tconsole.log('commodity third lifecycle method shouldComponentUpdate');\r\n\t\tif (this.state.mode == cnst.SHOW_MODE_EDIT) return true;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tgetSnapshotBeforeUpdate() {\r\n\t\tconsole.log('commodity third lifecycle method getSnapshotBeforeUpdate');\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tconsole.log('commodity third lifecycle method componentDidUpdate');\r\n\t}\r\n\r\n\tcomponentDidCatch() {\r\n\t\tconsole.log('commodity third lifecycle method componentDidCatch');\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log('commodity third lifecycle method componentWillUnmount');\r\n\t\tthis.that.setCommodityThird(this.state);\r\n\t}\r\n\r\n\tsupplierId = JsUtil.getAppItem('currOrgId');\r\n\r\n\tlabels0 = {\r\n\t\toperatorId: '运营中心编号',\r\n\t\tcommodityName: '商品名称',\r\n\t\tcommodityNo: '商品货号',\r\n\t\tremark: '备注',\r\n\t\tfreightTemplateId: '运费模板',\r\n\t\tdeliveryType: \"配送类型\",\r\n\t\tpayType: '支付类型',\r\n\t\ttradeType: '交易类型',\r\n\t\tgrouponDays: '团购天数',\r\n\t\tgrouponQty: '团购底数',\r\n\t\tsupplierId: '供应商',\r\n\t\tBrandId: '品牌',\r\n\t\tattributes: '属性',\r\n\t\tuserId: '用户',\r\n\t\tmarketPrice: '市场价格',\r\n\t\tourPrice: '售价',\r\n\t\tinventories: '库存',\r\n\t\tbigImageUri: '商品图片',\r\n\t\tdescriptions: '商品详情',\r\n\t\tawardRate: '奖励比例',\r\n\t\tpresentRate: '赠送比例',\r\n\t\tpresentCycleUnit: '赠周单位',\r\n\t\tpresentCycleQty: '赠周数量',\r\n\t\tvoucherRate: '代金比例',\r\n\t\tsettleRate: '结算比例',\r\n\t\tweight: '重量(克)',\r\n\t\tupdateTime: '更新时间'\r\n\t}\r\n\r\n\tlabels1 = { ...this.labels0 }\r\n\tlabels = { ...this.labels1 }\r\n\r\n\tinit() {\r\n\t\tJsUtil.init(this, '/cm/pub/b2b/global/commodity/init/search', 'commodity')\r\n\t\t\t.then(({ validateFields, validateForm }) => {\r\n\t\t\t\tthis.validateFields = validateFields;\r\n\t\t\t\tthis.validateForm = validateForm;\r\n\t\t\t});\r\n\t}\r\n\r\n\tload = (id, mode) => {\r\n\t\tconst succ = (result) => {\r\n\t\t\tif (JsUtil.handleMessage(this.that, result)) {\r\n\t\t\t\tthis.operatorId = result.body.operatorId;\r\n\t\t\t\tthis.setState({ entity: result.body });\r\n\t\t\t\tconst { operatorId,\r\n\t\t\t\t\tcategory1Id,\r\n\t\t\t\t\tcategory2Id,\r\n\t\t\t\t\tcategory3Id,\r\n\t\t\t\t\tfreightTemplateId,\r\n\t\t\t\t\tBrandId,\r\n\t\t\t\t\tcommodityName,\r\n\t\t\t\t\tremark,\r\n\t\t\t\t\tdescriptions,\r\n\t\t\t\t\tpayType,\r\n\t\t\t\t\ttradeType,\r\n\t\t\t\t\tdeliveryTypes,\r\n\t\t\t\t\tdeliveryType,\r\n\t\t\t\t\tgrouponDays,\r\n\t\t\t\t\tgrouponQty,\r\n\t\t\t\t\tcommodityNo,\r\n\t\t\t\t\tbigImageUri,\r\n\t\t\t\t\tawardRate,\r\n\t\t\t\t\tpresentRate,\r\n\t\t\t\t\tpresentCycleUnit,\r\n\t\t\t\t\tpresentCycleQty,\r\n\t\t\t\t\tvoucherRate,\r\n\t\t\t\t\tsettleRate,\r\n\t\t\t\t\tweight,\r\n\t\t\t\t\tfromAddrIds,\r\n\t\t\t\t\tupdateTime,\r\n\t\t\t\t\tcommoditySpecs,\r\n\t\t\t\t\tattributes,\r\n\t\t\t\t} = result.body;\r\n\t\t\t\tif (mode == cnst.SHOW_MODE_VIEW) {\r\n\t\t\t\t\tthis.setState({ disabled: true });\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.that.setOperatorId(operatorId);\r\n\t\t\t\tthis.that.setDeliveryType(deliveryType);\r\n\t\t\t\tthis.that.setDeliveryArr(deliveryTypes);\r\n\t\t\t\tthis.that.setCategories([category1Id, category2Id, category3Id]);\r\n\t\t\t\tthis.that.setFromAddrIds(deliveryTypes, fromAddrIds);\r\n\t\t\t\tthis.deliveryArr = deliveryTypes;\r\n\t\t\t\tthis.fromAddrIds = fromAddrIds;\r\n\r\n\t\t\t\tconst jsonAttributes = JSON.parse(attributes);\r\n\r\n\t\t\t\tthis.fetchCommoditySpecCategory(category3Id, commoditySpecs);\r\n\t\t\t\tthis.fetchCommodityAttribute(category3Id, jsonAttributes);\r\n\t\t\t\tthis.fetchBrandAndFreightTemplate();\r\n\r\n\t\t\t\tconst imageArr = JSON.parse(bigImageUri);\r\n\t\t\t\tconst imageFiles = [];\r\n\t\t\t\timageArr.forEach((item, idx) => {\r\n\t\t\t\t\timageFiles.push({ url: JsUtil.IMAGE_PREFIX + item })\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.setState({\n\t\t\t\t\toperatorId,\r\n\t\t\t\t\tcommodityName,\r\n\t\t\t\t\tfreightTemplateId: freightTemplateId,\r\n\t\t\t\t\tremark,\r\n\t\t\t\t\tawardRate,\r\n\t\t\t\t\tpresentRate,\r\n\t\t\t\t\tpresentCycleUnit,\r\n\t\t\t\t\tpresentCycleQty,\r\n\t\t\t\t\tvoucherRate,\r\n\t\t\t\t\tsettleRate,\r\n\t\t\t\t\tweight,\r\n\t\t\t\t\tdescriptions: descriptions,\r\n\t\t\t\t\tBrandId: BrandId,\r\n\t\t\t\t\tbigImageUri: imageArr,\r\n\t\t\t\t\tbigImageFiles: imageFiles,\r\n\t\t\t\t\tpayType,\r\n\t\t\t\t\ttradeType,\r\n\t\t\t\t\tgrouponDays,\r\n\t\t\t\t\tgrouponDays,\r\n\t\t\t\t\tgrouponQty,\r\n\t\t\t\t\tcommodityNo,\r\n\t\t\t\t\tupdateTime\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst err = (result) => {\r\n\t\t\tJsUtil.handleMessage(this.that, result, true)\r\n\t\t}\r\n\r\n\t\tlet uri = `/cm/pub/b2b/global/commodity/load/search`;\r\n\t\tif (this.params.mallType == cnst.MALL_TYPE_G_B2C)\r\n\t\t\turi = `/cm/pub/b2c/global/commodity/load/search`;\r\n\t\tif (this.params.mallType == cnst.MALL_TYPE_R_B2B)\r\n\t\t\turi = `/cm/pub/b2b/region/commodity/load/search`;\r\n\t\tif (this.params.mallType == cnst.MALL_TYPE_R_B2C)\r\n\t\t\turi = `/cm/pub/b2c/region/commodity/load/search`;\r\n\r\n\t\tJsUtil.asyncHttpGet(this.that, uri + `?id=${id}`, succ, err);\r\n\t}\r\n\r\n\tfetchCommoditySpecCategory = (category3Id, commoditySpecs) => {\r\n\t\tconst succ = (result) => {\r\n\t\t\tif (JsUtil.handleMessage(this.that, result)) {\r\n\t\t\t\tconst specEntityList = result.body;\r\n\t\t\t\tlet specCheckedArr = [];\r\n\t\t\t\tlet disabledSpec = [];\r\n\t\t\t\tfor (let i = 0; i < specEntityList.length; i++) {\r\n\t\t\t\t\tspecCheckedArr[i] = [];\r\n\t\t\t\t\tdisabledSpec[i] = [];\r\n\t\t\t\t\tfor (\r\n\t\t\t\t\t\tlet j = 0;\r\n\t\t\t\t\t\tj <= specEntityList[i].specValues.length;\r\n\t\t\t\t\t\tj++\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tspecCheckedArr[i][j] = false;\r\n\t\t\t\t\t\tdisabledSpec[i][j] = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tspecCheckedArr: specCheckedArr,\r\n\t\t\t\t\tdisabledSpec,\r\n\t\t\t\t\tspecEntities: specEntityList\r\n\t\t\t\t}, () => this.setSpecs(commoditySpecs));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst err = (result) => {\r\n\t\t\tJsUtil.handleMessage(this.that, result, true)\r\n\t\t}\r\n\r\n\t\tJsUtil.asyncHttpPost(this.that, \"/cm/pub/spec/category/search\", \"categoryId=\" + category3Id, succ, err, cnst.REQUEST_TYPE_WWW);\r\n\t}\r\n\r\n\tsetSpecs = (commoditySpecs) => {\r\n\t\tconst specEntities = this.state.specEntities;\r\n\t\tconst selectedSpecValueIds = [];\r\n\t\tspecEntities.map(() => selectedSpecValueIds.push([]));\r\n\r\n\t\tconst specs = commoditySpecs;\r\n\t\t//this.setState({preSpecs: specs});\r\n\t\tspecs.forEach((spec, specIdx) => {\r\n\t\t\tconst specValues = JSON.parse(spec.specValues);\r\n\t\t\tspecValues.forEach((value, valueIndex) => {\r\n\t\t\t\tconst { n, v, ni, vi } = value;\r\n\t\t\t\tconst idx = specEntities.findIndex(name => name.id == ni);\r\n\t\t\t\tif (idx >= 0 && selectedSpecValueIds[idx].findIndex(element => element == vi) < 0) {\r\n\t\t\t\t\tconst index2 = specEntities[idx].specValues.findIndex(commodityValue => vi == commodityValue.id);\r\n\t\t\t\t\tcmdu.specCheckChanged(this, idx, index2, n, v, true);\r\n\r\n\t\t\t\t\tselectedSpecValueIds[idx].push(vi);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.setState({ selectedSpecValueIds });\r\n\r\n\t\t\tthis.priceOrQtyValueChanged('specNo-' + spec.specName, spec.specName);\r\n\t\t\tthis.priceOrQtyValueChanged('marketPrice-' + spec.specName, spec.marketPrice);\r\n\t\t\tthis.priceOrQtyValueChanged('ourPrice-' + spec.specName, spec.ourPrice);\r\n\t\t\tthis.priceOrQtyValueChanged('inventories-' + spec.specName, spec.inventories);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tfetchCommodityAttribute = (category3Id, attributes) => {\r\n\t\tconst succ = (result) => {\r\n\t\t\tif (JsUtil.handleMessage(this.that, result)) {\r\n\t\t\t\tconst attributeValues = [];\r\n\t\t\t\tfor (let i = 0; i < result.body.length; i++) {\r\n\t\t\t\t\tattributeValues.push(\"\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tattributeValues: attributeValues,\r\n\t\t\t\t\tattributeEntities: result.body\r\n\t\t\t\t}, () => this.setAttributes(attributes));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst err = (result) => {\r\n\t\t\tJsUtil.handleMessage(this.that, result, true)\r\n\t\t}\r\n\r\n\t\tJsUtil.asyncHttpPost(this.that,\r\n\t\t\t\"/cm/pub/attribute/category/search?categoryId=\" + category3Id,\r\n\t\t\tcategory3Id, succ, err\r\n\t\t);\r\n\t}\r\n\r\n\tsetAttributes = (attributes) => {\r\n\t\tconst attributeEntities = this.state.attributeEntities;\r\n\t\tattributeEntities.forEach((attributeEntity, idx) => {\r\n\t\t\tconst value = attributes.find(e => e.ni == attributeEntity.id);\r\n\t\t\tif (!value) return;\r\n\r\n\t\t\tthis.attrValueChanged(idx, attributeEntity)({ id: value.vi });\r\n\t\t});\r\n\t}\r\n\r\n\tfetchBrandAndFreightTemplate = () => {\r\n\t\tJsUtil.asyncHttpPost(this.that,\r\n\t\t\t'/lg/pub/freight/template/search',\r\n\t\t\tJSON.stringify({\r\n\t\t\t\toperatorId: this.operatorId,\r\n\t\t\t\tsupplierId: this.supplierId,\r\n\t\t\t\tmallType: this.params.mallType\r\n\t\t\t}),\r\n\t\t\tresult => {\r\n\t\t\t\tif (result.code == cnst.CODE_COMM_0_SUCCESS) {\r\n\t\t\t\t\tlet ftEntities = result.body;\r\n\t\t\t\t\t//if (!ftEntities || ftEntities.length == 0) ftEntities = [{ id: cnst.ID_FREIGHT_TEMPLATE_DEFAULT, templateName: '包邮' }]\r\n\t\t\t\t\tthis.setState({ freightTmpOptions: ftEntities });\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\tconsole.log('ftEntities err: ')\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tJsUtil.asyncHttpPost(this.that,\r\n\t\t\t'/cm/pub/brand/search',\r\n\t\t\tJSON.stringify({ operatorId: this.operatorId, supplierId: this.supplierId }),\r\n\t\t\tresult => {\r\n\t\t\t\tif (result.code == cnst.CODE_COMM_0_SUCCESS) {\r\n\t\t\t\t\tlet BrandEntities = result.body;\r\n\t\t\t\t\t//if(!BrandEntities||BrandEntities.length==0) BrandEntities=[{id: cnst.ID_BRAND_DEFAULT, BrandName: '无牌'}]\r\n\t\t\t\t\tthis.setState({ BrandOptions: BrandEntities });\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\tconsole.log('BrandEntities err: ')\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tsubmit = (deliveryArr) => {\r\n\t\tconst { priceAndQtyValues, specEntities, combinedSpecValueNames, BrandId, freightTemplateId, freightTemplate2Id } = this.state;\r\n\r\n\t\tif (!freightTemplateId || (this.hasImmediately(deliveryArr) && !freightTemplate2Id)) {\r\n\t\t\tJsUtil.showMsgBox(this.that, '请选择运费模板');\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet specCount = 1;\r\n\t\tthis.state.selectedSpecValueIds.forEach(item => {\r\n\t\t\tif (item.length == 0) {\r\n\t\t\t\tspecCount = 0;\r\n\t\t\t} else {\r\n\t\t\t\tspecCount *= item.length;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (specCount == 0) {\r\n\t\t\tJsUtil.showMsgBox(this.that, '每种规格至少选中一个选项');\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst specQtyValues = cmdu.getSpecTableValue(priceAndQtyValues, combinedSpecValueNames, specEntities);\r\n\r\n\t\tif (specCount != specQtyValues.length) {\r\n\t\t\tJsUtil.showMsgBox(this.that, '必须填写所有市场价格 ，售价，库存');\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tspecCount = 0;\r\n\t\tspecQtyValues.forEach(item => {\r\n\t\t\tconst marketPrice = parseFloat(item.marketPrice);\r\n\t\t\tlet ourPrice = parseFloat(item.ourPrice);\r\n\t\t\tlet inventories = parseFloat(item.inventories);\r\n\t\t\tif (isNaN(marketPrice) || marketPrice <= 0 || isNaN(ourPrice) || ourPrice <= 0 || isNaN(inventories) || inventories < 0) {\r\n\t\t\t\tspecCount++;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (specCount > 0) {\r\n\t\t\tJsUtil.showMsgBox(this.that, '市场价格 ，售价，库存必须填写大于零的数值');\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst supplierName = JsUtil.getStoreName(this.operatorId);\r\n\t\t//规格json****************************************\r\n\t\tlet selectedSpecValueNames = this.state.selectedSpecValueNames;\r\n\t\tlet params = [];\r\n\r\n\t\tfor (let i = 0; i < selectedSpecValueNames.length; i++) {\r\n\t\t\tlet param = {}\r\n\t\t\tlet values = [];\r\n\t\t\tfor (let j = 0; j < selectedSpecValueNames[i].length; j++) {\r\n\t\t\t\tvalues.push(selectedSpecValueNames[i][j]);\r\n\t\t\t\tparam = {\r\n\t\t\t\t\tspecEntities: this.state.specNames[i],\r\n\t\t\t\t\tspecValues: JSON.stringify(values)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tparams.push(param);\r\n\t\t}\r\n\r\n\t\t//this.setState( { tablecolSapn: params.filter( e => !!e.specName ) } );\r\n\r\n\t\t//属性json*****************************************\r\n\t\tconst attributeParams = this.state.attributeValues;\r\n\r\n\t\t//参数*********************************************\r\n\r\n\t\tlet commodityName = this.state.commodityName;\r\n\t\t//const Brand = this.state.BrandOptions[Brand];\r\n\t\t//let BrandId = Brand ? Brand.id : cnst.ID_BRAND_DEFAULT;\r\n\r\n\t\tconst remark = this.state.remark;\r\n\t\tconst bigImageUri = this.state.bigImageUri;\r\n\t\tconst descriptions = this.state.descriptions;\r\n\t\tconst commodityNo = this.state.commodityNo;\r\n\t\tconst fromAddrIds = this.fromAddrIds;\r\n\r\n\t\tif (!bigImageUri) {\r\n\t\t\tJsUtil.showMsgBox(this.that, '请选择商品图片');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!descriptions) {\r\n\t\t\tJsUtil.showMsgBox(this.that, '请输入商品介绍');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet allparams = {\r\n\t\t\toperatorId: this.operatorId,\r\n\t\t\tsupplierId: this.supplierId,\r\n\t\t\tsupplierName,\r\n\t\t\tcategory1Id: this.categories.length > 0 ? this.categories[0] : null,\r\n\t\t\tcategory2Id: this.categories.length > 1 ? this.categories[1] : null,\r\n\t\t\tcategory3Id: this.categories.length > 2 ? this.categories[2] : null,\r\n\t\t\t...this.state.entity,\r\n\r\n\t\t\tattributes: JSON.stringify(attributeParams),\r\n\t\t\tBrandId: BrandId,\r\n\t\t\tbigImageUri: JSON.stringify(bigImageUri),\r\n\t\t\tfreightTemplateId: freightTemplateId,\r\n\t\t\tfreightTemplate2Id: freightTemplate2Id,\r\n\t\t\tdeliveryTypes: this.deliveryArr,\r\n\t\t\tpayType: this.state.payType,\r\n\t\t\ttradeType: this.state.tradeType,\r\n\t\t\tfromAddrIds: fromAddrIds,\r\n\t\t\tgrouponDays: this.state.grouponDays,\r\n\t\t\tgrouponQty: this.state.grouponQty,\r\n\t\t\tweight: this.state.weight,\r\n\t\t\tawardRate: this.state.awardRate,\r\n\t\t\tpresentRate: this.state.presentRate,\r\n\t\t\tpresentCycleUnit: this.state.presentCycleUnit,\r\n\t\t\tpresentCycleQty: this.state.presentCycleQty,\r\n\t\t\tvoucherRate: this.state.voucherRate,\r\n\t\t\tsettleRate: this.state.settleRate,\r\n\t\t\tcommodityName: commodityName,\r\n\t\t\tdescriptions: descriptions,\r\n\t\t\tcommodityNo: commodityNo,\r\n\t\t\tremark: remark,\r\n\t\t\tcommoditySpecs: specQtyValues.map(spec => ({\r\n\t\t\t\tspecName: spec.specNo,\r\n\t\t\t\tremark: remark,\r\n\t\t\t\tspecValues: JSON.stringify(spec.specvalues),\r\n\t\t\t\tmarketPrice: spec.marketPrice,\r\n\t\t\t\tourPrice: spec.ourPrice,\r\n\t\t\t\tinventories: spec.inventories,\r\n\t\t\t\tourPrice2: spec.ourPrice2,\r\n\t\t\t\tinventories2: spec.inventories2\r\n\t\t\t})),\r\n\t\t\tprice: specQtyValues[0].ourPrice\r\n\t\t}\r\n\t\t/**\r\n\t\t\t\tallparams.commoditySpecs = allparams.commoditySpecs.map(e => {\r\n\t\t\t\t\tconst item = this.state.preSpecs.find(\r\n\t\t\t\t\t\tpre => pre.specValues == e.specValues\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (item) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t...e\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn e;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t */\r\n\t\tconst msgs = this.validateForm(validator, this.labels0, allparams);\r\n\t\tif (msgs != '') {\r\n\t\t\tJsUtil.showMsgBox(this.that, msgs);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst succ = (result) => {\r\n\t\t\tif (JsUtil.handleMessage(this.that, result, true)) {\r\n\t\t\t\tthis.setState({ mode: cnst.SHOW_MODE_EDIT, selectedSpecValueNames: [], combinedSpecValueNames: [] }, () => this.load(result.body, cnst.SHOW_MODE_EDIT));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst err = (result) => {\r\n\t\t\tJsUtil.handleMessage(this.that, result, true)\r\n\t\t}\r\n\r\n\t\tlet uri = `/cm/pub/b2b/global/commodity/`;\r\n\t\tif (this.params.mallType == cnst.MALL_TYPE_G_B2C)\r\n\t\t\turi = `/cm/pub/b2c/global/commodity/`;\r\n\t\tif (this.params.mallType == cnst.MALL_TYPE_R_B2B)\r\n\t\t\turi = `/cm/pub/b2b/region/commodity/`;\r\n\t\tif (this.params.mallType == cnst.MALL_TYPE_R_B2C)\r\n\t\t\turi = `/cm/pub/b2c/region/commodity/`;\r\n\r\n\t\tconst jsonStr = JSON.stringify(allparams);\r\n\t\tconsole.log(jsonStr)\r\n\t\tJsUtil.asyncHttpPost(this.that, uri + `${this.state.mode == cnst.SHOW_MODE_EDIT ? 'update' : 'create'}`, jsonStr, succ, err);\r\n\t}\r\n\r\n\tattrValueChanged = (idx, attributeEntity) => selectedItem => {\r\n\t\tconst vi = selectedItem.id;\r\n\t\tconst attributeValueEntity = attributeEntity.commodityAttributeValues.find(e => e.id == vi);\r\n\t\tif (!attributeValueEntity) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst attributeValue = {\r\n\t\t\tni: attributeEntity.id,\r\n\t\t\tn: attributeEntity.attributeName,\r\n\t\t\tvi: attributeValueEntity.id,\r\n\t\t\tv: attributeValueEntity.attributeValue\r\n\t\t}\r\n\r\n\t\tconst attributeValues = this.state.attributeValues;\r\n\t\tattributeValues[idx] = attributeValue;\r\n\r\n\t\tthis.setState({ attributeValues });\r\n\t}\r\n\r\n\tgetShownSpecs = (disabled, labelWidth, valueWidth) => {\r\n\t\tconst specEntities = this.state.specEntities;\r\n\t\tconst selectedSpecValueIds = this.state.selectedSpecValueIds;\r\n\r\n\t\tconst specContent = []\r\n\t\tspecContent.push(<TextLabel key={'a12345'}>商品规格</TextLabel>);\r\n\r\n\t\t// specifications settings begin\r\n\t\tfor (let i = 0; i < specEntities.length; i++) {\r\n\t\t\tconst item = specEntities[i]\r\n\t\t\tspecContent.push((<TextLabel key={'1' + i}>{item.specName}</TextLabel>));\r\n\r\n\t\t\tconst speValueOptions = []\r\n\t\t\tconst item2 = item.specValues;\r\n\t\t\tif (!item2 || item2.length == 0) continue;\r\n\r\n\t\t\tfor (let j = 0; j < item2.length; j++) {\r\n\t\t\t\tif (!item2[j]) continue;\r\n\t\t\t\tspeValueOptions.push({ value: item2[j].id, label: <TextLabel alignItems='center'>{item2[j].specValue}&nbsp;&nbsp;</TextLabel>, idxp: i, disabled: disabled })\r\n\t\t\t}\r\n\r\n\t\t\tspecContent.push(<CascadeBox key={'c2' + i} idxp={i} name={item.specName + '_' + i} options={speValueOptions} value={selectedSpecValueIds[i]} onChange={this.specCheckChanged} flexDirection='row' />);\r\n\t\t}\r\n\r\n\t\t// prices and quantities settings begin\r\n\t\tlet showPrices = true;\r\n\t\tfor (let i = 0; i < selectedSpecValueIds.length; i++) {\r\n\t\t\tif (selectedSpecValueIds[i].length == 0) showPrices = false;\r\n\t\t}\r\n\r\n\t\tconst combinedSpecValueNames = this.state.combinedSpecValueNames;\r\n\t\tconst priceAndQtyValues = this.state.priceAndQtyValues;\r\n\t\tspecContent.push(<BrView key={'b12344'} height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />)\r\n\t\tspecContent.push(<TextLabel key={'b12345'}>价格库存</TextLabel>);\r\n\t\tif (showPrices) {\r\n\t\t\tlet specNo = ''\r\n\t\t\tlet marketPrice = ''\r\n\t\t\tlet ourPrice = ''\r\n\t\t\tlet inventories = ''\r\n\t\t\tlet ourPrice2 = ''\r\n\t\t\tlet inventories2 = ''\r\n\r\n\t\t\tfor (let i = 0; i < combinedSpecValueNames.length; i++) {\r\n\r\n\t\t\t\tlet result = '';\r\n\t\t\t\tfor (\r\n\t\t\t\t\tlet matchesIndex = 0;\r\n\t\t\t\t\tmatchesIndex < combinedSpecValueNames[i].length;\r\n\t\t\t\t\tmatchesIndex++\r\n\t\t\t\t) {\r\n\t\t\t\t\tresult = `${result}${specEntities[matchesIndex].specName}:${combinedSpecValueNames[i][matchesIndex]\r\n\t\t\t\t\t\t}${matchesIndex == combinedSpecValueNames[i].length - 1 ? '' : ','}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst specArr = priceAndQtyValues[result];\r\n\t\t\t\tif (specArr && specArr.specNo == result) {\r\n\t\t\t\t\tspecNo = specArr.specNo;\r\n\t\t\t\t\tmarketPrice = specArr.marketPrice;\r\n\t\t\t\t\tourPrice = specArr.ourPrice;\r\n\t\t\t\t\tinventories = specArr.inventories;\r\n\t\t\t\t\tourPrice2 = specArr.ourPrice2;\r\n\t\t\t\t\tinventories2 = specArr.inventories2;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tspecNo = ''\r\n\t\t\t\t\tmarketPrice = ''\r\n\t\t\t\t\tourPrice = ''\r\n\t\t\t\t\tinventories = ''\r\n\t\t\t\t\tourPrice2 = ''\r\n\t\t\t\t\tinventories2 = ''\r\n\t\t\t\t}\r\n\r\n\t\t\t\tspecContent.push(<TextLabel key={'5' + i}>{specNo}</TextLabel>);\r\n\t\t\t\tspecContent.push(<GeneralInput key={'6' + i} name={'marketPrice-' + specNo} label={this.labels.marketPrice} type={'digit'} value={marketPrice} error={this.state.errors.marketPrice} onChange={this.priceOrQtyValueChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />)\r\n\t\t\t\tspecContent.push(<BrView key={'62' + i} height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />)\r\n\t\t\t\tspecContent.push(<GeneralInput key={'7' + i} name={'ourPrice-' + specNo} label={this.labels.ourPrice} type={'digit'} value={ourPrice} error={this.state.errors.ourPrice} onChange={this.priceOrQtyValueChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />)\r\n\t\t\t\tspecContent.push(<BrView key={'64' + i} height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />)\r\n\t\t\t\tspecContent.push(<GeneralInput key={'8' + i} name={'inventories-' + specNo} label={this.labels.inventories} type={'number'} value={inventories} error={this.state.errors.inventories} onChange={this.priceOrQtyValueChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />)\r\n\t\t\t\tspecContent.push(<BrView key={'66' + i} height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />)\r\n\t\t\t\t//if(this.hasImmediately(this.deliveryArr))\r\n\t\t\t\t//  specContent.push(<GeneralInput key={'9' + i} name={'ourPrice2-' + specNo} label={this.labels.ourPrice2} type={'number'} value={ourPrice2} error={this.state.errors.ourPrice} onChange={this.priceOrQtyValueChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />)\r\n\t\t\t\t//if(this.hasImmediately(this.deliveryArr))\r\n\t\t\t\t//  specContent.push(<GeneralInput key={'10' + i} name={'inventories2-' + specNo} label={this.labels.inventories2} type={'number'} value={inventories2} error={this.state.errors.inventories} onChange={this.priceOrQtyValueChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />)       \r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn specContent;\r\n\t}\r\n\r\n\tshowAttributes = (disabled, labelWidth, valueWidth) => {\r\n\t\tconst attributeEntities = this.state.attributeEntities;\r\n\t\tconst attributeValues = this.state.attributeValues;\r\n\r\n\t\tconst attrContent = []\r\n\t\tattrContent.push(<TextLabel key={'c12345'}>商品属性</TextLabel>);\r\n\r\n\t\tconst labelKeyAttr = 'attributeValue';\r\n\t\tconst valueKeyAttr = 'id';\r\n\t\tfor (let i = 0; i < attributeEntities.length; i++) {\r\n\t\t\tconst item = attributeEntities[i]\r\n\t\t\tconst attrValueOptions = item.commodityAttributeValues;\r\n\r\n\t\t\tattrContent.push(<SelectInput key={'dropbox' + i} options={attrValueOptions} labelKey={labelKeyAttr} valueKey={valueKeyAttr} value={attributeValues[i].vi} onChange={this.attrValueChanged(i, item)} label={attributeEntities[i].attributeName} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />);\r\n\t\t\tattrContent.push(<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />);\r\n\t\t}\r\n\r\n\t\treturn attrContent;\r\n\t}\r\n\r\n\tspecCheckChanged = (name, selectedValues, changedValue, idx, idxp) => {\r\n\t\tconsole.log('specCheckChanged name: ', name)\r\n\t\tconsole.log('specCheckChanged selectedValues: ', selectedValues)\r\n\t\tconsole.log('specCheckChanged changedValue: ', changedValue)\r\n\t\tconsole.log('specCheckChanged idx: ', idx)\r\n\t\tconsole.log('specCheckChanged idxp: ', idxp)\r\n\t\tif (selectedValues.length == 0) {\r\n\t\t\t// this.setState( {selectedSpecValueIds: [], priceAndQtyValues: {} } );\r\n\t\t\t// return;\r\n\t\t}\r\n\r\n\t\tconst selectedSpecValueIds = this.state.selectedSpecValueIds;\r\n\t\tconst specEntities = this.state.specEntities;\r\n\t\tconst specEntity = specEntities[idxp];\r\n\t\tconst specValueEntities = specEntity.specValues;\r\n\t\tconst speValueName = specValueEntities.find(e => e.id == changedValue).specValue;\r\n\r\n\t\tif (selectedSpecValueIds.length == 0 || selectedValues.length >= selectedSpecValueIds[idxp].length) {\r\n\t\t\tcmdu.specCheckChanged(this, idxp, idx, specEntity.specName, speValueName, true)\r\n\t\t} else {\r\n\t\t\tcmdu.specCheckChanged(this, idxp, idx, specEntity.specName, speValueName, false)\r\n\t\t}\r\n\r\n\t\tselectedSpecValueIds[idxp] = selectedValues;\r\n\t\tthis.setState({ selectedSpecValueIds: selectedSpecValueIds });\r\n\t}\r\n\r\n\tonChange = (name) => (item) => {\r\n\t\tconst id = item.id;\r\n\r\n\t\tthis.setState({ [name]: id })\r\n\t}\r\n\r\n\tonInputChanged = (name, value) => {\r\n\t\tif (this.state.mode != cnst.SHOW_MODE_LIST)\r\n\t\t\tthis.validateFields(this, validator, name, value);\r\n\r\n\t\tthis.setState({ [name]: value })\r\n\t}\r\n\r\n\tpriceOrQtyValueChanged = (name, value) => {\r\n\t\tconst combinedSpecValueNames = this.state.combinedSpecValueNames;\r\n\t\tlet priceAndQtyValues = this.state.priceAndQtyValues;\r\n\t\tconst specEntities = this.state.specEntities;\r\n\t\tpriceAndQtyValues = cmdu.getPriceNQtyValues(priceAndQtyValues, combinedSpecValueNames, specEntities);\r\n\r\n\t\tconst ids = name.split('-');\r\n\t\tconst fieldName = ids[0];\r\n\t\tconst idSpecNo = ids[1];\r\n\r\n\t\tif (typeof value == 'string' && (value.endsWith('.') || value.endsWith('.0'))) return;\r\n\t\tif (fieldName == 'inventories' || fieldName == 'inventories2') {\r\n\t\t\tvalue = parseInt(value);\r\n\t\t\tif (isNaN(value)) value = '';\r\n\t\t} else if (fieldName == 'marketPrice' || fieldName == 'ourPrice' || fieldName == 'ourPrice2') {\r\n\t\t\tvalue = parseFloat(value);\r\n\t\t\tif (isNaN(value)) value = '';\r\n\t\t}\r\n\r\n\t\tpriceAndQtyValues[idSpecNo] = {\r\n\t\t\t...priceAndQtyValues[idSpecNo],\r\n\t\t\t[fieldName]: value\r\n\t\t}\r\n\r\n\t\tthis.setState({ priceAndQtyValues: priceAndQtyValues });\r\n\t}\r\n\r\n\tbigImageFilesChanged = (newValue, opType, uriOrIdx) => {\r\n\t\tconst preValue = this.state.bigImageFiles;\r\n\t\tconst bigImageUri = this.state.bigImageUri;\r\n\r\n\t\tif ('add' == opType) {\r\n\t\t\tbigImageUri.push(uriOrIdx)\r\n\t\t\tthis.setState({ bigImageUri: bigImageUri });\r\n\t\t} else if ('rm' == opType) {\r\n\t\t\tlet bigImageUri = this.state.bigImageUri;\r\n\t\t\tbigImageUri = bigImageUri.slice(uriOrIdx, 1);\r\n\r\n\t\t\tthis.setState({ bigImageUri: bigImageUri });\r\n\t\t}\r\n\r\n\t\tthis.setState({ bigImageFiles: newValue });\r\n\t}\r\n\r\n\tsetDescriptions = (value) => {\r\n\t\tthis.setState({ descriptions: value });\r\n\t}\r\n\r\n\thasImmediately = (deliveryArr) => {\r\n\t\tif (deliveryArr && deliveryArr.indexOf(cnst.DELIVERY_TYPE_IMMEDIATELY) != -1) return true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tonConfirm = () => {\r\n\t\tJsUtil.closeMsgBox(this);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { mode, disabled, BrandId, BrandOptions, presentCycleUnit, presentCycleUnitOptions, presentCycleQty, freightTmpOptions, freightTemplateId, freightTemplate2Id,\r\n\t\t\tpayTypeOptions, payType, tradeTypeOptions, tradeType, grouponDaysOptions, grouponDays, descriptions } = this.state;\r\n\t\tconst labelKeyBrand = 'BrandName'\r\n\t\tconst labelKeyFreight = 'templateName'\r\n\t\tconst valueKeyId = 'id'\r\n\t\tconst labelKey = 'label';\r\n\t\tconst valueKey = 'value';\r\n\r\n\t\tconst labelWidth = cnst.NUM_WIDTH_LABEL\r\n\t\tconst valueWidth = cnst.NUM_WIDTH_VALUE\r\n\r\n\t\tconst immediately = this.hasImmediately(this.deliveryArr);\r\n\t\tconst shownSpecs = this.getShownSpecs(disabled, labelWidth, valueWidth)\r\n\t\tconst showAttributes = this.showAttributes(disabled, labelWidth, valueWidth)\r\n\r\n\t\treturn (\r\n\t\t\t<ColumnLayout>\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_NEAR_WHITE} />\r\n\t\t\t\t<GeneralInput name={'commodityName'} label={'*' + this.labels.commodityName} type={'text'} value={this.state.commodityName} error={this.state.errors.commodityName} onChange={this.onInputChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t<SelectInput options={freightTmpOptions} labelKey={labelKeyFreight} valueKey={valueKeyId} value={freightTemplateId} onChange={this.onChange('freightTemplateId')} label={'*' + this.labels.freightTemplateId} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t{immediately &&\r\n\t\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t}\r\n\t\t\t\t{immediately &&\r\n\t\t\t\t\t<SelectInput options={freightTmpOptions} labelKey={labelKeyFreight} valueKey={valueKeyId} value={freightTemplate2Id} onChange={this.onChange('freightTemplate2Id')} label={'*' + this.labels.freightTemplateId + '(即时)'} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t<SelectInput options={payTypeOptions} labelKey={labelKey} valueKey={valueKey} value={payType} onChange={JsUtil.onValueChange(this, 'payType')} label={'*' + this.labels.payType} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t<SelectInput options={tradeTypeOptions} labelKey={labelKey} valueKey={valueKey} value={tradeType} onChange={JsUtil.onValueChange(this, 'tradeType')} label={'*' + this.labels.tradeType} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t{this.deliveryArr.indexOf(cnst.DELIVERY_TYPE_ONLINE) == -1 &&\r\n\t\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t}\r\n\t\t\t\t{this.deliveryArr.indexOf(cnst.DELIVERY_TYPE_ONLINE) == -1 &&\r\n\t\t\t\t\t<GeneralInput name={'weight'} label={'*' + this.labels.weight} type={'digit'} value={this.state.weight} error={this.state.errors.weight} onChange={this.onInputChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t<GeneralInput name={'awardRate'} label={this.labels.awardRate} type={'digit'} value={this.state.awardRate} error={this.state.errors.awardRate} onChange={this.onInputChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t<GeneralInput name={'presentRate'} label={this.labels.presentRate} type={'digit'} value={this.state.presentRate} error={this.state.errors.presentRate} onChange={this.onInputChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t<SelectInput options={presentCycleUnitOptions} labelKey={labelKey} valueKey={valueKey} value={presentCycleUnit} onChange={JsUtil.onValueChange(this, 'presentCycleUnit')} label={this.labels.presentCycleUnit} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t<GeneralInput name={'presentCycleQty'} label={this.labels.presentCycleQty} type={'number'} value={presentCycleQty} error={this.state.errors.presentCycleQty} onChange={this.onInputChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t<GeneralInput name={'voucherRate'} label={this.labels.voucherRate} type={'digit'} value={this.state.voucherRate} error={this.state.errors.voucherRate} onChange={this.onInputChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t<SelectInput options={BrandOptions} labelKey={labelKeyBrand} valueKey={valueKeyId} value={BrandId} onChange={this.onChange('BrandId')} label={this.labels.BrandId} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t<GeneralInput name={'commodityNo'} label={this.labels.commodityNo} type={'text'} value={this.state.commodityNo} error={this.state.errors.commodityNo} onChange={this.onInputChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t<GeneralInput name={'remark'} label={this.labels.remark} type={'text'} value={this.state.remark} error={this.state.errors.remark} onChange={this.onInputChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t{(mode == cnst.SHOW_MODE_VIEW) && <GeneralInput name={'updateTime'} label={this.labels.updateTime} type={'text'} value={this.state.updateTime} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />}\r\n\r\n\t\t\t\t{this.state.tradeType == 5 &&\r\n\t\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t}\r\n\t\t\t\t{this.state.tradeType == 5 &&\r\n\t\t\t\t\t<SelectInput options={grouponDaysOptions} labelKey={labelKey} valueKey={valueKey} value={grouponDays} onChange={this.onChange('grouponDays')} label={this.labels.grouponDays} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\t\t\t\t}\r\n\t\t\t\t{this.state.tradeType == 5 &&\r\n\t\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_WHITE} />\r\n\t\t\t\t}\r\n\t\t\t\t{this.state.tradeType == 5 &&\r\n\t\t\t\t\t<GeneralInput name={'grouponQty'} label={this.labels.grouponQty} type={'number'} value={this.state.grouponQty} error={this.state.errors.grouponQty} onChange={this.onInputChanged} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<BrView height={16} backgroundColor={cnst.COLOR_BACKGROUND_NEAR_WHITE} />\r\n\t\t\t\t{shownSpecs}\r\n\r\n\t\t\t\t<BrView height={16} backgroundColor={cnst.COLOR_BACKGROUND_NEAR_WHITE} />\r\n\t\t\t\t<TextLabel>商品图片</TextLabel>\r\n\t\t\t\t<ImagePicker that={this} files={this.state.bigImageFiles} onChange={this.bigImageFilesChanged} count={10} category={cnst.BIZZ_CAT_COMMODITY} disabled={disabled} labelWidth={labelWidth} valueWidth={valueWidth} />\r\n\r\n\t\t\t\t<BrView height={16} backgroundColor={cnst.COLOR_BACKGROUND_NEAR_WHITE} />\r\n\t\t\t\t<TextLabel>商品介绍</TextLabel>\r\n\t\t\t\t<RichTextInput value={descriptions} onChange={descriptions => this.setDescriptions(descriptions)} />\r\n\t\t\t\t<BrView height={16} backgroundColor={cnst.COLOR_BACKGROUND_NEAR_WHITE} />\r\n\t\t\t\t{showAttributes}\r\n\t\t\t\t<BrView height={36} backgroundColor={cnst.COLOR_BACKGROUND_NEAR_WHITE} />\r\n\t\t\t</ColumnLayout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default CommodityThird;\r\n","const cmmd = {}\r\n\r\nconst permuteAndCombine = (selectedSpecValueNames) => {\r\n  var len = selectedSpecValueNames.length;\r\n\r\n  if (len > 1) {\r\n    // 第一个数组的长度\r\n    var len1 = selectedSpecValueNames[0].length;\r\n    // 第二个数组的长度\r\n    var len2 = selectedSpecValueNames[1].length;\r\n    // 2个数组产生的组合数\r\n\r\n    //  申明一个新数组\r\n    var items = new Array();\r\n    // 申明新数组的索引\r\n    var index = 0;\r\n    if (len1 == 0) {\r\n      items = selectedSpecValueNames[1];\r\n    } else if (len2 == 0) {\r\n      items = selectedSpecValueNames[0];\r\n    } else {\r\n      for (var i = 0; i < len1; i++) {\r\n        for (var j = 0; j < len2; j++) {\r\n          if (selectedSpecValueNames[0][i] instanceof Array) {\r\n            items[index] = selectedSpecValueNames[0][i].concat(selectedSpecValueNames[1][j]);\r\n          } else {\r\n            items[index] = [selectedSpecValueNames[0][i]].concat(selectedSpecValueNames[1][j]);\r\n          }\r\n          index++;\r\n        }\r\n      }\r\n    }\r\n\r\n    var newArr = new Array(len - 1);\r\n    for (var i = 2; i < selectedSpecValueNames.length; i++) {\r\n      newArr[i - 1] = selectedSpecValueNames[i];\r\n    }\r\n    newArr[0] = items;\r\n    return permuteAndCombine(newArr);\r\n  } else {\r\n    return selectedSpecValueNames[0];\r\n  }\r\n}\r\ncmmd.permuteAndCombine = permuteAndCombine;\r\n\r\nconst specCheckChanged = (that, index1, index2, specName, speValueName, checked) => {\r\n  let checkArr = that.state.specCheckedArr;\r\n  \r\n  if (!checked && checkArr[index1].filter(checkedSpec => checkedSpec == true).length == 0) {\r\n    return;\r\n  }\r\n  \r\n  if (checkArr[index1][index2] == checked) {\r\n    return;\r\n  }\r\n  \r\n  checkArr[index1][index2] = checked;\r\n  \r\n  that.setState({\r\n    specCheckedArr: checkArr\r\n  })\r\n\r\n  let selectedSpecValueNames = that.state.selectedSpecValueNames;\r\n  let specNames = that.state.specNames;\r\n  if (selectedSpecValueNames.length < that.state.specEntities.length) {\r\n    for (let i = 0; i < that.state.specEntities.length; i++) {\r\n      selectedSpecValueNames[i] = new Array();\r\n    }\r\n  }\r\n\r\n  if (checked == true) {\r\n    specNames[index1] = specName;\r\n    selectedSpecValueNames[index1].push(speValueName);\r\n  } else if (checked == false) {\r\n    const arr = selectedSpecValueNames[index1];\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (arr[i] == speValueName) {\r\n        arr.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  that.setState({\r\n    selectedSpecValueNames: selectedSpecValueNames,\r\n    specNames: specNames\r\n  });\r\n\r\n  let params = [];\r\n  for (let i = 0; i < selectedSpecValueNames.length; i++) {\r\n    let param = {}\r\n    let values = [];\r\n    for (let j = 0; j < selectedSpecValueNames[i].length; j++) {\r\n      values.push(selectedSpecValueNames[i][j]);\r\n      param = {\r\n        specName: that.state.specNames[i],\r\n        specValues: JSON.stringify(values)\r\n      }\r\n    }\r\n    params.push(param);\r\n  }\r\n  //that.setState({ tablecolSapn: params.filter(e => !!e.specName) });\r\n\r\n  const combinedSpecValueNames = permuteAndCombine(selectedSpecValueNames);\r\n  console.log('combinedSpecValueNames : ', combinedSpecValueNames);\r\n\r\n  let priceAndQtyValues = that.state.priceAndQtyValues;\r\n  console.log('priceAndQtyValues: ', priceAndQtyValues);\r\n  const specEntities = that.state.specEntities;\r\n  priceAndQtyValues = cmmd.getPriceNQtyValues(priceAndQtyValues, combinedSpecValueNames, specEntities);\r\n  console.log('priceAndQtyValues2: ', priceAndQtyValues);\r\n  \r\n  that.setState({\r\n    combinedSpecValueNames: combinedSpecValueNames.map(e => {\r\n      if (Array.isArray(e)) {\r\n        return e;\r\n      } else {\r\n        return [e];\r\n      }\r\n    }), priceAndQtyValues: priceAndQtyValues\r\n  });\r\n}\r\ncmmd.specCheckChanged = specCheckChanged;\r\n\r\nconst getSpecTableValue = (priceAndQtyValues, combinedSpecValueNames, specEntities) => {\r\n  const inputvalue = [];\r\n\r\n  for (let i = 0; i < combinedSpecValueNames.length; i++) {\r\n    let result = '';\r\n    for (\r\n      let matchesIndex = 0;\r\n      matchesIndex < combinedSpecValueNames[i].length;\r\n      matchesIndex++\r\n    ) {\r\n      result = `${result}${specEntities[matchesIndex].specName}:${\r\n        combinedSpecValueNames[i][matchesIndex]\r\n        }${matchesIndex == combinedSpecValueNames[i].length - 1 ? '' : ','}`;\r\n    }\r\n    const priceNQtyValue = priceAndQtyValues[result];\r\n    inputvalue[i] = priceNQtyValue;\r\n\r\n    if (Array.isArray(combinedSpecValueNames[i])) {\r\n      inputvalue[i].specvalues = combinedSpecValueNames[i].map((e, index) => {\r\n        const vItem = specEntities[index].specValues.find(\r\n          specItem => specItem.specValue == e\r\n        );\r\n        if (!vItem) return {};\r\n\r\n        return {\r\n          n: specEntities[index].specName,\r\n          ni: specEntities[index].id,\r\n          v: vItem.specValue,\r\n          vi: vItem.id\r\n        }\r\n      });\r\n    } else {\r\n      const vItem = specEntities[0].specValues.find(\r\n        specItem => specItem.specValue == combinedSpecValueNames[i]\r\n      );\r\n\r\n      if (vItem) {\r\n        inputvalue[i].specvalues = [\r\n          {\r\n            n: specEntities[0].specName,\r\n            ni: specEntities[0].id,\r\n            v: vItem.specValue,\r\n            vi: vItem.id\r\n          }\r\n        ];\r\n      }\r\n    }\r\n  }\r\n\r\n  return inputvalue;\r\n}\r\ncmmd.getSpecTableValue = getSpecTableValue;\r\n\r\nconst getPriceNQtyValues = (priceAndQtyValues, combinedSpecValueNames, specEntities) => {\r\n  for (let i = 0; i < combinedSpecValueNames.length; i++) {\r\n    let specValueName = '';\r\n    if (specEntities.length == 1) {\r\n      specValueName = `${specEntities[0].specName}:${combinedSpecValueNames[i]}`;\r\n    } else {\r\n      for (let matchesIndex = 0; matchesIndex < specEntities.length; matchesIndex++) {\r\n        specValueName = `${specValueName}${specEntities[matchesIndex].specName}:${combinedSpecValueNames[i][matchesIndex]}${matchesIndex == combinedSpecValueNames[i].length - 1 ? '' : ','}`;\r\n      }\r\n    }\r\n\r\n    if (!priceAndQtyValues[specValueName])\r\n      priceAndQtyValues[specValueName] = { specNo: specValueName }\r\n  }\r\n\r\n  return priceAndQtyValues;\r\n}\r\ncmmd.getPriceNQtyValues = getPriceNQtyValues;\r\n\r\nexport default cmmd\r\n"],"names":[],"sourceRoot":""}