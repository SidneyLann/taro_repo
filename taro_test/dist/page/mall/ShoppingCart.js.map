{"version":3,"file":"page/mall/ShoppingCart.js","mappingspKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AA0BA;AAAA;AAAA;AACA;AAAA;AA+BA;AACA;AACA;AACA;AA+BA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAxOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AA+KA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA","sources":["webpack://i_bizz_client/./src/page/mall/ShoppingCart.tsx?b891","webpack://i_bizz_client/._src_page_mall_ShoppingCart.tsx","webpack://i_bizz_client/._src_pkgmall_page_mall_ShoppingCartDetail.tsx"],"sourcesContent":["import _classCallCheck from \"c:/taro/i_bizz_client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"c:/taro/i_bizz_client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"c:/taro/i_bizz_client/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"c:/taro/i_bizz_client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _defineProperty from \"c:/taro/i_bizz_client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport React from 'react';\nimport JsUtil from 'tsx/common/JsUtil';\nimport cnst from 'tsx/common/Constant';\nimport URI from 'tsx/common/URI';\nimport HeadLayout from 'tsx/layout/HeadLayout';\nimport BrView from 'tsx/view/BrView';\nimport TabPane from 'tsx/view/TabPane';\nimport ShoppingCartDetail from 'pkgmall/mall/ShoppingCartDetail';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ShoppingCart = /*#__PURE__*/function (_React$Component) {\n  function ShoppingCart(props) {\n    var _this;\n    _classCallCheck(this, ShoppingCart);\n    _this = _callSuper(this, ShoppingCart, [props]);\n    _defineProperty(_this, \"currOrgType\", JsUtil.getAppItem('currOrgType'));\n    _defineProperty(_this, \"selectedSpecIds\", []);\n    _defineProperty(_this, \"changeTab\", function (value) {\n      _this.setState({\n        currTabIdx: value\n      });\n    });\n    _defineProperty(_this, \"onCheckBoxesAllChanged\", function (name, selectedValues) {\n      _this.setState({\n        checkAll: selectedValues.length\n      });\n    });\n    _defineProperty(_this, \"setSelectedSpecIds\", function (selectedSpecIds) {\n      _this.selectedSpecIds = selectedSpecIds;\n    });\n    _defineProperty(_this, \"deleteFunc\", function () {\n      if (_this.selectedSpecIds.length == 0) {\n        JsUtil.showMsgBox(_this, '请选中商品');\n        return;\n      }\n      var currTabIdx = _this.state.currTabIdx;\n      var uri = '';\n      if (currTabIdx == 0) {\n        uri = '/cm/pub/b2c/global/cart/spec/delete';\n      } else if (currTabIdx == 1) {\n        uri = '/cm/pub/b2c/region/cart/spec/delete';\n      } else if (currTabIdx == 2) {\n        if (_this.currOrgType == cnst.ORG_TYPE_OP) {\n          uri = '/cm/pub/b2b/global/cart/spec/delete';\n        } else if (_this.currOrgType == cnst.ORG_TYPE_ST) {\n          uri = '/cm/pub/b2b/region/cart/spec/delete';\n        }\n      }\n      var succ = function succ(result) {\n        if (JsUtil.handleMessage(_this, result)) {\n          _this.setState({\n            refreshDetail: _this.state.refreshDetail + 1\n          });\n\n          //JsUtil.go2Tab(URI.MALL_HOME)\n        }\n      };\n      var err = function err(result) {\n        JsUtil.handleMessage(_this, result, true);\n      };\n      JsUtil.asyncHttpPost(_this, uri, JSON.stringify(_this.selectedSpecIds), succ, err);\n    });\n    _defineProperty(_this, \"preOrder\", function () {\n      if (_this.selectedSpecIds.length == 0) {\n        JsUtil.showMsgBox(_this, '请选中商品');\n      } else {\n        JsUtil.go2Page(URI.ORDER_PLACE_ORDER);\n      }\n    });\n    _defineProperty(_this, \"onConfirm\", function () {\n      JsUtil.closeMsgBox(_this);\n    });\n    _this.state = {\n      currTabIdx: 0,\n      checkAll: 0,\n      refreshDetail: 0,\n      messages: {}\n    };\n    return _this;\n  }\n  _inherits(ShoppingCart, _React$Component);\n  return _createClass(ShoppingCart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('ShoppingCart componentDidMount');\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log('ShoppingCart componentWillUnmount');\n    }\n  }, {\n    key: \"componentDidShow\",\n    value: function componentDidShow() {\n      console.log('ShoppingCart componentDidShow');\n      this.setState({\n        refreshDetail: this.state.refreshDetail + 1\n      });\n    }\n  }, {\n    key: \"componentDidHide\",\n    value: function componentDidHide() {\n      console.log('ShoppingCart componentDidHide');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var tabOptions = [];\n      var idx = 0;\n      tabOptions.push({\n        idx: idx++,\n        title: '全国b2c',\n        mallType: cnst.MALL_TYPE_G_B2C\n      });\n      tabOptions.push({\n        idx: idx++,\n        title: '地方b2c',\n        mallType: cnst.MALL_TYPE_R_B2C\n      });\n      if (this.currOrgType == cnst.ORG_TYPE_OP) tabOptions.push({\n        idx: idx++,\n        title: '全国b2b',\n        mallType: cnst.MALL_TYPE_R_B2B\n      });\n      if (this.currOrgType == cnst.ORG_TYPE_ST) tabOptions.push({\n        idx: idx++,\n        title: '地方b2b',\n        mallType: cnst.MALL_TYPE_R_B2B\n      });\n      var currTabIdx = this.state.currTabIdx;\n      var checkAll = this.state.checkAll;\n      return /*#__PURE__*/_jsx(HeadLayout, {\n        that: this,\n        bottomLabel1: '全选',\n        bottomFunc1: this.onCheckBoxesAllChanged,\n        bottomLabel2: '删除',\n        bottomFunc2: this.deleteFunc,\n        bottomLabel4: '结算',\n        bottomFunc4: this.preOrder,\n        children: /*#__PURE__*/_jsxs(TabPane, {\n          currTabIdx: currTabIdx,\n          tabOptions: tabOptions,\n          onClick: this.changeTab,\n          children: [/*#__PURE__*/_jsx(BrView, {\n            height: cnst.NUM_HEIGHT_LINE,\n            backgroundColor: cnst.COLOR_BACKGROUND_TRANS_WHITE\n          }), /*#__PURE__*/_jsx(ShoppingCartDetail, {\n            mallType: tabOptions[currTabIdx].mallType,\n            setSelectedSpecIds: function setSelectedSpecIds(selectedSpecIds) {\n              return _this2.setSelectedSpecIds(selectedSpecIds);\n            },\n            checkAll: checkAll,\n            refreshDetail: this.state.refreshDetail\n          })]\n        })\n      });\n    }\n  }]);\n}(React.Component);\nexport default ShoppingCart;","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"!!../../../node_modules/@tarojs/taro-loader/lib/entry-cache.js?name=page/mall/ShoppingCart!./ShoppingCart.tsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'page/mall/ShoppingCart', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","import React from 'react'\nimport { observer, inject } from 'mobx-react'\nimport JsUtil from 'tsx/common/JsUtil'\nimport cnst from 'tsx/common/Constant'\nimport DivView from 'tsx/view/DivView'\nimport BrView from 'tsx/view/BrView'\nimport RowLayout from 'tsx/layout/RowLayout'\nimport TaroModal from 'tsx/component/TaroModal'\nimport LegenImage from 'tsx/view/LegenImage'\nimport CascadeBox from 'tsx/form/CascadeBox'\nimport IntegerInput from 'tsx/form/IntegerInput'\nimport TextLabel from 'tsx/view/TextLabel'\n\ntype PageStateProps = {\n\tstore: {\n\t\torderStore: {\n\t\t\tb2bGlobalQty: [],\n\t\t\tb2bGlobalSpecIds: [],\n\t\t\tb2cGlobalQty: [],\n\t\t\tb2cGlobalSpecIds: [],\n\t\t\tB2bRegionQty: [],\n\t\t\tB2bRegionSpecIds: [],\n\t\t\tb2cRegionQty: [],\n\t\t\tb2cRegionSpecIds: [],\n\t\t\tmallType: number,\n\t\t\tsetB2cGlobalQty: Function\n\t\t}\n\t}\n}\n\ninterface ShoppingCartDetail {\n\tprops: PageStateProps\n}\n\n@inject('store')\n@observer\nclass ShoppingCartDetail extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tcheckedList: [],\n\t\t\tcheckedList2: [],\n\t\t\tquantityList2: [],\n\t\t\tmessages: {}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log('ShoppingCartDetail componentDidMount')\n\t\tthis.fetchShopingCart();\n\t}\n\n\tcomponentDidUpdate(preProps, preState, spanshot) {\n\t\tif (this.props.mallType != preProps.mallType || this.props.refreshDetail != preProps.refreshDetail) {\n\t\t\tthis.fetchShopingCart();\n\t\t}\n\n\t\tconst checkAll = this.props.checkAll;\n\t\tif (checkAll != preProps.checkAll) {\n\t\t\tif (checkAll == 0) {\n\t\t\t\tthis.setState({ checkedList: [], checkedList2: [] }, () => this.save2Store());\n\t\t\t} else if (this.checkedAllList) {\n\t\t\t\tthis.getQty(this.records)\n\t\t\t\tthis.setState({ checkedList: this.checkedAllList, checkedList2: this.checkedAllList2 }, () => this.save2Store());\n\t\t\t}\n\t\t}\n\t}\n\n\tmemberId = JsUtil.getAppItem('currUserId');\n\trecords = []\n\tcheckedAllList = []\n\tcheckedAllList2 = []\n\n\tfetchShopingCart() {\n\t\tlet path = ''\n\t\tif (this.props.mallType == cnst.MALL_TYPE_G_B2B) {\n\t\t\tpath = 'b2b/global'\n\t\t} else if (this.props.mallType == cnst.MALL_TYPE_G_B2C) {\n\t\t\tpath = 'b2c/global'\n\t\t} else if (this.props.mallType == cnst.MALL_TYPE_R_B2B) {\n\t\t\tpath = 'b2b/region'\n\t\t} else if (this.props.mallType == cnst.MALL_TYPE_R_B2C) {\n\t\t\tpath = 'b2c/region'\n\t\t}\n\n\t\tconst succ = (result) => {\n\t\t\tif (JsUtil.handleMessage(this, result)) {\n\t\t\t\tthis.records = result.body\n\n\t\t\t\t// this.setState({ [name]2: checkedList2, quantityList2: quantityList2 });\n\t\t\t\tthis.setState({ quantityList2: this.getQty(this.records) });\n\t\t\t}\n\t\t}\n\n\t\tconst err = (result) => {\n\t\t\tJsUtil.handleMessage(this, result, true, true)\n\t\t}\n\n\t\tJsUtil.asyncHttpGet(this, `/cm/pub/${path}/cart/2/search?memberId=${this.memberId}`, succ, err)\n\t}\n\n\tgetQty = (records) => {\n\t\tconst checkedList = []\n\t\tconst checkedList2 = []\n\t\tconst quantityList2 = []\n\n\t\trecords.map((item, idx) => {\n\t\t\tconst checkedList22 = []\n\t\t\tconst quantityList22 = []\n\t\t\titem.second.map((item2, idx2) => {\n\t\t\t\tcheckedList22.push(item2.specId)\n\t\t\t\tquantityList22.push(item2.quantity)\n\t\t\t})\n\n\t\t\tcheckedList2.push([...checkedList22])\n\t\t\tquantityList2.push(quantityList22)\n\t\t\tcheckedList.push('' + idx)\n\t\t})\n\n\t\tthis.checkedAllList = checkedList\n\t\tthis.checkedAllList2 = checkedList2\n\n\t\treturn quantityList2;\n\t}\n\n\thandleQuantity = (idx, idxp) => (name, value) => {\n\t\tconst preQuantity2 = this.state.quantityList2\n\n\t\tpreQuantity2[idxp][idx] = value\n\n\t\tthis.setState({ quantityList2: preQuantity2 });\n\n\t\tthis.save2Store()\n\t}\n\n\tinitCartStore = (mallType) => {\n\t\tconst { orderStore } = this.props.store\n\t\tif (mallType == cnst.MALL_TYPE_G_B2B) {\n\t\t\torderStore.setMallType(cnst.MALL_TYPE_G_B2B)\n\t\t} else if (mallType == cnst.MALL_TYPE_G_B2C) {\n\t\t\torderStore.setMallType(cnst.MALL_TYPE_G_B2C)\n\t\t} else if (mallType == cnst.MALL_TYPE_R_B2B) {\n\t\t\torderStore.setMallType(cnst.MALL_TYPE_R_B2B)\n\t\t} else if (mallType == cnst.MALL_TYPE_R_B2C) {\n\t\t\torderStore.setMallType(cnst.MALL_TYPE_R_B2C)\n\t\t}\n\n\t\torderStore.setB2bGlobalSpecIds([])\n\t\torderStore.setB2bGlobalQty([])\n\n\t\torderStore.setB2cGlobalSpecIds([])\n\t\torderStore.setB2cGlobalQty([])\n\n\t\torderStore.setB2bRegionSpecIds([])\n\t\torderStore.setB2bRegionQty([])\n\n\t\torderStore.setB2cRegionSpecIds([])\n\t\torderStore.setB2cRegionQty([])\n\t}\n\n\tsave2Store = () => {\n\t\tconst mallType = this.props.mallType\n\t\tthis.initCartStore(mallType)\n\n\t\tconst checkedList2 = this.state.checkedList2\n\t\tconst quantityList2 = this.state.quantityList2\n\t\tconst checkedAllList2 = this.checkedAllList2\n\t\tconst selectedSpecIds = []\n\t\tconst selectedSpecQty = []\n\t\tcheckedAllList2.map((item, indx) => {\n\t\t\titem.map((item2, indx2) => {\n\t\t\t\tif (JsUtil.containEleValue(checkedList2, item2)) {\n\t\t\t\t\tselectedSpecIds.push(item2)\n\t\t\t\t\tselectedSpecQty.push(quantityList2[indx][indx2])\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\n\t\tconst { orderStore } = this.props.store\n\n\t\tif (mallType == cnst.MALL_TYPE_G_B2B) {\n\t\t\torderStore.setB2bGlobalSpecIds(selectedSpecIds)\n\t\t\torderStore.setB2bGlobalQty(selectedSpecQty)\n\t\t\torderStore.setMallType(cnst.MALL_TYPE_G_B2B)\n\t\t} else if (mallType == cnst.MALL_TYPE_G_B2C) {\n\t\t\torderStore.setB2cGlobalSpecIds(selectedSpecIds)\n\t\t\torderStore.setB2cGlobalQty(selectedSpecQty)\n\t\t\torderStore.setMallType(cnst.MALL_TYPE_G_B2C)\n\t\t} else if (mallType == cnst.MALL_TYPE_R_B2B) {\n\t\t\torderStore.setB2bRegionSpecIds(selectedSpecIds)\n\t\t\torderStore.setB2bRegionQty(selectedSpecQty)\n\t\t\torderStore.setMallType(cnst.MALL_TYPE_R_B2B)\n\t\t} else if (mallType == cnst.MALL_TYPE_R_B2C) {\n\t\t\torderStore.setB2cRegionSpecIds(selectedSpecIds)\n\t\t\torderStore.setB2cRegionQty(selectedSpecQty)\n\t\t\torderStore.setMallType(cnst.MALL_TYPE_R_B2C)\n\t\t}\n\n\t\tthis.props.setSelectedSpecIds(selectedSpecIds);\n\t}\n\n\tgetCommodityOptions = (records) => {\n\t\tconst options = []\n\t\tconst quantityList2 = this.state.quantityList2\n\n\t\trecords.map((item, indx) => {\n\t\t\tconst options2 = []\n\t\t\titem.second.map((item2, indx2) => {\n\t\t\t\toptions2.push({\n\t\t\t\t\tidxp: indx, value: item2.specId,\n\t\t\t\t\tlabel: (<RowLayout><LegenImage src={JsUtil.IMAGE_PREFIX + item2.commodityImageUri} width={25} height={25} /><TextLabel width={-75}>{item2.commodityName}</TextLabel></RowLayout>),\n\t\t\t\t\tdesc: (<RowLayout justifyContent='space-around' width={cnst.NUM_WIDTH_MAIN}><TextLabel color='red' >{JsUtil.currFormat(item2.specPrice)}</TextLabel><IntegerInput name={indx + '-' + indx2} min={1} max={999} value={quantityList2[indx][indx2]} onChange={this.handleQuantity(indx2, indx)} /></RowLayout>)\n\t\t\t\t})\n\t\t\t})\n\n\n\t\t\tconst checkedList2 = this.state.checkedList2\n\t\t\tconst checkedList2i = checkedList2.length > 0 ? checkedList2[indx] : [];\n\t\t\tconst desc = (\n\t\t\t\t<CascadeBox name={'checkedList2-' + indx}\n\t\t\t\t\toptions={options2}\n\t\t\t\t\tvalue={checkedList2i}\n\t\t\t\t\tonChange={this.onCheckBox2Changed}\n\t\t\t\t\tidxp={indx}\n\t\t\t\t>\n\t\t\t\t</CascadeBox>\n\t\t\t)\n\n\t\t\toptions.push({ idxp: 0, value: '' + indx, label: <TextLabel alignItems='center'>{item.first}</TextLabel>, desc: desc })\n\t\t})\n\n\t\treturn options;\n\t}\n\n\tonCheckBox1Changed = (name, selectedValues, changedValue, idx, idxp) => {\n\t\tconst preValue = this.state.checkedList\n\t\tconst preValue2 = this.state.checkedList2\n\t\tthis.getQty(this.records);\n\t\tconst checkedAllList2 = this.checkedAllList2\n\t\tif (selectedValues.find(e => e == changedValue) == undefined) preValue2[idx] = []\n\t\telse preValue2[idx] = checkedAllList2[idx]\n\n\t\tthis.setState({ [name]: selectedValues, checkedList2: preValue2 }, () => this.save2Store());\n\t}\n\n\tonCheckBox2Changed = (name, selectedValues, changedValue, idx, idxp) => {\n\t\tlet preValue = this.state.checkedList\n\t\tconst preValue2 = this.state.checkedList2\n\n\t\tpreValue2[idxp] = selectedValues\n\t\tconst length = this.checkedAllList2[idxp].length\n\t\tif (selectedValues.length < length) {\n\t\t\tlet isExists = false\n\t\t\tpreValue.map((item, indx) => {\n\t\t\t\tif (item == idxp) isExists = true;\n\t\t\t})\n\n\t\t\tif (isExists) preValue = JsUtil.delEleByValue(preValue, '' + idxp);\n\t\t} else if (selectedValues.length == length) {\n\t\t\tlet isExists = false;\n\t\t\tpreValue.map((item, indx) => {\n\t\t\t\tif (item == idxp) isExists = true;\n\t\t\t})\n\t\t\tif (!isExists) preValue.push('' + idxp);\n\t\t}\n\n\t\tthis.setState({ checkedList: preValue, checkedList2: preValue2 }, () => this.save2Store())\n\t}\n\n\tonConfirm = () => {\n\t\tJsUtil.closeMsgBox(this)\n\t}\n\n\trender() {\n\t\tconst options = this.getCommodityOptions(this.records)\n\n\t\treturn (\n\t\t\t<DivView>\n\t\t\t\t<CascadeBox name='checkedList'\n\t\t\t\t\toptions={options}\n\t\t\t\t\tvalue={this.state.checkedList}\n\t\t\t\t\tonChange={this.onCheckBox1Changed}\n\t\t\t\t>\n\t\t\t\t</CascadeBox>\n\t\t\t\t<BrView height={cnst.NUM_HEIGHT_LINE} backgroundColor={cnst.COLOR_BACKGROUND_TRANS_WHITE} />\n\t\t\t\t<TaroModal isOpened={this.state.messages.isOpened} messages={this.state.messages}></TaroModal>\n\t\t\t</DivView>\n\t\t)\n\t}\n}\n\nexport default ShoppingCartDetail;"],"names":[],"sourceRoot":""}